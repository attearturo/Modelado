%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 22.0.1
%%For: (Arturo Gomez) ()
%%Title: (walkman.ai)
%%CreationDate: 1/11/2018 12:27 AM
%%Canvassize: 16383
%%BoundingBox: 304 -930 626 -548
%%HiResBoundingBox: 304 -929.5 625.2959 -548
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%CMYKProcessColor: 1 1 1 1 ([Registro])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 414.2632 -667.8598 414.2632 -667.8598
%AI3_TileBox: 107.7412 -1063.5269 719.7412 -271.5269
%AI3_DocumentPreview: None
%AI5_ArtSize: 541.9561 794.3343
%AI5_RulerUnits: 6
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 4
%AI8_OpenToView: -145.9119 -446.1012 1.5103 1910 948 18 0 0 5 87 0 0
%AI5_OpenViewLayers: 7777
%%PageOrigin:-16 -983
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 108 128 8
%%BeginData: 4978 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD2FFF52FD057D52FD64FFA87DFD05FF7DA8FD64FF7DFD05FF7DFD
%64FFA87DFD05FF7DA8FD41FFA87DA87DA87DA87DA87DA8A8FD17FF7DFD05
%FF7DFD41FF7D7DFFA8FFA8A8A8FFA8FFA87D7DFD15FFA8A8FD05FF7DA8FD
%40FF7DFD0CFF7DA8FD15FF7DFD05FF7DFD40FFA87DFD0CFF7DFD15FFA87D
%FD05FF7DA8FD40FF7DFD0CFFA8A8FD15FF7DFD05FF7DFD40FFA87DFD0CFF
%7DFD15FFA87DFD05FFA8A8FD40FF7DFD0CFFA8A8FD15FF7DFD05FF7DFD38
%FFFD05A8FFA8FF7D7DFD0BA8FF52A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8
%A8A8FFA8FFA8527DFD04A8527DFFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF
%A8A8FD23FF7D7D7DA87DA87DA87DA8FD0F7DA87DA87DA87DA87DA87DA87D
%A87DA87DA87DA87DA8FD077DA87DA87DA87DA87DA87DA87DA87DA87DA87D
%A87D7DA8FD20FF7D7DFD48FFA87DA8FD1FFF7DFD4AFFA87DFD1FFF7DFD4B
%FF7DFD1FFFA8FD4BFFA8FD1FFF7DFD4BFF7DFD1FFF7DFD4BFFA8FD1FFF7D
%FD4BFF7DFD1FFF7DFD4BFFA8FD1FFF7DFD4BFF7DFD1FFF7DFD4AFFA8A8FD
%1FFF7DFD4BFF7DFD1FFFA8FD4BFFA8FD1FFF7DFD4BFF7DFD1FFF7DFD4BFF
%A8FD1FFF7DFD4BFF7DFD1FFF7DFD4BFFA8FD1FFF7DFD4BFF7DFD1FFF7DFD
%4AFFA8A8FD1FFF7DFD4BFF7DFD1FFFA8FD4BFFA8FD1FFF7DFD4BFF7DFD1F
%FF7DFD4BFFA8FD1FFF7DFD4BFF7DFD1FFF7DFD4BFFA8FD1FFF7DFD4BFF7D
%FD1FFF7DFD4AFFA8A8FD1FFF7DFD4BFF7DFD1FFFA8FD4BFFA8FD1FFF7DFD
%4BFF7DFD1FFF7DFD4BFFA8FD1FFF7DFD4BFF7DFD1FFF7DFD4BFFA8FD1FFF
%7DFD4BFF7DFD1FFF7DFD4AFFA8A8FD1FFF7DFD4BFF7DFD1FFFA8FD4BFFA8
%FD1FFF7DFD4BFF7DFD1FFF7DFD4BFFA8FD1FFF7DFD4BFF7DFD1FFF7DFD4B
%FFA8FD1FFF7DFD4BFF7DFD0BFFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8
%A8FFFF7DFD4AFFA8A8FD09FFA87DA87DA87DA87DA87DA87DA87DA87DA87D
%A87D7DA87DFD4BFF7DFD09FF52FD13FFA87DA8FD4BFFA8FD08FFA8A8FD14
%FF7D7DFD4BFF7DFD08FFA87DFD14FF7D7DFD4BFFA8FD08FFA8A8FD14FF7D
%7DFD4BFF7DFD08FFA87DFD14FF7D7DFD4BFFA8FD08FFA8A8FD14FF7D7DFD
%4BFF7DFD08FFA87DFD14FF7D7DFD4AFFA8A8FD08FFA8A8FD14FF7D7DFD4B
%FF7DFD08FFA87DFD14FF7DA8FD4BFFA8FD08FFA8A8FD14FF7D7DFD4BFF7D
%FD08FFA87DFD14FF7D7DFD4BFFA8FD08FFA8A8FD14FF7D7DFD4BFF7DFD08
%FFA87DFD14FF7D7DFD4BFFA8FD08FFA8A8FD14FF7D7DFD4BFF7DFD08FFA8
%7DFD14FF7D7DFD4AFFA8A8FD08FFA8A8FD14FF7D7DFD4BFF7DFD08FFA87D
%FD14FF7DA8FD4BFFA8FD08FFA8A8FD14FF7D7DFD4BFF7DFD08FFA87DFD14
%FF7D7DFD4BFFA8FD08FFA8A8FD14FF7D7DFD4BFF7DFD08FFA87DFD14FF7D
%7DFD4BFFA8FD08FFA8A8FD14FF7D7DFD4BFF7DFD08FFA87DFD14FF7D7DFD
%4AFFA8A8FD08FFA8A8FD14FF7D7DFD4BFF7DFD08FFA87DFD14FF7DA8FD4B
%FFA8FD08FFA8A8FD14FF7D7DFD4BFF7DFD08FFA87DFD14FF7D7DFD4BFFA8
%FD08FFA8A8FD14FF7D7DFD4BFF7DFD08FFA87DFD14FF7D7DFD4BFFA8FD08
%FFA8A8FD14FF7D7DFD4BFF7DFD08FFA87DFD14FF7D7DFD4AFFA8A8FD08FF
%A8A8FD14FF7D7DFD4BFF7DFD08FFA87DFD14FF7DA8FD4BFFA8FD08FFA8A8
%FD14FF7D7DFD4BFF7DFD08FFA87DFD14FF7D7DFD4BFFA8FD08FFA8A8FD14
%FF7D7DFD4BFF7DFD08FFA87DFD14FF7D7DFD4BFFA8FD08FFA8A8FD14FF7D
%7DFD4BFF7DFD08FFA87DFD14FF7D7DFD4AFFA8A8FD08FFA8A8FD14FF7D7D
%FD4BFF7DFD08FFA87DFD14FF7DA8FD4BFFA8FD08FFA8A8FD14FF7D7DFD4B
%FF7DFD08FFA87DFD14FF7D7DFD4BFFA8FD08FFA8A8FD14FF7D7DFD4BFF7D
%FD09FF52FD13FFA87D7DFD4BFFA8FD0AFF7DA87DA87DA87DA87DA87DA87D
%A87DA87DA87D7DFF7DFD4BFF7DFD0BFFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFFFFF7DFD4AFFA8A8FD1FFF7DFD4BFF7DFD1FFFA8FD4BFFA8FD1F
%FF7DFD4BFF7DFD1FFF7DFD4BFFA8FD1FFF7DFD4BFF7DFD1FFF7DFD4BFFA8
%FD1FFF7DFD4BFF7DFD1FFF7DFD4AFFA8A8FD1FFF7DFD4BFF7DFD1FFFA8FD
%4BFFA8FD1FFF7DFD4BFF7DFD1FFF7DFD4BFFA8FD1FFF7DFD4BFF7DFD1FFF
%7DFD4BFFA8FD1FFF7DFD4BFF7DFD1FFF7DFD4AFFA8A8FD1FFF7DFD4BFF7D
%FD1FFFA8FD4BFFA8FD1FFF7DFD4BFF7DFD1FFF7DFD4BFFA8FD1FFF7DFD4B
%FF7DFD1FFF7DFD4BFFA8FD1FFF7DFD4BFF7DFD1FFFA87DFD49FF52FD21FF
%7D52FD477D52A8FD1FFFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Vectorized Object) (Calco de imagen) (Vectorize.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (Flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Plugin de envolventes de Adobe) (Deform.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Plugin Pintura interactiva de Adobe) (PlanetX.aip)
%AI8_PluginGroupInfo
(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)
%AI8_PluginGroupInfo
(Adobe Line Plugin Group) (Ilustraci\363n de Line) (Illustrator.exe)
%AI8_PluginGroupInfo
(Adobe Sketch Plugin Group) (Ilustraci\363n de Sketch) (Illustrator.exe)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Plugin Fusiones de Adobe) (LiveBlends.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Plugin Pincel caligr\341fico de Adobe) (CalligraphicBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (S\355mbolos de Adobe) (ParticleSystem.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Plugin Pincel de motivo de Adobe) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Plugin Pincel de motivo de Adobe) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Plugin Pincel de arte de Adobe) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Plugin Pincel de arte de Adobe) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Plugin Pincel de dispersi\363n de Adobe) (ScatterBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Plugin Pincel de dispersi\363n de Adobe) (ScatterBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Pattern Editor Plugin Group) (Adobe Pattern Editor Plugin Group) (SwatchLibs.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Forma compuesta de Adobe) (PathfinderS.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
5 Bn
%AI5_BeginGradient: (Anillo dorado)
(Anillo dorado) 1 7 Bd
[
0
0
0
0
1
1
1
4 %_Br
<
000000000101000000000203030202030504050504040607060606060608080808080709090A0909
090A0A0B0B0A0A0D0D0C0C0C0B0E0E0E0E0E0E0E1010101010101112121211111312131313121415
15141414141616171616161717171817171918191919181B1B1A1A1A1A1B1C1C1C1B1B1B1C1C1D1D
1C1C1F1E1E1E1E1E20201F2020202121212020202021212121212123222222222224242424242425
2525252525272626262626262827272727272929282828282929292929292A2A2A2A2A2A2A2B2B2B
2B2A2A2C2C2C2C2C2C2D2D2D2D2D2D2E2E2E2E2D2D2F2F2E2E
>
<
00000202010104040507050505080808060908080A0A09090B0A0A0D0D0B0B0E0D0D0F0E0E0E1010
101111101012121111131212141313131414141615151416161617171717191817191919191B1A1A
1A1B1B1B1C1C1C1B1D1D1D1E1D1D1D1F1F1E20201F1F212020212121212222222224242324242424
26252526262626282626282828282929282A2A2A2A2A2A2A2A2C2B2B2C2C2C2C2E2D2D2E2E2E2E2F
2F2F3030302F31313133333332333333333534343535353536363637373736383838393939383939
393B3B3A3A3C3C3B3B3C3C3C3D3D3D3D3E3E3E40403F3F4141
>
<
000102040608090B0D0E10111313151718191B1C1D1F212223252627292A2B2C2E2F303233343537
38393A3C3D3D3F41424244454648494B4B4D4E4E50515353545657585A5B5C5D5E5F606163636667
68696A6B6B6D6E70707374757778797A7B7D7E7F8081828485868788898A8B8D8F8F909293949597
98999B9C9D9D9E9FA0A2A2A4A5A7A8AAACADAEAFB0B1B2B3B5B6B8B9BABCBDBEBEC0C1C2C3C5C6C7
C8C9CACBCCCDCFD0D1D1D2D3D4D5D6D8D9D9DADBDBDDDEDFE0E0E1E2E2E3E4E5E6E7E7E7E8E9E9EA
EBECECEDEDEDEEEFF0F0F1F2F2F3F3F4F4F4F5F5F5F6F6F6F6
>
0
<
FFFFFFFFFEFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAFAFAF9F9F9F9F9
F9F8F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F4F3F3F3F3F3F3F2F2
F2F2F2F2F1F1F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEEEEEDEDEDEDEDEDEDECECECEC
ECECEBEBEBEBEBEBEAEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E8E7E7E7E7E7E7E6E6E6E6E6E6E5
E5E5E5E5E5E4E4E4E4E4E4E4E3E3E3E3E3E3E2E2E2E2E2E2E1E1E1E1E1E1E0E0E0E0E0E0DFDFDFDF
DFDFDFDEDEDEDEDEDEDDDDDDDDDDDDDCDCDCDCDCDCDBDBDBDB
>
<
FFFFFEFEFEFEFDFDFDFCFCFCFCFBFBFBFAFAFAFAF9F9F9F9F8F8F8F7F7F7F7F6F6F6F5F5F5F5F4F4
F4F3F3F3F3F2F2F2F1F1F1F1F0F0F0F0EFEFEFEEEEEEEEEDEDEDECECECECEBEBEBEAEAEAEAE9E9E9
E8E8E8E8E7E7E7E7E6E6E6E5E5E5E5E4E4E4E3E3E3E3E2E2E2E1E1E1E1E0E0E0DFDFDFDFDEDEDEDE
DDDDDDDCDCDCDCDBDBDBDADADADAD9D9D9D8D8D8D8D7D7D7D6D6D6D6D5D5D5D5D4D4D4D3D3D3D3D2
D2D2D1D1D1D1D0D0D0CFCFCFCFCECECECDCDCDCDCCCCCCCCCBCBCBCACACACAC9C9C9C8C8C8C8C7C7
C7C6C6C6C6C5C5C5C4C4C4C4C3C3C3C3C2C2C2C1C1C1C1C0C0
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F
>
4 %_Br
<
2E2D2C2D2C2B2A29282827262523252422212021201F1E1C1C1C1B1B
>
<
41403F3D3C3C3B3A39373736353431302F2F2E2D2B2B2A2928262625
>
<
F6F6F6F5F5F5F4F3F3F2F2F1F1F0EFEEEEEDEDECECEBEAE9E8E8E8E7
>
0
<
DBDCDDDDDEDFE0E1E2E2E3E4E5E6E6E7E8E9EAEAEBECEDEEEFEFF0F1
>
<
C0C1C2C3C4C5C6C7C8C9CACBCCCDCFD0D1D2D3D4D5D6D7D8D9DADBDC
>
<
1F202122232425262728292A2B2C2D2E2F303132333435363738393A
>
4 %_Br
<
1B19191817
>
<
2524212120
>
<
E7E6E5E4E4
>
0
<
F1F2F3F4F5
>
<
DCDDDFE0E1
>
<
3A3B3D3E3F
>
4 %_Br
<
17181918191B1B1C1C1C1E1F20212021222324232526272828292A2B2C2D2C2D2E
>
<
202121232425262628292A2B2B2D2E2F2F32333435363737393A3B3C3C3D3F4041
>
<
E4E4E5E6E6E7E8E8E8E9EAEBECECEDEDEEEEEFF0F1F1F2F2F3F3F4F5F5F5F6F6F6
>
0
<
F5F4F3F3F2F1F0EFEFEEEDECEBEAEAE9E8E7E6E6E5E4E3E2E2E1E0DFDEDDDDDCDB
>
<
E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0
>
<
3F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F
>
4 %_Br
<
2E2E2F2F2D2D2E2E2E2E2D2D2D2D2D2D2B2C2C2C2C2C2C2A2B2B2B2B2B2A2A2A2A2A2A2A29292929
29292928282828292929272727272727282626262626262625252525252525252424242424242422
2222222222232321212121212121222020202021212121202020201F2020201E1D1E1E1E1E1E1F1E
1C1C1C1D1D1C1C1C1B1B1B1B1B1C1C1C1B1A1A1A1A1A1A1B1B1B1818191919191918191917171718
18171717171816161616161716161616141414141414141515151412121313131313121313131111
1111121212121211111210101010100F1010101010100E0E0E0E0E0E0E0D0E0E0E0E0E0C0B0B0C0C
0C0C0C0C0C0D0D0D0A0A0A0A0A0A0B0B0B0B0A0A0A0A0B09090909090909090A0A09090909090907
08080808080808080808080808080808080606060606060606060606060606060707060606040404
04040404040505050505050504040404040405050303030303020202020202020202030303030303
03030302020202020200000101010000000000000000000000000000000000000000010101010101
01010101010101010101010100000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
>
<
41413F3F40403E3E3E3D3D3D3D3C3C3C3D3B3C3C3A3A3A3B39393939383939393838383837373737
363636353535353334343533333333333233333331313131303030302F2F2F2F2E2E2E2E2D2D2D2E
2E2C2C2C2C2B2B2B2C2C2A2A2A2A292A2A2A2A282829292828282828262626282826262626262525
252626242424242423242424242222222223212121212120202021211F1F1F2020201E1E1F1F1F1D
1D1D1D1D1E1C1D1D1D1D1D1B1C1C1C1C1C1B1B1B1B1B1B1A1A1A1A1B1B1919191919191717171818
19191717171717171715161616161616141515151515161414141414141413131313131414141212
121213131311111112121212121210101010111111110E10101010101010100E0E0E0E0E0E0E0E0F
0D0D0D0D0D0D0D0E0E0E0B0B0B0B0B0B0B0D0D0D0D0A0A0A0A0A0A0A0B0B0B0B09090909090A0A0A
0A0A0A0A0A0808080808080809090909090906060808080808080808080808080808050505050505
05050505050505050507070404040505050505040404040404040404040404040404010101010101
01010101010101010101010102020202020202020202020202020200000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
>
<
F6F6F6F6F5F5F5F4F4F4F3F3F2F2F1F0EFEFEEEDEDEDEDECECEBEAE9E9E8E7E7E7E6E5E4E3E3E2E2
E1E0E0DFDEDDDBDCDBDAD9D9D8D6D5D4D4D3D2D1D1D0CFCFCDCCCBCAC9C8C8C7C6C5C3C2C2C1C0BE
BEBEBDBCBAB9B9B8B6B4B3B3B2B1B0AFAFAEADACACAAA8A7A5A5A4A2A2A2A09F9E9E9D9D9D9C9B9A
99989695959493939290908F8E8D8D8B8A8A898888878686858483828181807F7F7E7D7D7B7A7A79
797877777574747373706F706E6E6D6C6B6B6B6A69696768676766636363636161605F5F5E5E5D5D
5C5C5B5B5A585857575656545453535253515150504F4E4E4E4D4D4B4B4A4B494948484746464545
4444424241424241403F3F3D3D3C3D3D3C3C3A3A3A39393838383737353535343433333332323230
302F2F2F2E2E2E2C2C2C2B2B2B2A2A29292927272728262626252525232323212222212121201F1F
1F1D1D1D1D1C1C1C1C1B1B1B19191919181818181717171717151515151313131312131313131111
11111110101010100E0E0E0F0F0F0D0D0D0D0D0B0B0B0B0B0B0B0909090909090906080808080808
06060606060606060404040404040404040402020202020202020203030301010101010101010101
010101010101010101000000000000000000000000000000000000000000000000000000
>
0
<
DBDBDBDBDCDCDCDCDCDCDDDDDDDDDDDDDEDEDEDEDEDEDEDFDFDFDFDFDFE0E0E0E0E0E0E0E1E1E1E1
E1E1E1E2E2E2E2E2E2E2E3E3E3E3E3E3E3E4E4E4E4E4E4E4E5E5E5E5E5E5E5E5E6E6E6E6E6E6E6E7
E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEB
ECECECECECECECECEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFF0F0F0F0
F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F4F4
F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7
F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9FA
FAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFCFCFC
FCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>
<
C0C0C1C1C1C1C2C2C2C3C3C3C3C4C4C4C4C5C5C5C6C6C6C6C7C7C7C7C8C8C8C8C9C9C9C9CACACACA
CBCBCBCCCCCCCCCDCDCDCDCECECECECECFCFCFCFD0D0D0D0D1D1D1D1D2D2D2D2D3D3D3D3D4D4D4D4
D4D5D5D5D5D6D6D6D6D6D7D7D7D7D8D8D8D8D8D9D9D9D9DADADADADADBDBDBDBDBDCDCDCDCDCDDDD
DDDDDDDEDEDEDEDEDFDFDFDFDFE0E0E0E0E0E1E1E1E1E1E2E2E2E2E2E3E3E3E3E3E3E4E4E4E4E4E5
E5E5E5E5E5E6E6E6E6E6E6E7E7E7E7E7E7E8E8E8E8E8E8E9E9E9E9E9E9EAEAEAEAEAEAEBEBEBEBEB
EBEBECECECECECECECEDEDEDEDEDEDEDEEEEEEEEEEEEEEEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F1F1
F1F1F1F1F1F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5
F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9
F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFC
FCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>
<
1F202122232425262728292A2B2C2D2E2F30313233343435363738393A3B3C3D3E3F404142424344
45464748494A4B4B4C4D4E4F5051525353545556575859595A5B5C5D5E5F5F606162636464656667
6868696A6B6C6C6D6E6F707071727374747576777778797A7B7B7C7D7E7E7F808181828383848586
86878889898A8B8B8C8D8D8E8F9090919292939494959696979898999A9A9B9C9C9D9E9E9FA0A0A1
A1A2A3A3A4A5A5A6A6A7A8A8A9A9AAABABACACADAEAEAFAFB0B0B1B2B2B3B3B4B4B5B6B6B7B7B8B8
B9B9BABABBBCBCBDBDBEBEBFBFC0C0C1C1C2C2C3C3C4C4C5C5C6C6C7C7C8C8C9C9CACACACBCBCCCC
CDCDCECECFCFCFD0D0D1D1D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9D9D9DADADBDBDBDCDCDCDD
DDDEDEDEDFDFDFE0E0E0E1E1E1E2E2E3E3E3E4E4E4E4E5E5E5E6E6E6E7E7E7E8E8E8E9E9E9E9EAEA
EAEBEBEBEBECECECECEDEDEDEEEEEEEEEFEFEFEFF0F0F0F0F0F1F1F1F1F2F2F2F2F3F3F3F3F3F4F4
F4F4F4F5F5F5F5F5F6F6F6F6F6F6F7F7F7F7F7F8F8F8F8F8F8F8F9F9F9F9F9F9F9FAFAFAFAFAFAFA
FBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>
4 %_Br
[
0 0 0 0 1 1 1 2 80.4707 73.8792 %_BS
%_0 0 0 0 1 1 1 2 80.4707 73.8792 Bs
0 0 0 0 1 1 1 2 50 81.6546 %_BS
%_0 0 0 0 1 1 1 2 50 81.6546 Bs
0.181704 0.253635 0.966339 0 0.858824 0.752941 0.121569 2 50 82.3054 %_BS
%_0.181704 0.253635 0.966339 0 0.858824 0.752941 0.121569 2 50 82.3054 Bs
0.103944 0.144778 0.905974 0 0.945098 0.862745 0.227451 2 50 83.0383 %_BS
%_0.103944 0.144778 0.905974 0 0.945098 0.862745 0.227451 2 50 83.0383 Bs
0.089845 0.125612 0.892454 0 0.960784 0.882353 0.247059 2 50 83.5009 %_BS
%_0.089845 0.125612 0.892454 0 0.960784 0.882353 0.247059 2 50 83.5009 Bs
0.181704 0.253635 0.966339 0 0.858824 0.752941 0.121569 2 27.8339 83.8579 %_BS
%_0.181704 0.253635 0.966339 0 0.858824 0.752941 0.121569 2 27.8339 83.8579 Bs
0 0 0 0 1 1 1 2 50 99.929 %_BS
%_0 0 0 0 1 1 1 2 50 99.929 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Blanco, Negro)
(Blanco, Negro) 0 2 Bd
[
<
00000203050608090A0C0E0E1011121314151617191A1B1C1D1E1F2021222425262729292A2C2D2E
2F3031333435363738393A3B3C3D3E3F40414244454647484A4B4C4D4E4F51525354555758595A5C
5D5E5F6061626364656667696A6B6C6E6F70717374757678797A7B7C7D7F8081828384868788898B
8C8D8F8F90929394959697999A9B9C9D9E9FA1A2A2A3A4A6A7A8A9AAABACADAEAFB0B0B1B2B3B3B4
B5B5B6B7B8B9BABABBBBBCBDBDBEBEBFC0C1C2C2C3C3C4C5C5C6C7C7C8C8C9C9CACBCBCCCCCDCECE
CFCFD0D0D0D1D1D1D1D2D2D2D2D3D3D3D3D4D4D4D4D5D5D5D5D5D6D6D6D6D6D6D6D6D6D6D6D6D6D6
D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6
>
<
00000103040507080A0B0C0D0E0E0F10111213131415161718191A1B1B1C1D1D1F1F202122222424
25262728292A2A2B2C2D2D2E2F2F3031323333343536373838393A3B3C3C3D3E3E3F404142434445
464647494A4A4B4C4D4E4F505152535354555658585A5B5C5D5E5F60616263656667686A6B6C6D6F
70717274757678797A7C7D7E808183858687898A8B8D8E8F91929394959798999A9C9D9E9EA0A1A2
A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9B9BABBBBBCBDBEBFC0C1C1C2C3C3C4C5
C6C7C7C8C8C9C9CACACBCBCCCCCCCDCDCECFCFD0D0D0D1D1D1D1D2D2D2D2D3D3D3D3D3D4D4D4D4D4
D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4D4
>
<
0000010304050607090A0B0C0D0E0F101112131314161717181A1B1B1C1D1E1F2021212223242526
262828292A2B2C2D2E2E2F3031323333343536373838393B3B3C3D3D3E3F40404142434445464647
48494A4B4B4C4D4E4F4F505152535455555758595A5B5C5D5E5F606162636465666768696A6B6C6E
6F70717274757678797A7B7D7E7F8081828385868788898B8C8D8E8F8F9091929394949595969798
98999A9A9B9C9D9D9E9E9F9FA0A1A1A2A2A3A3A4A4A5A6A6A7A7A8A8A9AAAAABABACACADADADAEAE
AFAFB0B0B0B1B1B2B2B3B3B4B4B4B5B5B6B6B6B7B7B7B8B8B8B8B9B9B9B9B9B9BABABABABABABABA
BABABABABABABABABABABABABABABABA
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000010101020202030304050506070808090A0B0C0D0E10111214151618
191B1C1E1F2123242628292B2D2F30323436383A3C3E40424446484B4D4F515456585B5D5F616366
686B6D707275787A7D808285888A8D909295979A9C9FA2A4A6A9ABADAFB1B3B5B7B9BBBCBEBFC1C2
C3C5C6C7C8C9C9CACACBCBCCCCCCCCCC
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
4 %_Br
[
0.839231 0.830533 0.729427 0.799985 0 0 0 2 50 100 %_BS
%_0.839231 0.830533 0.729427 0.799985 0 0 0 2 50 100 Bs
0 0 0 0 1 1 1 2 50 0 %_BS
%_0 0 0 0 1 1 1 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Cielo)
(Cielo) 0 4 Bd
[
<
F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9FAFAFAFA
>
<
7879797B7D7D7F818183858787898B8B8D8F8F909392959796999B9B9D9FA2A2A3A6A6A8AAAAAC
>
<
0D0D0F1010121213151516161818181A1A1B1C1C1E202121242425272728292A2B2C2E2F2F3233
>
0
0
<
7574747372727170706F6E6D6D6C6B6B6A6969686767666565646363626160605F5E5E5D5C5C5B
>
<
BEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897
>
4 %_Br
<
EEEEEFEFEFF0F0F0F1F1F1F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F5F5F5F5F5F5F5F6
>
<
2D2F3133343638393B3D3E40424446484A4C4E4F5455585A5C5E60626466676A6B6E7071747678
>
<
1B1C1A1A1B191A1A18181917171816161615151413131213131212121111110F0F100E0E0E0C0D
>
0
<
1E1D1C1C1B1A191818171615151413121111100F0E0D0D0C0B0A09090807060605040302020100
>
<
9C9B9A999897969594939291908F8E8D8C8B8A8887868584838281807F7E7D7C7B7A7978777675
>
<
D7D6D6D5D4D4D3D2D2D1D0D0CFCECECDCCCCCBCACAC9C9C8C7C7C6C5C5C4C3C3C2C1C1C0BFBFBE
>
4 %_Br
<
4949494A4A4A4A4B4B4B4D4D4D4F4E4E5050525253535354545655575759595A5A5C5C5D5D5E5E60
6161626264636566666767696A6A6B6B6D6E6E6F71717272747575767878797A7A7C7D7D7F808282
83848486878687898A8A8B8D8E8E8F9090929495959698999A9A9C9D9E9EA0A1A2A2A3A4A6A7A7A8
A9ABABABADAEAFB0B2B2B3B4B5B7B8B8B9BABBBCBDBDBEBFC0C1C2C2C2C3C4C5C6C7C8C8C9CACBCC
CDCDCECFCFD0D1D1D2D3D3D4D5D5D5D6D6D7D8D9D9DADADBDCDCDCDDDEDEDEDFDFE0E1E1E2E2E3E4
E4E5E5E5E6E6E6E7E7E7E7E8E8E8E9E9EAEAEAEBEBEBECECECECEDEDEDEDEEEEEE
>
<
13131312121214131313121212111313121212121313131212111212121111121211111012111110
0F1110100F1211100F1111100F0F10100F0E100F0E0E10100E0D100E0D0D0E0D0D0C0E0E0C0E0D0D
0B0D0D0C0B0D0C0B0D0D0B0A0B0B090B0B09080909080909080A0909080A09090A0A0A0C0B0A0D0B
0A090B0B090B0A090A0A090B0A090B0B0A0C0B0A0C0C0B0D0D0C0E0D0D0E0E0D0F0D0C0F0E0D0F0E
0E0F0F0E11100F111112121213131314141316151417161817171918181A19191A1A1C1B1B1D1C1B
1D1D1F1E1E201F1F2120222121232322242425252527262628282A2A292B2B2D2D
>
<
070707070707060707070707090A0808090909090808080909090A0A0A0B0B0A0A0A0A0B090A0C0D
0E0C0D0D0E0C0D0E0F0E0E0F10100F0F0F1010111212101011121013131312131313131315141515
1615151516161717171717171618191818181918181A1A1A1B191A1A1A1B1B1C1B1B1B1B1B1D1C1C
1D1D1C1C1F1E1E1E1D1D1D1E1F1F1E1E1F1E1E202020201F20202021212020212022222121212020
22212121202022212120202120212120212120212121212020202121212020212121202121202022
212120202121212120201F21212020201F211F1F201D1E201E1E1C1C1D1B1D1B1B
>
0
<
CCCCCCCBCBCBCBCACACAC9C9C9C8C8C8C7C7C6C6C5C5C5C4C4C3C3C2C2C1C1C0C0BFBFBEBEBDBDBC
BBBBBABAB9B9B8B7B7B6B6B5B4B4B3B3B2B1B1B0AFAFAEAEADACACABAAAAA9A8A8A7A6A6A5A4A3A3
A2A1A1A09F9F9E9D9C9C9B9A99999897979695949493929190908F8E8D8D8C8B8A8A898887868685
8483828281807F7E7D7D7C7B7A7978787776757473737271706F6E6D6D6C6B6A6968676766656463
6261605F5F5E5D5C5B5A59585756565554535251504F4E4D4C4B4B4A494847464544434241403F3E
3D3C3B3A39393837363534333231302F2E2D2C2B2A292827262524232221201F1E
>
<
E0E0E0E0E0E0DFDFDFDFDFDFDFDFDEDEDEDEDEDEDDDDDDDDDDDDDCDCDCDCDCDBDBDBDBDBDADADADA
DAD9D9D9D9D8D8D8D8D7D7D7D7D7D6D6D6D6D5D5D5D5D4D4D4D4D3D3D3D3D2D2D2D2D1D1D1D0D0D0
D0CFCFCFCFCECECECDCDCDCDCCCCCCCBCBCBCBCACACAC9C9C9C8C8C8C8C7C7C7C6C6C6C5C5C5C4C4
C4C4C3C3C3C2C2C2C1C1C1C0C0C0BFBFBFBEBEBEBDBDBDBCBCBCBBBBBBBABABAB9B9B9B8B8B8B7B7
B7B6B6B6B5B5B5B4B4B3B3B3B2B2B2B1B1B1B0B0B0AFAFAEAEAEADADADACACACABABAAAAAAA9A9A9
A8A8A7A7A7A6A6A6A5A5A4A4A4A3A3A3A2A2A1A1A1A0A0A09F9F9E9E9E9D9D9C9C
>
<
F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F1F1
F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEEEEEEEEEEEEEEEEEEEDEDEDED
EDEDEDEDEDECECECECECECECECEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E8E8E8
E8E8E8E8E7E7E7E7E7E7E7E6E6E6E6E6E6E6E6E5E5E5E5E5E5E5E4E4E4E4E4E4E4E3E3E3E3E3E3E3
E2E2E2E2E2E2E1E1E1E1E1E1E1E0E0E0E0E0E0DFDFDFDFDFDFDFDEDEDEDEDEDEDDDDDDDDDDDDDDDC
DCDCDCDCDCDBDBDBDBDBDBDADADADADADAD9D9D9D9D9D9D8D8D8D8D8D8D8D7D7D7
>
4 %_Br
[
0.980346 0.675105 0.198245 0 0 0.356863 0.592157 2 50 99.4382 %_BS
%_0.980346 0.675105 0.198245 0 0 0.356863 0.592157 2 50 99.4382 Bs
0.963134 0.469398 0.049653 0 0 0.458824 0.745098 2 50 86.5168 %_BS
%_0.963134 0.469398 0.049653 0 0 0.458824 0.745098 2 50 86.5168 Bs
0.933745 0.176638 0.107515 0 0.117647 0.611765 0.843137 2 50 56.7416 %_BS
%_0.933745 0.176638 0.107515 0 0.117647 0.611765 0.843137 2 50 56.7416 Bs
0.286137 0.073762 0.025605 0 0.8 0.878431 0.956863 2 59.5506 0 %_BS
%_0.286137 0.073762 0.025605 0 0.8 0.878431 0.956863 2 59.5506 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Orqu\755dea)
(Orqu\755dea) 0 2 Bd
[
0
0.733516
0.092348
0
1
0.482353
0.67451
4 %_Br
[
0 0.733516 0.092348 0 1 0.482353 0.67451 2 50 100 %_BS
%_0 0.733516 0.092348 0 1 0.482353 0.67451 2 50 100 Bs
0 0.733516 0.092348 0 1 0.482353 0.67451 2 46.3356 0 %_BS
%_0 0.733516 0.092348 0 1 0.482353 0.67451 2 46.3356 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Verano)
(Verano) 1 2 Bd
[
0
<
0000020205050708090A0B0B0D0D0F0F12111113131414161618181919191B1B1C1C1E1E1F1F1F20
2021212323232525262628282829292B2B2C2C2C2D2D2E2E2E302F31313232323434353535373737
38383939393B3A3C3C3C3D3D3F3E3E404040414141434344444445454547474748484949494A4A4A
4C4C4C4D4D4D4F4F4F5050505252525353535454545555555757575858585959595B5B5B5B5C5C5C
5D5D5D5F5F5E60606060616161626262626464646565656566666667676767696969696A6A6A6A6B
6B6B6D6D6D6D6E6E6E6E6F6F6F6F7070707071717171727272727274747473757575757777767676
7878787879797979797A7A7A7A7A7C7C7C7C7C7D7D7D7D7D7E7E7E7E7E8080808080818181818181
828282828282848484848485858585858585868686868686878787878787878988888888888A8A8A
8A8A8A8A8A8B8B8B8B8B8B8B8C8C8C8C8C8C8C8C8C8E8E8E8E8E8E8E8E8F8F8F8F8F8F8F8F8F8F90
90909090909090909092929292929292929292929293939393939393939393939393939494949494
94949494949494949494949496969696969696969696969696969696969696969696969696979797
9797979797979797979797979797979797979797979797979797979797979797979797
>
<
000102040506080A0A0D0E0F1011121314161718191A1A1B1C1D1F20212223242526262828282A2A
2B2C2D2E2F3132323234343637383939393A3B3C3D3E3F3F41414343454545464748494A4A4B4D4E
4E4E4F50525253535455555756585A5B5B5C5C5D5E5E5F6061616162646365676868696A6B6B6C6D
6D6E6F7070717272737475757678787879797A7C7D7D7E807F81828283858486868688888A8A8A8C
8C8C8E8E8E8F8F8F9090919193949495959799999A9A9C9D9D9E9E9F9F9FA1A0A1A1A3A2A4A6A6A7
A7A8A8AAAAABABACADADAEAEAFAFB0B0B1B1B3B3B4B4B5B5B7B7B8B8B9B9BAB9BABABABBBBBDBDBE
BEBFBFC0C0C1C1C1C2C1C2C2C3C3C3C4C4C6C6C7C7C7C8C8C8C8C8C9C9CACACACBCBCCCCCCCECECE
CFCFCFCFCFD0D0D0D0D0D0D1D1D1D2D2D3D3D3D4D4D4D4D5D5D5D5D5D5D6D6D6D6D6D6D7D7D6D6D7
D7D7D9D9D9D8D9D9D9DADADADADBDBDBDBDBDBDBDBDCDCDCDCDCDCDCDCDCDDDDDDDDDDDDDDDDDDDE
DEDEDEDEDEDEDEDEDEDFDFDFDFDFE0E0E0E0E0E0E0E0E0E0E0E0E1E1E1E1E1E1E1E1E1E1E1E1E1E1
E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E2E3E3E3E3E3E3E3E2E2E2
E2E2E2E2E2E2E2E2E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3
>
0
1
<
FFFFFEFEFDFDFCFCFBFBFAFAF9F9F8F8F7F7F7F6F6F5F5F4F4F3F3F2F2F2F1F1F0F0EFEFEEEEEEED
EDECECEBEBEBEAEAE9E9E8E8E8E7E7E6E6E5E5E5E4E4E3E3E3E2E2E1E1E0E0E0DFDFDEDEDEDDDDDD
DCDCDBDBDBDADAD9D9D9D8D8D7D7D7D6D6D6D5D5D5D4D4D3D3D3D2D2D2D1D1D1D0D0CFCFCFCECECE
CDCDCDCCCCCCCBCBCBCACACAC9C9C9C8C8C8C7C7C7C6C6C6C5C5C5C4C4C4C3C3C3C2C2C2C2C1C1C1
C0C0C0BFBFBFBEBEBEBEBDBDBDBCBCBCBCBBBBBBBABABABAB9B9B9B8B8B8B8B7B7B7B7B6B6B6B6B5
B5B5B4B4B4B4B3B3B3B3B2B2B2B2B1B1B1B1B0B0B0B0AFAFAFAFAFAEAEAEAEADADADADACACACACAC
ABABABABAAAAAAAAAAA9A9A9A9A9A8A8A8A8A8A7A7A7A7A7A6A6A6A6A6A5A5A5A5A5A4A4A4A4A4A4
A3A3A3A3A3A3A2A2A2A2A2A1A1A1A1A1A1A1A0A0A0A0A0A09F9F9F9F9F9F9F9E9E9E9E9E9E9D9D9D
9D9D9D9D9D9C9C9C9C9C9C9C9B9B9B9B9B9B9B9B9B9A9A9A9A9A9A9A9A9999999999999999999998
98989898989898989897979797979797979797979796969696969696969696969696969595959595
95959595959595959595959594949494949494949494949494949494949494949494949494939393
9393939393939393939393939393939393939393939393939393939393939393939393
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDCDBDA
D9D8D7D6D5D4D3D3D2D1D0CFCECDCCCBCBCAC9C8C7C6C5C5C4C3C2C1C0BFBFBEBDBCBBBABAB9B8B7
B6B6B5B4B3B2B1B1B0AFAEADADACABAAAAA9A8A7A6A6A5A4A3A3A2A1A0A09F9E9D9D9C9B9A9A9998
9897969595949393929190908F8E8E8D8C8C8B8A898988878786858584838382828180807F7E7E7D
7C7C7B7A7A79797877777676757474737372717170706F6E6E6D6D6C6B6B6A6A6969686867666665
656464636362626160605F5F5E5E5D5D5C5C5B5B5A5A595958585757565655555454545353525251
5150504F4F4E4E4E4D4D4C4C4B4B4B4A4A4949484848474746464645454444444343424242414141
40403F3F3F3E3E3E3D3D3D3C3C3C3B3B3A3A3A393939393838383737373636363535353434343433
333332323232313131303030302F2F2F2F2E2E2E2E2D2D2D2D2C2C2C2C2C2B2B2B2B2A2A2A2A2A29
29292929282828282827272727272626262626262525252525252424242424242423232323232323
2222222222222222222121212121212121212020202020202020202020201F1F1F1F1F1F1F1F1F1F
1F1F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E
>
4 %_Br
[
0 0 0 0 1 1 1 2 28 0 %_BS
%_0 0 0 0 1 1 1 2 28 0 Bs
0 0.59295 0.888975 0 1 0.576471 0.117647 2 50 100 %_BS
%_0 0.59295 0.888975 0 1 0.576471 0.117647 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (A todo ritmo)
(A todo ritmo) 47.5605 109.6396 155.8994 219.2813 [
%AI3_Tile
(0 O 0 R 0.990326 0.8663 0.278965 0 0 0.258824 0.494118 Xa
 0.990326 0.8663 0.278965 0 0 0.258824 0.494118 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
135.0352 74.9453 m
135.0566 75.0645 135.1602 75.1504 135.2813 75.1523 c
148.1875 75.2871 160.0352 78.4199 169.2529 86.667 C
161.2227 81.1094 146.3105 79.1563 137.7256 83.0488 c
137.6152 83.0986 137.5566 83.2188 137.584 83.3369 c
137.6104 83.4551 137.7168 83.5371 137.8379 83.5332 c
148.5176 83.2441 157.1172 86.54 163.8223 92.498 C
156.9531 92.9199 151.248 97.2383 151.2656 102.3428 c
151.2656 102.4619 151.3496 102.5645 151.4668 102.5898 c
151.583 102.6152 151.7012 102.5547 151.75 102.4463 c
152.8711 99.957 156.498 98.666 160.333 99.5664 c
164.5127 100.5469 167.333 103.7559 166.6338 106.7314 c
166.1621 108.7461 164.1973 110.1348 161.6816 110.5186 c
161.5547 110.5371 161.4619 110.6484 161.4648 110.7764 c
161.4688 110.9043 161.5674 111.0098 161.6953 111.0215 c
162.7637 111.124 163.875 111.1279 165.0127 111.0195 c
171.5029 110.4023 176.5264 106.4238 176.9619 101.8418 C
181.6738 102.3887 185.8457 104.998 187.3398 108.6152 c
187.3848 108.7236 187.5 108.7871 187.6152 108.7695 c
187.7305 108.75 187.8184 108.6553 187.8281 108.5391 c
188.2051 103.7871 186.5703 100.7002 182.8584 97.6846 C
188.2422 99.7441 194.3027 99.8496 200.1133 97.1465 c
200.2188 97.0977 200.2773 96.9824 200.2559 96.8672 c
200.2324 96.752 200.1328 96.668 200.0156 96.6641 c
195.1367 96.4736 191.5996 94.9082 188.2852 91.5918 C
206.5391 96.7256 221.3701 85.3906 216.2383 68.5391 c
216.2031 68.4238 216.0918 68.3486 215.9707 68.3613 c
215.8496 68.373 215.7539 68.4688 215.7441 68.5898 c
214.8262 78.3037 208.041 84.7051 197.8828 85.666 C
203.2695 83.6055 208.8828 78.6895 209.4395 70.1318 c
209.4473 70.0098 209.3672 69.8984 209.248 69.8691 c
209.1289 69.8398 209.0059 69.8984 208.9551 70.0098 c
206.1563 76.1641 200.6582 79.2754 194.7949 79.8223 C
201.1289 77.2422 205.1914 71.2207 206.3652 63.4023 c
206.3848 63.2793 206.3105 63.1602 206.1914 63.123 c
206.0742 63.084 205.9453 63.1387 205.8887 63.248 c
202.0234 70.8311 193.7324 76.042 183.4424 72.0605 c
172.8252 67.9512 168.168 55.6738 167.1387 47.0195 c
167.124 46.8984 167.0234 46.8047 166.9004 46.7969 c
166.7783 46.7891 166.668 46.8711 166.6396 46.9922 c
162.9199 62.6797 170.2227 78.9414 183.2764 85.832 C
176.1807 83.8291 169.8369 79.5723 166.249 72.4775 C
157.9551 71.459 152.2451 68.6152 149.3916 63.2383 c
149.335 63.1309 149.2109 63.0781 149.0957 63.1133 c
148.9805 63.1465 148.9043 63.2578 148.9141 63.3789 c
149.0967 65.4883 149.8555 69.709 152.9883 71.6494 C
146.0234 71.6387 140.4824 72.543 135.1895 74.6621 c
135.0781 74.708 135.0127 74.8262 135.0352 74.9453 c
f
164.5215 21.4746 m
164.4229 21.541 164.293 21.5293 164.2061 21.4492 c
164.1201 21.3672 164.1016 21.2383 164.1602 21.1367 c
165.7803 18.3398 164.3008 14.3223 161.1094 14.3223 c
155.3887 14.3223 152.6387 25.0918 153.5137 34.916 C
155.6768 29.1602 157.5469 26.8613 160.8613 24.1211 c
160.9551 24.043 161.0898 24.043 161.1836 24.1191 c
161.2773 24.1973 161.3047 24.3281 161.2471 24.4355 c
156.3906 33.5156 155.3496 40.502 155.3496 48.5215 C
156.8125 42.5625 158.5449 39.1992 163.4766 34.1406 c
163.5625 34.0527 163.6992 34.0391 163.8018 34.1074 c
163.9033 34.1777 163.9404 34.3105 163.8887 34.4238 c
158.5908 46.0137 158.9951 58.8711 162.9414 68.6875 c
162.9805 68.7852 162.9561 68.8965 162.8789 68.9688 c
162.8018 69.0391 162.6895 69.0566 162.5938 69.0098 c
157.3887 66.459 154.3301 64.7832 149.8418 58.6211 C
151.1992 51.2227 150.0703 47.5723 146.6699 41.4258 C
150.6074 51.3438 148.5117 65.3203 138.4824 71.0176 c
138.373 71.0791 138.2344 71.0518 138.1582 70.9531 c
138.0801 70.8535 138.0869 70.7119 138.1738 70.6211 c
141.9551 66.666 144.7051 59.9863 142.3301 52.6934 C
143.8594 63.082 134.7344 71.8086 124.5508 71.8086 c
114.9512 71.8086 108.4004 64.2988 108.9414 56.8672 c
109.4785 49.502 114.3848 45.8984 118.6133 44.3691 c
118.7246 44.3301 118.8496 44.3711 118.9131 44.4707 c
118.9766 44.5723 118.9629 44.7012 118.8799 44.7871 c
113.2695 50.4785 112.502 61.2793 122.4629 64.5469 C
116.6035 59.4902 118.7734 47.7168 128.1523 46.8223 c
128.2695 46.8105 128.3789 46.8809 128.417 46.9922 c
128.4551 47.1035 128.4121 47.2266 128.3135 47.2891 c
126.3047 48.5664 124.6348 51.0605 124.6348 53.8633 c
124.6348 58.5371 128.0566 60.373 130.3105 60.373 c
133.7324 60.373 136.5703 57.1172 136.5703 52.1934 c
136.5703 46.3496 131.3105 41.5098 124.5508 40.7578 c
117.9248 40.0234 111.7686 42.9121 108.8008 47.2168 c
108.7314 47.3184 108.5996 47.3555 108.4873 47.3047 c
108.375 47.2539 108.3164 47.1289 108.3467 47.0098 c
111.3652 35.3066 125.1426 30.1328 135.2344 37.5039 C
128.6211 30.002 118.2285 29.8984 109.5127 37.5898 c
109.4219 37.6699 109.2871 37.6738 109.1904 37.5996 c
109.0938 37.5273 109.0635 37.3945 109.1172 37.2871 c
111.7842 31.8789 118.3701 25.4668 127.7227 26.4023 c
136.2793 27.2578 141.2441 35.416 142.2461 42.0938 C
142.8027 33.5723 140.8525 27.5566 133.4922 21.9473 c
133.3955 21.873 133.3652 21.7402 133.4199 21.6309 c
133.4746 21.5234 133.5996 21.4688 133.7168 21.502 c
140.502 23.4629 145.9473 26.9277 148.7656 34.0469 C
148.7656 27.8848 146.627 21.6738 141.2402 17.5352 c
141.1426 17.4609 141.1133 17.3301 141.168 17.2207 c
141.2227 17.1113 141.3467 17.0566 141.4639 17.0898 c
144.917 18.0742 147.6348 19.5781 149.6016 22.2754 C
150.9121 11.1758 156.123 4.58398 162.127 4.58398 c
166.252 4.58398 169.332 7.61719 169.332 12.4551 c
169.332 15.2852 167.8438 19.2578 164.5215 21.4746 c
f
263.7471 113.0938 m
260.585 116.998 254.208 118.4863 247.3154 117.082 C
247.8252 121.3828 246.9814 125.873 245.7041 128.5664 c
245.6514 128.6758 245.5303 128.7334 245.4131 128.7051 c
245.2959 128.6758 245.2158 128.5684 245.2197 128.4473 c
245.5947 119.6807 240.5967 112.6035 231.7705 109.5371 C
238.6768 114.293 240.6963 123.7305 237.4092 128.6035 c
237.3408 128.7021 237.2139 128.7412 237.1025 128.6953 c
236.9912 128.6504 236.9268 128.5332 236.9482 128.416 c
237.3213 126.3555 236.3428 123.7314 234.2354 121.6895 c
231.3291 118.875 227.3857 118.2363 225.4248 120.2598 c
223.4639 122.2852 224.2275 126.207 227.1318 129.0215 c
228.1924 130.0488 229.3916 130.7832 230.5811 131.2061 c
230.6943 131.2461 230.7627 131.3594 230.7471 131.4775 c
230.7334 131.5967 230.6377 131.6885 230.5186 131.6982 c
224.1299 132.2529 219.749 128.4463 217.0039 123.8203 c
214.209 119.1152 209.4336 115.4102 203.793 116.1504 c
203.6738 116.166 203.5605 116.0957 203.5195 115.9824 c
203.4805 115.8691 203.5254 115.7422 203.6289 115.6807 c
206.4258 113.9961 209.5 113.2969 213.4922 114.6289 C
207.6973 109.7197 199.4453 106.8867 191.6523 109.4014 c
191.543 109.4375 191.4238 109.3945 191.3613 109.2979 c
191.2988 109.2012 191.3105 109.0752 191.3867 108.9902 c
197.2949 102.4258 209.0762 102.2949 216.4961 107.6172 C
213.459 103.3008 209.4277 100.1328 202.2031 99.1387 c
202.0879 99.123 201.998 99.0313 201.9844 98.916 c
201.9727 98.7998 202.0391 98.6904 202.1484 98.6504 c
210.4395 95.5723 218.748 98.6953 225.5928 106.8652 C
222.6006 100.4883 217.6875 95.3809 210.8262 92.8535 c
210.7109 92.8115 210.6426 92.6934 210.6641 92.5742 c
210.6836 92.4531 210.7871 92.3643 210.9082 92.3613 c
214.8516 92.2803 218.3945 93.2188 223.1729 95.9316 C
219.665 90.2422 220.4326 80.293 225.542 73.6738 c
225.6123 73.582 225.7373 73.5498 225.8447 73.5957 c
225.9502 73.6426 226.0127 73.7549 225.9932 73.8691 c
224.8135 81.0703 227.292 89.1992 231.6025 93.5117 C
229.4502 85.8799 231.5967 78.9355 237.499 73.8672 c
237.5693 73.8066 237.6689 73.79 237.7549 73.8232 c
237.8428 73.8564 237.9033 73.9355 237.917 74.0273 c
239.1514 83.4453 249.6865 93.002 258.5186 93.8027 c
258.6436 93.8135 258.7412 93.9141 258.749 94.0381 c
258.7568 94.1621 258.6748 94.2754 258.5518 94.3027 c
254.2725 95.2715 249.8604 94.793 246.1631 93.2715 C
248.8232 96.2051 252.1025 98.3828 255.7178 99.5176 c
255.835 99.5537 255.9072 99.668 255.8936 99.7891 c
255.8799 99.9102 255.7803 100.0039 255.6592 100.0127 c
251.1494 100.3242 246.7354 99.0068 242.9287 96.4746 C
247.29 103.0957 253.9092 108.0195 262.3564 109.9805 c
262.4775 110.0088 262.5596 110.1191 262.5537 110.2432 c
262.5459 110.3672 262.4502 110.4668 262.3271 110.4805 c
250.4092 111.7822 240.5811 107.1621 234.1064 98.5625 C
235.7549 103.4629 240.4717 108.3184 247.0518 111.1816 c
252.8975 113.7266 258.9014 114.1279 263.4736 112.6914 c
263.5791 112.6582 263.6963 112.6982 263.7588 112.791 c
263.8213 112.8828 263.8174 113.0059 263.7471 113.0938 c
f
210.8438 37.5215 m
215.6504 48.0078 215.3086 56.207 211.4375 66.5762 c
211.3926 66.6934 211.2715 66.7607 211.1484 66.7363 c
211.0254 66.7109 210.9395 66.5996 210.9453 66.4746 c
211.5664 53.8535 208.1191 44.8203 200.6465 38.668 C
208.8965 48.5195 205 68.2275 191.8242 68.2275 c
182.2383 68.2275 174.3086 60.252 172.3691 50.7031 c
172.3447 50.582 172.4111 50.459 172.5273 50.416 c
172.6426 50.3711 172.7734 50.416 172.8359 50.5215 c
175.6787 55.2832 180.2451 58.373 185.293 58.373 c
193.4277 58.373 195.834 51.9063 195.834 47.375 c
195.834 41.1875 190.9082 36.0313 187.127 36.0313 c
183.6895 36.0313 182.0859 38.8555 182.0859 40.959 c
182.0859 44.8574 185.084 48.125 188.4629 49.123 c
188.582 49.1582 188.6602 49.2773 188.6426 49.4023 c
188.623 49.5273 188.5176 49.6191 188.3926 49.6211 c
184.2861 49.6465 180.8154 47.7656 178.7627 44.0527 C
178.4932 46.9277 178.4902 48.7383 179.4033 51.7754 c
179.4385 51.8926 179.3848 52.0176 179.2773 52.0742 c
179.168 52.1309 179.0352 52.1016 178.9609 52.0059 c
171.6045 42.6133 175.125 26.3809 180.9395 19.6484 C
175.4082 23.6309 170.5234 32.2813 170.6006 44.041 c
170.6016 44.1641 170.5156 44.2676 170.3955 44.291 c
170.2754 44.3164 170.1563 44.25 170.1113 44.1367 c
166.0029 33.8848 168.1826 14.8887 179.3926 4.28516 C
176.5088 3.88867 173.5254 3.93945 170.2676 4.97852 c
170.1523 5.01367 170.0273 4.96484 169.9688 4.85938 c
169.9102 4.75195 169.9336 4.61914 170.0273 4.54102 c
174.1191 1.08594 179.8418 0 185.293 0 C
180.5957 5.5 182.1563 16.5547 189.6484 16.5547 c
194.9961 16.5547 197.4238 8.25586 193.2949 3.77344 c
193.2168 3.6875 193.207 3.55859 193.2695 3.46289 c
193.334 3.36523 193.4551 3.32227 193.5664 3.36133 c
198.3457 5.01563 203.5117 9.15039 203.5117 14.377 c
203.5117 19.4199 198.6992 23.7715 191.7109 23.4277 C
200.5293 25.9336 209.7617 23.1602 214.5918 17.1758 c
214.666 17.082 214.7969 17.0547 214.9023 17.1074 c
215.0098 17.1621 215.0645 17.2832 215.0352 17.3984 c
212.2441 28.1152 203.0684 32.5977 191.5957 31.1055 C
200.877 34.8613 214.8457 31.5859 221.0186 23.7949 c
221.0908 23.7031 221.2178 23.6738 221.3252 23.7227 c
221.4307 23.7734 221.4893 23.8906 221.4658 24.0039 c
220.0947 30.6191 216.6035 35.5664 210.8438 37.5215 C
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.545922 0 0.085573 0 0.615686 0.862745 0.976471 Xa
 0.545922 0 0.085573 0 0.615686 0.862745 0.976471 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
237.2256 56.8086 m
237.2041 56.6895 237.1006 56.6016 236.9795 56.6016 c
224.0732 56.4648 212.2266 53.334 203.0098 45.0859 C
211.0391 50.6445 225.9502 52.5957 234.5361 48.7051 c
234.6455 48.6543 234.7041 48.5332 234.6768 48.416 c
234.6514 48.2988 234.5439 48.2168 234.4229 48.2188 c
223.7432 48.5098 215.1445 45.2129 208.4395 39.2559 C
215.3086 38.832 221.0127 34.5156 220.9951 29.4102 c
220.9951 29.291 220.9111 29.1875 220.7939 29.1621 c
220.6787 29.1387 220.5596 29.1973 220.5107 29.3066 c
219.3896 31.7949 215.7637 33.0879 211.9297 32.1875 c
207.75 31.2051 204.9297 27.998 205.6289 25.0215 c
206.0996 23.0078 208.0645 21.6191 210.5801 21.2344 c
210.707 21.2148 210.8008 21.1055 210.7969 20.9766 c
210.793 20.8496 210.6953 20.7441 210.5664 20.7305 c
209.498 20.6289 208.3867 20.625 207.25 20.7344 c
200.7598 21.3516 195.7363 25.3281 195.3008 29.9121 C
190.5879 29.3652 186.416 26.7539 184.9219 23.1387 c
184.877 23.0293 184.7637 22.9668 184.6465 22.9844 c
184.5313 23.002 184.4434 23.0977 184.4336 23.2148 c
184.0566 27.9648 185.6914 31.0527 189.4043 34.0684 C
184.0195 32.0098 177.959 31.9043 172.1484 34.6055 c
172.043 34.6563 171.9844 34.7715 172.0059 34.8867 c
172.0293 35.002 172.1289 35.0859 172.2461 35.0898 c
177.125 35.2793 180.6621 36.8457 183.9785 40.1621 C
165.7227 35.0273 150.8906 46.3633 156.0234 63.2129 c
156.0586 63.3301 156.1699 63.4043 156.291 63.3926 c
156.4121 63.3809 156.5078 63.2852 156.5176 63.1641 c
157.4355 53.4492 164.2207 47.0469 174.3789 46.0879 C
168.9922 48.1465 163.3789 53.0625 162.8223 61.6211 c
162.8145 61.7441 162.8945 61.8535 163.0137 61.8848 c
163.1328 61.9141 163.2559 61.8535 163.3066 61.7422 c
166.1055 55.5879 171.6035 52.4785 177.4668 51.9297 C
171.1328 54.5117 167.0703 60.5332 165.8965 68.3516 c
165.877 68.4746 165.9512 68.5918 166.0703 68.6309 c
166.1875 68.668 166.3164 68.6152 166.373 68.5039 c
170.2383 60.9219 178.5293 55.7109 188.8203 59.6934 c
199.4375 63.8027 204.0938 76.0781 205.123 84.7324 c
205.1387 84.8555 205.2383 84.9492 205.3613 84.957 c
205.4844 84.9629 205.5938 84.8809 205.623 84.7617 c
209.3418 69.0723 202.0391 52.8125 188.9863 45.9219 C
196.082 47.9238 202.4258 52.1816 206.0137 59.2754 C
214.3066 60.293 220.0166 63.1387 222.8701 68.5156 c
222.9268 68.6211 223.0498 68.6738 223.165 68.6406 c
223.2803 68.6055 223.3564 68.4941 223.3467 68.375 c
223.165 66.2656 222.4053 62.0449 219.2725 60.1035 C
226.2373 60.1152 231.7783 59.2109 237.0713 57.0898 c
237.1826 57.0449 237.249 56.9277 237.2256 56.8086 c
f
207.7402 110.2773 m
207.8398 110.2129 207.9688 110.2227 208.0566 110.3047 c
208.1426 110.3848 208.1602 110.5137 208.1016 110.6172 c
206.4824 113.4141 207.9609 117.4297 211.1523 117.4297 c
216.873 117.4297 219.6221 106.6602 218.748 96.8379 C
216.5859 102.5918 214.7148 104.8926 211.4004 107.6328 c
211.3066 107.709 211.1719 107.7109 211.0781 107.6328 c
210.9844 107.5566 210.957 107.4238 211.0156 107.3164 c
215.8711 98.2383 216.9121 91.252 216.9121 83.2324 C
215.4492 89.1895 213.7168 92.5527 208.7852 97.6133 c
208.6992 97.7012 208.5625 97.7148 208.4609 97.6445 c
208.3594 97.5742 208.3223 97.4414 208.373 97.3301 c
213.6719 85.7383 213.2676 72.8828 209.3203 63.0664 c
209.2813 62.9688 209.3066 62.8574 209.3828 62.7852 c
209.4609 62.7129 209.5723 62.6973 209.668 62.7422 c
214.873 65.293 217.9316 66.9688 222.4189 73.1328 C
221.0615 80.5313 222.1904 84.1797 225.5908 90.3262 C
221.6533 80.4102 223.749 66.4336 233.7783 60.7363 c
233.8877 60.6738 234.0264 60.7012 234.1025 60.8008 c
234.1807 60.9004 234.1748 61.041 234.0869 61.1328 c
230.3057 65.0879 227.5557 71.7676 229.9307 79.0586 C
228.4014 68.6699 237.5264 59.9453 247.71 59.9453 c
257.3096 59.9453 263.8604 67.4531 263.3193 74.8848 c
262.7822 82.25 257.876 85.8555 253.6475 87.3828 c
253.5361 87.4238 253.4111 87.3809 253.3486 87.2813 c
253.2842 87.1816 253.2979 87.0508 253.3818 86.9668 c
258.9912 81.2734 259.7588 70.4746 249.7979 67.207 C
255.6572 72.2637 253.4873 84.0352 244.1084 84.9316 c
243.9912 84.9414 243.8818 84.8711 243.8447 84.7598 c
243.8057 84.6504 243.8486 84.5273 243.9482 84.4648 c
245.9561 83.1855 247.626 80.6934 247.626 77.8906 c
247.626 73.2168 244.2041 71.3789 241.9502 71.3789 c
238.5283 71.3789 235.6904 74.6348 235.6904 79.5605 c
235.6904 85.4023 240.9502 90.2441 247.71 90.9941 c
254.3369 91.7305 260.4932 88.8398 263.46 84.5352 c
263.5303 84.4336 263.6611 84.3984 263.7744 84.4492 c
263.8857 84.5 263.9443 84.623 263.915 84.7422 c
260.8955 96.4453 247.1182 101.6191 237.0264 94.25 C
243.6396 101.75 254.0322 101.8555 262.749 94.1641 c
262.8389 94.084 262.9736 94.0781 263.0713 94.1523 c
263.167 94.2266 263.1982 94.3574 263.1436 94.4668 c
260.4775 99.873 253.8916 106.2852 244.5381 105.3516 c
235.9814 104.4961 231.0166 96.3359 230.0146 89.6602 C
229.458 98.1816 231.4092 104.1953 238.7686 109.8047 c
238.8662 109.8789 238.8955 110.0117 238.8408 110.1211 c
238.7861 110.2305 238.6611 110.2852 238.5439 110.25 c
231.7588 108.291 226.3135 104.8262 223.4951 97.707 C
223.4951 103.8672 225.6338 110.0781 231.0205 114.2168 c
231.1182 114.291 231.1475 114.4238 231.0928 114.5332 c
231.0381 114.6406 230.915 114.6953 230.7979 114.6621 c
227.3447 113.6797 224.626 112.1738 222.6592 109.4785 C
221.3486 120.5781 216.1387 127.168 210.1348 127.168 c
206.0098 127.168 202.9297 124.1348 202.9297 119.2988 c
202.9297 116.4688 204.418 112.4961 207.7402 110.2773 c
f
108.5137 18.6602 m
111.6758 14.7559 118.0527 13.2676 124.9453 14.6719 C
124.4355 10.3691 125.2793 5.88086 126.5566 3.18555 c
126.6094 3.07813 126.7305 3.01953 126.8477 3.04883 c
126.9648 3.07813 127.0449 3.18555 127.041 3.30664 c
126.666 12.0723 131.6641 19.1484 140.4902 22.2148 C
133.584 17.459 131.5645 8.02148 134.8516 3.15039 c
134.9199 3.05078 135.0469 3.01172 135.1582 3.05664 c
135.2695 3.10156 135.334 3.21875 135.3125 3.33789 c
134.9395 5.39844 135.918 8.02148 138.0254 10.0625 c
140.9316 12.877 144.875 13.5156 146.8359 11.4922 c
148.7969 9.4668 148.0332 5.54492 145.1289 2.73242 c
144.0684 1.70508 142.8691 0.96875 141.6797 0.546875 c
141.5664 0.505859 141.498 0.392578 141.5137 0.275391 c
141.5273 0.15625 141.623 0.064453 141.7422 0.054688 c
148.1309 -0.5 152.5117 3.30664 155.2578 7.93164 c
158.0527 12.6367 162.8281 16.3438 168.4688 15.6035 c
168.5879 15.5879 168.7012 15.6582 168.7422 15.7715 c
168.7813 15.8848 168.7363 16.0098 168.6328 16.0723 c
165.8359 17.7559 162.7617 18.4551 158.7695 17.125 C
164.5645 22.0332 172.8164 24.8652 180.6094 22.3516 c
180.7188 22.3164 180.8379 22.3594 180.9004 22.4551 c
180.9629 22.5508 180.9531 22.6777 180.875 22.7637 c
174.9668 29.3281 163.1855 29.459 155.7656 24.1348 C
158.8027 28.4512 162.834 31.6211 170.0586 32.6133 c
170.1738 32.6289 170.2637 32.7227 170.2773 32.8379 c
170.2891 32.9531 170.2227 33.0625 170.1133 33.1035 c
161.8223 36.1797 153.5137 33.0586 146.668 24.8867 C
149.6602 31.2656 154.5742 36.373 161.4355 38.9004 c
161.5508 38.9414 161.6191 39.0586 161.5977 39.1797 c
161.5781 39.3008 161.4746 39.3887 161.3535 39.3906 c
157.4102 39.4727 153.8672 38.5332 149.0879 35.8203 C
152.5957 41.5117 151.8281 51.459 146.7188 58.0801 c
146.6484 58.1719 146.5234 58.2031 146.416 58.1582 c
146.3105 58.1113 146.248 57.998 146.2676 57.8828 c
147.4473 50.6836 144.9688 42.5547 140.6582 38.2422 C
142.8105 45.873 140.6641 52.8184 134.7617 57.8848 c
134.6914 57.9453 134.5918 57.9629 134.5059 57.9297 c
134.418 57.8965 134.3574 57.8184 134.3438 57.7266 c
133.1094 48.3086 122.5742 38.752 113.7422 37.9512 c
113.6172 37.9395 113.5195 37.8398 113.5117 37.7148 c
113.5039 37.5898 113.5859 37.4785 113.709 37.4512 c
117.9883 36.4824 122.4004 36.9609 126.0977 38.4805 C
123.4375 35.5488 120.1582 33.3711 116.543 32.2363 c
116.4258 32.1992 116.3535 32.0859 116.3672 31.9648 c
116.3809 31.8438 116.4805 31.748 116.6016 31.7402 c
121.1113 31.4297 125.5254 32.7461 129.332 35.2793 C
124.9707 28.6582 118.3516 23.7344 109.9043 21.7715 c
109.7832 21.7441 109.7012 21.6328 109.707 21.5098 c
109.7148 21.3867 109.8105 21.2871 109.9336 21.2734 c
121.8516 19.9707 131.6797 24.5918 138.1543 33.1914 C
136.5059 28.2891 131.7891 23.4355 125.209 20.5723 c
119.3633 18.0273 113.3594 17.625 108.7871 19.0625 c
108.6816 19.0957 108.5645 19.0547 108.502 18.9629 c
108.4395 18.8691 108.4434 18.7461 108.5137 18.6602 c
f
161.418 94.2324 m
156.6113 83.7461 156.9531 75.5469 160.8242 65.1777 c
160.8691 65.0605 160.9902 64.9922 161.1133 65.0176 c
161.2363 65.043 161.3223 65.1543 161.3164 65.2773 c
160.6953 77.9004 164.1426 86.9316 171.6152 93.0859 C
163.3652 83.2324 167.2617 63.5254 180.4375 63.5254 c
190.0234 63.5254 197.9531 71.502 199.8926 81.0508 c
199.918 81.1719 199.8516 81.293 199.7344 81.3379 c
199.6191 81.3828 199.4883 81.3379 199.4258 81.2305 c
196.584 76.4688 192.0176 73.3789 186.9688 73.3789 c
178.834 73.3789 176.4277 79.8457 176.4277 84.3789 c
176.4277 90.5645 181.3535 95.7207 185.1348 95.7207 c
188.5723 95.7207 190.1758 92.8984 190.1758 90.7949 c
190.1758 86.8965 187.1777 83.6289 183.8008 82.6309 c
183.6797 82.5938 183.6035 82.4766 183.6211 82.3516 c
183.6387 82.2266 183.7441 82.1328 183.8711 82.1328 c
187.9766 82.1074 191.4473 83.9863 193.5 87.7012 C
193.7695 84.8262 193.7715 83.0156 192.8594 79.9766 c
192.8242 79.8594 192.877 79.7344 192.9844 79.6777 c
193.0938 79.623 193.2266 79.6504 193.3008 79.748 c
200.6582 89.1406 197.1367 105.3711 191.3223 112.1055 C
196.8535 108.123 201.7383 99.4707 201.6621 87.7109 c
201.6602 87.5898 201.7461 87.4844 201.8672 87.4609 c
201.9863 87.4375 202.1055 87.502 202.1504 87.6152 c
206.2598 97.8691 204.0801 116.8633 192.8691 127.4668 C
195.7539 127.8652 198.7363 127.8145 201.9941 126.7754 c
202.1094 126.7383 202.2344 126.7891 202.293 126.8945 c
202.3516 127 202.3281 127.1328 202.2344 127.2109 c
198.1426 130.666 192.4199 131.752 186.9688 131.752 C
191.666 126.252 190.1055 115.1992 182.6152 115.1992 c
177.2656 115.1992 174.8379 123.498 178.9668 127.9805 c
179.0449 128.0664 179.0547 128.1934 178.9922 128.291 c
178.9277 128.3887 178.8066 128.4297 178.6953 128.3926 c
173.916 126.7363 168.75 122.6035 168.75 117.375 c
168.75 112.334 173.5625 107.9805 180.5527 108.3242 C
171.7324 105.8203 162.5 108.5918 157.6699 114.5781 c
157.5957 114.6699 157.4648 114.6992 157.3594 114.6445 c
157.252 114.5918 157.1973 114.4707 157.2266 114.3535 c
160.0176 103.6387 169.1934 99.1543 180.666 100.6484 C
171.3848 96.8906 157.416 100.166 151.2422 107.957 c
151.1699 108.0488 151.043 108.0801 150.9355 108.0293 c
150.8301 107.9805 150.7715 107.8633 150.7949 107.748 c
152.166 101.1328 155.6582 96.1875 161.418 94.2324 C
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.990326 0.8663 0.278965 0 0 0.258824 0.494118 Xa
 0.990326 0.8663 0.278965 0 0 0.258824 0.494118 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
26.6963 74.9453 m
26.7178 75.0645 26.8213 75.1504 26.9424 75.1523 c
39.8486 75.2871 51.6963 78.4199 60.9141 86.667 C
52.8838 81.1094 37.9717 79.1563 29.3867 83.0488 c
29.2764 83.0986 29.2178 83.2188 29.2451 83.3369 c
29.2715 83.4551 29.3779 83.5371 29.499 83.5332 c
40.1787 83.2441 48.7783 86.54 55.4834 92.498 C
48.6143 92.9199 42.9092 97.2383 42.9268 102.3428 c
42.9268 102.4619 43.0107 102.5645 43.1279 102.5898 c
43.2441 102.6152 43.3623 102.5547 43.4111 102.4463 c
44.5322 99.957 48.1592 98.666 51.9941 99.5664 c
56.1738 100.5469 58.9941 103.7559 58.2949 106.7314 c
57.8232 108.7461 55.8584 110.1348 53.3428 110.5186 c
53.2158 110.5371 53.123 110.6484 53.126 110.7764 c
53.1299 110.9043 53.2285 111.0098 53.3564 111.0215 c
54.4248 111.124 55.5361 111.1279 56.6738 111.0195 c
63.1641 110.4023 68.1875 106.4238 68.623 101.8418 C
73.335 102.3887 77.5068 104.998 79.001 108.6152 c
79.0459 108.7236 79.1611 108.7871 79.2764 108.7695 c
79.3916 108.75 79.4795 108.6553 79.4893 108.5391 c
79.8662 103.7871 78.2314 100.7002 74.5195 97.6846 C
79.9033 99.7441 85.9639 99.8496 91.7744 97.1465 c
91.8799 97.0977 91.9385 96.9824 91.917 96.8672 c
91.8936 96.752 91.7939 96.668 91.6768 96.6641 c
86.7979 96.4736 83.2607 94.9082 79.9463 91.5918 C
98.2002 96.7256 113.0322 85.3906 107.8994 68.5391 c
107.8643 68.4238 107.7529 68.3486 107.6318 68.3613 c
107.5107 68.373 107.415 68.4688 107.4053 68.5898 c
106.4873 78.3037 99.7021 84.7051 89.5439 85.666 C
94.9307 83.6055 100.5439 78.6895 101.1006 70.1318 c
101.1084 70.0098 101.0283 69.8984 100.9092 69.8691 c
100.79 69.8398 100.667 69.8984 100.6162 70.0098 c
97.8174 76.1641 92.3193 79.2754 86.4561 79.8223 C
92.79 77.2422 96.8525 71.2207 98.0264 63.4023 c
98.0459 63.2793 97.9717 63.1602 97.8525 63.123 c
97.7354 63.084 97.6064 63.1387 97.5498 63.248 c
93.6846 70.8311 85.3936 76.042 75.1035 72.0605 c
64.4863 67.9512 59.8291 55.6738 58.7998 47.0195 c
58.7852 46.8984 58.6846 46.8047 58.5615 46.7969 c
58.4395 46.7891 58.3291 46.8711 58.3008 46.9922 c
54.5811 62.6797 61.8838 78.9414 74.9375 85.832 C
67.8418 83.8291 61.498 79.5723 57.9102 72.4775 C
49.6162 71.459 43.9063 68.6152 41.0527 63.2383 c
40.9961 63.1309 40.8721 63.0781 40.7568 63.1133 c
40.6416 63.1465 40.5654 63.2578 40.5752 63.3789 c
40.7578 65.4883 41.5166 69.709 44.6494 71.6494 C
37.6846 71.6387 32.1436 72.543 26.8506 74.6621 c
26.7393 74.708 26.6738 74.8262 26.6963 74.9453 c
f
56.1826 21.4746 m
56.084 21.541 55.9541 21.5293 55.8672 21.4492 c
55.7813 21.3672 55.7627 21.2383 55.8213 21.1367 c
57.4414 18.3398 55.9619 14.3223 52.7705 14.3223 c
47.0498 14.3223 44.2998 25.0918 45.1748 34.916 C
47.3379 29.1602 49.208 26.8613 52.5225 24.1211 c
52.6162 24.043 52.751 24.043 52.8447 24.1191 c
52.9385 24.1973 52.9658 24.3281 52.9082 24.4355 c
48.0518 33.5156 47.0107 40.502 47.0107 48.5215 C
48.4736 42.5625 50.2061 39.1992 55.1377 34.1406 c
55.2236 34.0527 55.3604 34.0391 55.4629 34.1074 c
55.5645 34.1777 55.6016 34.3105 55.5498 34.4238 c
50.252 46.0137 50.6563 58.8711 54.6025 68.6875 c
54.6416 68.7852 54.6172 68.8965 54.54 68.9688 c
54.4629 69.0391 54.3506 69.0566 54.2549 69.0098 c
49.0498 66.459 45.9912 64.7832 41.5029 58.6211 C
42.8604 51.2227 41.7314 47.5723 38.3311 41.4258 C
42.2686 51.3438 40.1729 65.3203 30.1436 71.0176 c
30.0342 71.0791 29.8955 71.0518 29.8193 70.9531 c
29.7412 70.8535 29.748 70.7119 29.835 70.6211 c
33.6162 66.666 36.3662 59.9863 33.9912 52.6934 C
35.5205 63.082 26.3955 71.8086 16.2119 71.8086 c
6.6123 71.8086 0.061523 64.2988 0.602539 56.8672 c
1.13965 49.502 6.0459 45.8984 10.2744 44.3691 c
10.3857 44.3301 10.5107 44.3711 10.5742 44.4707 c
10.6377 44.5723 10.624 44.7012 10.541 44.7871 c
4.93066 50.4785 4.16309 61.2793 14.124 64.5469 C
8.26465 59.4902 10.4346 47.7168 19.8135 46.8223 c
19.9307 46.8105 20.04 46.8809 20.0781 46.9922 c
20.1162 47.1035 20.0732 47.2266 19.9746 47.2891 c
17.9658 48.5664 16.2959 51.0605 16.2959 53.8633 c
16.2959 58.5371 19.7178 60.373 21.9717 60.373 c
25.3936 60.373 28.2314 57.1172 28.2314 52.1934 c
28.2314 46.3496 22.9717 41.5098 16.2119 40.7578 c
9.58594 40.0234 3.42969 42.9121 0.461914 47.2168 c
0.392578 47.3184 0.260742 47.3555 0.148438 47.3047 c
0.036133 47.2539 -0.022461 47.1289 0.007813 47.0098 c
3.02637 35.3066 16.8037 30.1328 26.8955 37.5039 C
20.2822 30.002 9.88965 29.8984 1.17383 37.5898 c
1.08301 37.6699 0.948242 37.6738 0.851563 37.5996 c
0.754883 37.5273 0.724609 37.3945 0.77832 37.2871 c
3.44531 31.8789 10.0313 25.4668 19.3838 26.4023 c
27.9404 27.2578 32.9053 35.416 33.9072 42.0938 C
34.4639 33.5723 32.5137 27.5566 25.1533 21.9473 c
25.0566 21.873 25.0264 21.7402 25.0811 21.6309 c
25.1357 21.5234 25.2607 21.4688 25.3779 21.502 c
32.1631 23.4629 37.6084 26.9277 40.4268 34.0469 C
40.4268 27.8848 38.2881 21.6738 32.9014 17.5352 c
32.8037 17.4609 32.7744 17.3301 32.8291 17.2207 c
32.8838 17.1113 33.0078 17.0566 33.125 17.0898 c
36.5781 18.0742 39.2959 19.5781 41.2627 22.2754 C
42.5732 11.1758 47.7842 4.58398 53.7881 4.58398 c
57.9131 4.58398 60.9932 7.61719 60.9932 12.4551 c
60.9932 15.2852 59.5049 19.2578 56.1826 21.4746 c
f
155.4092 113.0938 m
152.2471 116.998 145.8701 118.4863 138.9775 117.082 C
139.4873 121.3828 138.6436 125.873 137.3662 128.5664 c
137.3135 128.6758 137.1924 128.7334 137.0752 128.7051 c
136.958 128.6758 136.8779 128.5684 136.8818 128.4473 c
137.2568 119.6807 132.2588 112.6035 123.4326 109.5371 C
130.3389 114.293 132.3584 123.7305 129.0713 128.6035 c
129.0029 128.7021 128.876 128.7412 128.7646 128.6953 c
128.6533 128.6504 128.5889 128.5332 128.6104 128.416 c
128.9834 126.3555 128.0049 123.7314 125.8975 121.6895 c
122.9912 118.875 119.0479 118.2363 117.0869 120.2598 c
115.126 122.2852 115.8896 126.207 118.7939 129.0215 c
119.8545 130.0488 121.0537 130.7832 122.2432 131.2061 c
122.3564 131.2461 122.4248 131.3594 122.4092 131.4775 c
122.3955 131.5967 122.2998 131.6885 122.1807 131.6982 c
115.792 132.2529 111.4111 128.4463 108.665 123.8203 c
105.8701 119.1152 101.0947 115.4102 95.4541 116.1504 c
95.335 116.166 95.2217 116.0957 95.1807 115.9824 c
95.1416 115.8691 95.1865 115.7422 95.29 115.6807 c
98.0869 113.9961 101.1611 113.2969 105.1533 114.6289 C
99.3584 109.7197 91.1064 106.8867 83.3135 109.4014 c
83.2041 109.4375 83.085 109.3945 83.0225 109.2979 c
82.96 109.2012 82.9717 109.0752 83.0479 108.9902 c
88.9561 102.4258 100.7373 102.2949 108.1572 107.6172 C
105.1201 103.3008 101.0889 100.1328 93.8643 99.1387 c
93.749 99.123 93.6592 99.0313 93.6455 98.916 c
93.6338 98.7998 93.7002 98.6904 93.8096 98.6504 c
102.1006 95.5723 110.4092 98.6953 117.2549 106.8652 C
114.2627 100.4883 109.3486 95.3809 102.4873 92.8535 c
102.3721 92.8115 102.3037 92.6934 102.3252 92.5742 c
102.3447 92.4531 102.4482 92.3643 102.5693 92.3613 c
106.5127 92.2803 110.0557 93.2188 114.835 95.9316 C
111.3271 90.2422 112.0947 80.293 117.2041 73.6738 c
117.2744 73.582 117.3994 73.5498 117.5068 73.5957 c
117.6123 73.6426 117.6748 73.7549 117.6553 73.8691 c
116.4756 81.0703 118.9541 89.1992 123.2646 93.5117 C
121.1123 85.8799 123.2588 78.9355 129.1611 73.8672 c
129.2314 73.8066 129.3311 73.79 129.417 73.8232 c
129.5049 73.8564 129.5654 73.9355 129.5791 74.0273 c
130.8135 83.4453 141.3486 93.002 150.1807 93.8027 c
150.3057 93.8135 150.4033 93.9141 150.4111 94.0381 c
150.4189 94.1621 150.3369 94.2754 150.2139 94.3027 c
145.9346 95.2715 141.5225 94.793 137.8252 93.2715 C
140.4854 96.2051 143.7646 98.3828 147.3799 99.5176 c
147.4971 99.5537 147.5693 99.668 147.5557 99.7891 c
147.542 99.9102 147.4424 100.0039 147.3213 100.0127 c
142.8115 100.3242 138.3975 99.0068 134.5908 96.4746 C
138.9521 103.0957 145.5713 108.0195 154.0186 109.9805 c
154.1396 110.0088 154.2217 110.1191 154.2158 110.2432 c
154.208 110.3672 154.1123 110.4668 153.9893 110.4805 c
142.0713 111.7822 132.2432 107.1621 125.7686 98.5625 C
127.417 103.4629 132.1338 108.3184 138.7139 111.1816 c
144.5596 113.7266 150.5635 114.1279 155.1357 112.6914 c
155.2412 112.6582 155.3584 112.6982 155.4209 112.791 c
155.4834 112.8828 155.4795 113.0059 155.4092 113.0938 c
f
102.5049 37.5215 m
107.3115 48.0078 106.9697 56.207 103.0986 66.5762 c
103.0537 66.6934 102.9326 66.7607 102.8096 66.7363 c
102.6865 66.7109 102.6006 66.5996 102.6064 66.4746 c
103.2275 53.8535 99.7803 44.8203 92.3076 38.668 C
100.5576 48.5195 96.6611 68.2275 83.4854 68.2275 c
73.8994 68.2275 65.9697 60.252 64.0303 50.7031 c
64.0059 50.582 64.0723 50.459 64.1885 50.416 c
64.3037 50.3711 64.4346 50.416 64.4971 50.5215 c
67.3398 55.2832 71.9063 58.373 76.9541 58.373 c
85.0889 58.373 87.4951 51.9063 87.4951 47.375 c
87.4951 41.1875 82.5693 36.0313 78.7881 36.0313 c
75.3506 36.0313 73.7471 38.8555 73.7471 40.959 c
73.7471 44.8574 76.7451 48.125 80.124 49.123 c
80.2432 49.1582 80.3213 49.2773 80.3037 49.4023 c
80.2842 49.5273 80.1787 49.6191 80.0537 49.6211 c
75.9473 49.6465 72.4766 47.7656 70.4238 44.0527 C
70.1543 46.9277 70.1514 48.7383 71.0645 51.7754 c
71.0996 51.8926 71.0459 52.0176 70.9385 52.0742 c
70.8291 52.1309 70.6963 52.1016 70.6221 52.0059 c
63.2656 42.6133 66.7861 26.3809 72.6006 19.6484 C
67.0693 23.6309 62.1846 32.2813 62.2617 44.041 c
62.2627 44.1641 62.1768 44.2676 62.0566 44.291 c
61.9365 44.3164 61.8174 44.25 61.7725 44.1367 c
57.6641 33.8848 59.8438 14.8887 71.0537 4.28516 C
68.1699 3.88867 65.1865 3.93945 61.9287 4.97852 c
61.8135 5.01367 61.6885 4.96484 61.6299 4.85938 c
61.5713 4.75195 61.5947 4.61914 61.6885 4.54102 c
65.7803 1.08594 71.5029 0 76.9541 0 C
72.2568 5.5 73.8174 16.5547 81.3096 16.5547 c
86.6572 16.5547 89.085 8.25586 84.9561 3.77344 c
84.8779 3.6875 84.8682 3.55859 84.9307 3.46289 c
84.9951 3.36523 85.1162 3.32227 85.2275 3.36133 c
90.0068 5.01563 95.1729 9.15039 95.1729 14.377 c
95.1729 19.4199 90.3604 23.7715 83.3721 23.4277 C
92.1904 25.9336 101.4229 23.1602 106.2529 17.1758 c
106.3271 17.082 106.458 17.0547 106.5635 17.1074 c
106.6709 17.1621 106.7256 17.2832 106.6963 17.3984 c
103.9053 28.1152 94.7295 32.5977 83.2568 31.1055 C
92.5381 34.8613 106.5068 31.5859 112.6807 23.7949 c
112.7529 23.7031 112.8799 23.6738 112.9873 23.7227 c
113.0928 23.7734 113.1514 23.8906 113.1279 24.0039 c
111.7568 30.6191 108.2646 35.5664 102.5049 37.5215 C
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.545922 0 0.085573 0 0.615686 0.862745 0.976471 Xa
 0.545922 0 0.085573 0 0.615686 0.862745 0.976471 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
128.8877 56.8086 m
128.8662 56.6895 128.7627 56.6016 128.6416 56.6016 c
115.7354 56.4648 103.8877 53.334 94.6709 45.0859 C
102.7002 50.6445 117.6123 52.5957 126.1982 48.7051 c
126.3076 48.6543 126.3662 48.5332 126.3389 48.416 c
126.3135 48.2988 126.2061 48.2168 126.085 48.2188 c
115.4053 48.5098 106.8057 45.2129 100.1006 39.2559 C
106.9697 38.832 112.6748 34.5156 112.6572 29.4102 c
112.6572 29.291 112.5732 29.1875 112.4561 29.1621 c
112.3408 29.1387 112.2217 29.1973 112.1729 29.3066 c
111.0518 31.7949 107.4248 33.0879 103.5908 32.1875 c
99.4111 31.2051 96.5908 27.998 97.29 25.0215 c
97.7607 23.0078 99.7256 21.6191 102.2412 21.2344 c
102.3682 21.2148 102.4619 21.1055 102.458 20.9766 c
102.4541 20.8496 102.3564 20.7441 102.2275 20.7305 c
101.1592 20.6289 100.0479 20.625 98.9111 20.7344 c
92.4209 21.3516 87.3975 25.3281 86.9619 29.9121 C
82.249 29.3652 78.0771 26.7539 76.583 23.1387 c
76.5381 23.0293 76.4248 22.9668 76.3076 22.9844 c
76.1924 23.002 76.1045 23.0977 76.0947 23.2148 c
75.7178 27.9648 77.3525 31.0527 81.0654 34.0684 C
75.6807 32.0098 69.6201 31.9043 63.8096 34.6055 c
63.7041 34.6563 63.6455 34.7715 63.667 34.8867 c
63.6904 35.002 63.79 35.0859 63.9072 35.0898 c
68.7861 35.2793 72.3232 36.8457 75.6396 40.1621 C
57.3838 35.0273 42.5518 46.3633 47.6846 63.2129 c
47.7197 63.3301 47.8311 63.4043 47.9521 63.3926 c
48.0732 63.3809 48.1689 63.2852 48.1787 63.1641 c
49.0967 53.4492 55.8818 47.0469 66.04 46.0879 C
60.6533 48.1465 55.04 53.0625 54.4834 61.6211 c
54.4756 61.7441 54.5557 61.8535 54.6748 61.8848 c
54.7939 61.9141 54.917 61.8535 54.9678 61.7422 c
57.7666 55.5879 63.2646 52.4785 69.1279 51.9297 C
62.7939 54.5117 58.7314 60.5332 57.5576 68.3516 c
57.5381 68.4746 57.6123 68.5918 57.7314 68.6309 c
57.8486 68.668 57.9775 68.6152 58.0342 68.5039 c
61.8994 60.9219 70.1904 55.7109 80.4814 59.6934 c
91.0986 63.8027 95.7549 76.0781 96.7842 84.7324 c
96.7998 84.8555 96.8994 84.9492 97.0225 84.957 c
97.1455 84.9629 97.2549 84.8809 97.2842 84.7617 c
101.0029 69.0723 93.7002 52.8125 80.6475 45.9219 C
87.7432 47.9238 94.0869 52.1816 97.6748 59.2754 C
105.9678 60.293 111.6787 63.1387 114.5322 68.5156 c
114.5889 68.6211 114.7119 68.6738 114.8271 68.6406 c
114.9424 68.6055 115.0186 68.4941 115.0088 68.375 c
114.8271 66.2656 114.0674 62.0449 110.9346 60.1035 C
117.8994 60.1152 123.4404 59.2109 128.7334 57.0898 c
128.8447 57.0449 128.9111 56.9277 128.8877 56.8086 c
f
99.4014 110.2773 m
99.501 110.2129 99.6299 110.2227 99.7178 110.3047 c
99.8037 110.3848 99.8213 110.5137 99.7627 110.6172 c
98.1436 113.4141 99.6221 117.4297 102.8135 117.4297 c
108.5342 117.4297 111.2842 106.6602 110.4092 96.8379 C
108.2471 102.5918 106.376 104.8926 103.0615 107.6328 c
102.9678 107.709 102.833 107.7109 102.7393 107.6328 c
102.6455 107.5566 102.6182 107.4238 102.6768 107.3164 c
107.5322 98.2383 108.5732 91.252 108.5732 83.2324 C
107.1104 89.1895 105.3779 92.5527 100.4463 97.6133 c
100.3604 97.7012 100.2236 97.7148 100.1221 97.6445 c
100.0205 97.5742 99.9834 97.4414 100.0342 97.3301 c
105.333 85.7383 104.9287 72.8828 100.9814 63.0664 c
100.9424 62.9688 100.9678 62.8574 101.0439 62.7852 c
101.1221 62.7129 101.2334 62.6973 101.3291 62.7422 c
106.5342 65.293 109.5928 66.9688 114.0811 73.1328 C
112.7236 80.5313 113.8525 84.1797 117.2529 90.3262 C
113.3154 80.4102 115.4111 66.4336 125.4404 60.7363 c
125.5498 60.6738 125.6885 60.7012 125.7646 60.8008 c
125.8428 60.9004 125.8369 61.041 125.749 61.1328 c
121.9678 65.0879 119.2178 71.7676 121.5928 79.0586 C
120.0635 68.6699 129.1885 59.9453 139.3721 59.9453 c
148.9717 59.9453 155.5225 67.4531 154.9814 74.8848 c
154.4443 82.25 149.5381 85.8555 145.3096 87.3828 c
145.1982 87.4238 145.0732 87.3809 145.0107 87.2813 c
144.9463 87.1816 144.96 87.0508 145.0439 86.9668 c
150.6533 81.2734 151.4209 70.4746 141.46 67.207 C
147.3193 72.2637 145.1494 84.0352 135.7705 84.9316 c
135.6533 84.9414 135.5439 84.8711 135.5068 84.7598 c
135.4678 84.6504 135.5107 84.5273 135.6104 84.4648 c
137.6182 83.1855 139.2881 80.6934 139.2881 77.8906 c
139.2881 73.2168 135.8662 71.3789 133.6123 71.3789 c
130.1904 71.3789 127.3525 74.6348 127.3525 79.5605 c
127.3525 85.4023 132.6123 90.2441 139.3721 90.9941 c
145.999 91.7305 152.1553 88.8398 155.1221 84.5352 c
155.1924 84.4336 155.3232 84.3984 155.4365 84.4492 c
155.5479 84.5 155.6064 84.623 155.5771 84.7422 c
152.5576 96.4453 138.7803 101.6191 128.6885 94.25 C
135.3018 101.75 145.6943 101.8555 154.4111 94.1641 c
154.501 94.084 154.6357 94.0781 154.7334 94.1523 c
154.8291 94.2266 154.8604 94.3574 154.8057 94.4668 c
152.1396 99.873 145.5537 106.2852 136.2002 105.3516 c
127.6436 104.4961 122.6787 96.3359 121.6768 89.6602 C
121.1201 98.1816 123.0713 104.1953 130.4307 109.8047 c
130.5283 109.8789 130.5576 110.0117 130.5029 110.1211 c
130.4482 110.2305 130.3232 110.2852 130.2061 110.25 c
123.4209 108.291 117.9756 104.8262 115.1572 97.707 C
115.1572 103.8672 117.2959 110.0781 122.6826 114.2168 c
122.7803 114.291 122.8096 114.4238 122.7549 114.5332 c
122.7002 114.6406 122.5771 114.6953 122.46 114.6621 c
119.0068 113.6797 116.2881 112.1738 114.3213 109.4785 C
113.0107 120.5781 107.7998 127.168 101.7959 127.168 c
97.6709 127.168 94.5908 124.1348 94.5908 119.2988 c
94.5908 116.4688 96.0791 112.4961 99.4014 110.2773 c
f
0.174805 18.6602 m
3.33691 14.7559 9.71387 13.2676 16.6064 14.6719 C
16.0967 10.3691 16.9404 5.88086 18.2178 3.18555 c
18.2705 3.07813 18.3916 3.01953 18.5088 3.04883 c
18.626 3.07813 18.7061 3.18555 18.7021 3.30664 c
18.3271 12.0723 23.3252 19.1484 32.1514 22.2148 C
25.2451 17.459 23.2256 8.02148 26.5127 3.15039 c
26.5811 3.05078 26.708 3.01172 26.8193 3.05664 c
26.9307 3.10156 26.9951 3.21875 26.9736 3.33789 c
26.6006 5.39844 27.5791 8.02148 29.6865 10.0625 c
32.5928 12.877 36.5361 13.5156 38.4971 11.4922 c
40.458 9.4668 39.6943 5.54492 36.79 2.73242 c
35.7295 1.70508 34.5303 0.96875 33.3408 0.546875 c
33.2275 0.505859 33.1592 0.392578 33.1748 0.275391 c
33.1885 0.15625 33.2842 0.064453 33.4033 0.054688 c
39.792 -0.5 44.1729 3.30664 46.9189 7.93164 c
49.7139 12.6367 54.4893 16.3438 60.1299 15.6035 c
60.249 15.5879 60.3623 15.6582 60.4033 15.7715 c
60.4424 15.8848 60.3975 16.0098 60.2939 16.0723 c
57.4971 17.7559 54.4229 18.4551 50.4307 17.125 C
56.2256 22.0332 64.4775 24.8652 72.2705 22.3516 c
72.3799 22.3164 72.499 22.3594 72.5615 22.4551 c
72.624 22.5508 72.6143 22.6777 72.5361 22.7637 c
66.6279 29.3281 54.8467 29.459 47.4268 24.1348 C
50.4639 28.4512 54.4951 31.6211 61.7197 32.6133 c
61.835 32.6289 61.9248 32.7227 61.9385 32.8379 c
61.9502 32.9531 61.8838 33.0625 61.7744 33.1035 c
53.4834 36.1797 45.1748 33.0586 38.3291 24.8867 C
41.3213 31.2656 46.2354 36.373 53.0967 38.9004 c
53.2119 38.9414 53.2803 39.0586 53.2588 39.1797 c
53.2393 39.3008 53.1357 39.3887 53.0146 39.3906 c
49.0713 39.4727 45.5283 38.5332 40.749 35.8203 C
44.2568 41.5117 43.4893 51.459 38.3799 58.0801 c
38.3096 58.1719 38.1846 58.2031 38.0771 58.1582 c
37.9717 58.1113 37.9092 57.998 37.9287 57.8828 c
39.1084 50.6836 36.6299 42.5547 32.3193 38.2422 C
34.4717 45.873 32.3252 52.8184 26.4229 57.8848 c
26.3525 57.9453 26.2529 57.9629 26.167 57.9297 c
26.0791 57.8965 26.0186 57.8184 26.0049 57.7266 c
24.7705 48.3086 14.2354 38.752 5.40332 37.9512 c
5.27832 37.9395 5.18066 37.8398 5.17285 37.7148 c
5.16504 37.5898 5.24707 37.4785 5.37012 37.4512 c
9.64941 36.4824 14.0615 36.9609 17.7588 38.4805 C
15.0986 35.5488 11.8193 33.3711 8.2041 32.2363 c
8.08691 32.1992 8.01465 32.0859 8.02832 31.9648 c
8.04199 31.8438 8.1416 31.748 8.2627 31.7402 c
12.7725 31.4297 17.1865 32.7461 20.9932 35.2793 C
16.6318 28.6582 10.0127 23.7344 1.56543 21.7715 c
1.44434 21.7441 1.3623 21.6328 1.36816 21.5098 c
1.37598 21.3867 1.47168 21.2871 1.59473 21.2734 c
13.5127 19.9707 23.3408 24.5918 29.8154 33.1914 C
28.167 28.2891 23.4502 23.4355 16.8701 20.5723 c
11.0244 18.0273 5.02051 17.625 0.448242 19.0625 c
0.342773 19.0957 0.225586 19.0547 0.163086 18.9629 c
0.100586 18.8691 0.104492 18.7461 0.174805 18.6602 c
f
53.0791 94.2324 m
48.2725 83.7461 48.6143 75.5469 52.4854 65.1777 c
52.5303 65.0605 52.6514 64.9922 52.7744 65.0176 c
52.8975 65.043 52.9834 65.1543 52.9775 65.2773 c
52.3564 77.9004 55.8037 86.9316 63.2764 93.0859 C
55.0264 83.2324 58.9229 63.5254 72.0986 63.5254 c
81.6846 63.5254 89.6143 71.502 91.5537 81.0508 c
91.5791 81.1719 91.5127 81.293 91.3955 81.3379 c
91.2803 81.3828 91.1494 81.3379 91.0869 81.2305 c
88.2451 76.4688 83.6787 73.3789 78.6299 73.3789 c
70.4951 73.3789 68.0889 79.8457 68.0889 84.3789 c
68.0889 90.5645 73.0146 95.7207 76.7959 95.7207 c
80.2334 95.7207 81.8369 92.8984 81.8369 90.7949 c
81.8369 86.8965 78.8389 83.6289 75.4619 82.6309 c
75.3408 82.5938 75.2646 82.4766 75.2822 82.3516 c
75.2998 82.2266 75.4053 82.1328 75.5322 82.1328 c
79.6377 82.1074 83.1084 83.9863 85.1611 87.7012 C
85.4307 84.8262 85.4326 83.0156 84.5205 79.9766 c
84.4854 79.8594 84.5381 79.7344 84.6455 79.6777 c
84.7549 79.623 84.8877 79.6504 84.9619 79.748 c
92.3193 89.1406 88.7979 105.3711 82.9834 112.1055 C
88.5146 108.123 93.3994 99.4707 93.3232 87.7109 c
93.3213 87.5898 93.4072 87.4844 93.5283 87.4609 c
93.6475 87.4375 93.7666 87.502 93.8115 87.6152 c
97.9209 97.8691 95.7412 116.8633 84.5303 127.4668 C
87.415 127.8652 90.3975 127.8145 93.6553 126.7754 c
93.7705 126.7383 93.8955 126.7891 93.9541 126.8945 c
94.0127 127 93.9893 127.1328 93.8955 127.2109 c
89.8037 130.666 84.0811 131.752 78.6299 131.752 C
83.3271 126.252 81.7666 115.1992 74.2764 115.1992 c
68.9268 115.1992 66.499 123.498 70.6279 127.9805 c
70.7061 128.0664 70.7158 128.1934 70.6533 128.291 c
70.5889 128.3887 70.4678 128.4297 70.3564 128.3926 c
65.5771 126.7363 60.4111 122.6035 60.4111 117.375 c
60.4111 112.334 65.2236 107.9805 72.2139 108.3242 C
63.3936 105.8203 54.1611 108.5918 49.3311 114.5781 c
49.2568 114.6699 49.126 114.6992 49.0205 114.6445 c
48.9131 114.5918 48.8584 114.4707 48.8877 114.3535 c
51.6787 103.6387 60.8545 99.1543 72.3271 100.6484 C
63.0459 96.8906 49.0771 100.166 42.9033 107.957 c
42.8311 108.0488 42.7041 108.0801 42.5967 108.0293 c
42.4912 107.9805 42.4326 107.8633 42.4561 107.748 c
43.8271 101.1328 47.3193 96.1875 53.0791 94.2324 C
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.990326 0.8663 0.278965 0 0 0.258824 0.494118 Xa
 0.990326 0.8663 0.278965 0 0 0.258824 0.494118 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
135.0352 184.5869 m
135.0566 184.7061 135.1602 184.792 135.2813 184.7939 c
148.1875 184.9287 160.0352 188.0615 169.2529 196.3086 C
161.2227 190.751 146.3105 188.7979 137.7256 192.6904 c
137.6152 192.7402 137.5566 192.8604 137.584 192.9785 c
137.6104 193.0967 137.7168 193.1787 137.8379 193.1748 c
148.5176 192.8857 157.1172 196.1816 163.8223 202.1396 C
156.9531 202.5615 151.248 206.8799 151.2656 211.9844 c
151.2656 212.1035 151.3496 212.2061 151.4668 212.2314 c
151.583 212.2568 151.7012 212.1963 151.75 212.0879 c
152.8711 209.5986 156.498 208.3076 160.333 209.208 c
164.5127 210.1885 167.333 213.3975 166.6338 216.373 c
166.1621 218.3877 164.1973 219.7764 161.6816 220.1602 c
161.5547 220.1787 161.4619 220.29 161.4648 220.418 c
161.4688 220.5459 161.5674 220.6514 161.6953 220.6631 c
162.7637 220.7656 163.875 220.7695 165.0127 220.6611 c
171.5029 220.0439 176.5264 216.0654 176.9619 211.4834 C
181.6738 212.0303 185.8457 214.6396 187.3398 218.2568 c
187.3848 218.3652 187.5 218.4287 187.6152 218.4111 c
187.7305 218.3916 187.8184 218.2969 187.8281 218.1807 c
188.2051 213.4287 186.5703 210.3418 182.8584 207.3262 C
188.2422 209.3857 194.3027 209.4912 200.1133 206.7881 c
200.2188 206.7393 200.2773 206.624 200.2559 206.5088 c
200.2324 206.3936 200.1328 206.3096 200.0156 206.3057 c
195.1367 206.1152 191.5996 204.5498 188.2852 201.2334 C
206.5391 206.3672 221.3701 195.0322 216.2383 178.1807 c
216.2031 178.0654 216.0918 177.9902 215.9707 178.0029 c
215.8496 178.0146 215.7539 178.1104 215.7441 178.2314 c
214.8262 187.9453 208.041 194.3467 197.8828 195.3076 C
203.2695 193.2471 208.8828 188.3311 209.4395 179.7734 c
209.4473 179.6514 209.3672 179.54 209.248 179.5107 c
209.1289 179.4814 209.0059 179.54 208.9551 179.6514 c
206.1563 185.8057 200.6582 188.917 194.7949 189.4639 C
201.1289 186.8838 205.1914 180.8623 206.3652 173.0439 c
206.3848 172.9209 206.3105 172.8018 206.1914 172.7646 c
206.0742 172.7256 205.9453 172.7803 205.8887 172.8896 c
202.0234 180.4727 193.7324 185.6836 183.4424 181.7021 c
172.8252 177.5928 168.168 165.3154 167.1387 156.6611 c
167.124 156.54 167.0234 156.4463 166.9004 156.4385 c
166.7783 156.4307 166.668 156.5127 166.6396 156.6338 c
162.9199 172.3213 170.2227 188.583 183.2764 195.4736 C
176.1807 193.4707 169.8369 189.2139 166.249 182.1191 C
157.9551 181.1006 152.2451 178.2568 149.3916 172.8799 c
149.335 172.7725 149.2109 172.7197 149.0957 172.7549 c
148.9805 172.7881 148.9043 172.8994 148.9141 173.0205 c
149.0967 175.1299 149.8555 179.3506 152.9883 181.291 C
146.0234 181.2803 140.4824 182.1846 135.1895 184.3037 c
135.0781 184.3496 135.0127 184.4678 135.0352 184.5869 c
f
164.5215 131.1162 m
164.4229 131.1826 164.293 131.1709 164.2061 131.0908 c
164.1201 131.0088 164.1016 130.8799 164.1602 130.7783 c
165.7803 127.9814 164.3008 123.9639 161.1094 123.9639 c
155.3887 123.9639 152.6387 134.7334 153.5137 144.5576 C
155.6768 138.8018 157.5469 136.5029 160.8613 133.7627 c
160.9551 133.6846 161.0898 133.6846 161.1836 133.7607 c
161.2773 133.8389 161.3047 133.9697 161.2471 134.0771 c
156.3906 143.1572 155.3496 150.1436 155.3496 158.1631 C
156.8125 152.2041 158.5449 148.8408 163.4766 143.7822 c
163.5625 143.6943 163.6992 143.6807 163.8018 143.749 c
163.9033 143.8193 163.9404 143.9521 163.8887 144.0654 c
158.5908 155.6553 158.9951 168.5127 162.9414 178.3291 c
162.9805 178.4268 162.9561 178.5381 162.8789 178.6104 c
162.8018 178.6807 162.6895 178.6982 162.5938 178.6514 c
157.3887 176.1006 154.3301 174.4248 149.8418 168.2627 C
151.1992 160.8643 150.0703 157.2139 146.6699 151.0674 C
150.6074 160.9854 148.5117 174.9619 138.4824 180.6592 c
138.373 180.7207 138.2344 180.6934 138.1582 180.5947 c
138.0801 180.4951 138.0869 180.3535 138.1738 180.2627 c
141.9551 176.3076 144.7051 169.6279 142.3301 162.335 C
143.8594 172.7236 134.7344 181.4502 124.5508 181.4502 c
114.9512 181.4502 108.4004 173.9404 108.9414 166.5088 c
109.4785 159.1436 114.3848 155.54 118.6133 154.0107 c
118.7246 153.9717 118.8496 154.0127 118.9131 154.1123 c
118.9766 154.2139 118.9629 154.3428 118.8799 154.4287 c
113.2695 160.1201 112.502 170.9209 122.4629 174.1885 C
116.6035 169.1318 118.7734 157.3584 128.1523 156.4639 c
128.2695 156.4521 128.3789 156.5225 128.417 156.6338 c
128.4551 156.7451 128.4121 156.8682 128.3135 156.9307 c
126.3047 158.208 124.6348 160.7021 124.6348 163.5049 c
124.6348 168.1787 128.0566 170.0146 130.3105 170.0146 c
133.7324 170.0146 136.5703 166.7588 136.5703 161.835 c
136.5703 155.9912 131.3105 151.1514 124.5508 150.3994 c
117.9248 149.665 111.7686 152.5537 108.8008 156.8584 c
108.7314 156.96 108.5996 156.9971 108.4873 156.9463 c
108.375 156.8955 108.3164 156.7705 108.3467 156.6514 c
111.3652 144.9482 125.1426 139.7744 135.2344 147.1455 C
128.6211 139.6436 118.2285 139.54 109.5127 147.2314 c
109.4219 147.3115 109.2871 147.3154 109.1904 147.2412 c
109.0938 147.1689 109.0635 147.0361 109.1172 146.9287 c
111.7842 141.5205 118.3701 135.1084 127.7227 136.0439 c
136.2793 136.8994 141.2441 145.0576 142.2461 151.7354 C
142.8027 143.2139 140.8525 137.1982 133.4922 131.5889 c
133.3955 131.5146 133.3652 131.3818 133.4199 131.2725 c
133.4746 131.165 133.5996 131.1104 133.7168 131.1436 c
140.502 133.1045 145.9473 136.5693 148.7656 143.6885 C
148.7656 137.5264 146.627 131.3154 141.2402 127.1768 c
141.1426 127.1025 141.1133 126.9717 141.168 126.8623 c
141.2227 126.7529 141.3467 126.6982 141.4639 126.7314 c
144.917 127.7158 147.6348 129.2197 149.6016 131.917 C
150.9121 120.8174 156.123 114.2256 162.127 114.2256 c
166.252 114.2256 169.332 117.2588 169.332 122.0967 c
169.332 124.9268 167.8438 128.8994 164.5215 131.1162 c
f
263.7471 222.7354 m
260.585 226.6396 254.208 228.1279 247.3154 226.7236 C
247.8252 231.0244 246.9814 235.5146 245.7041 238.208 c
245.6514 238.3174 245.5303 238.375 245.4131 238.3467 c
245.2959 238.3174 245.2158 238.21 245.2197 238.0889 c
245.5947 229.3223 240.5967 222.2451 231.7705 219.1787 C
238.6768 223.9346 240.6963 233.3721 237.4092 238.2451 c
237.3408 238.3438 237.2139 238.3828 237.1025 238.3369 c
236.9912 238.292 236.9268 238.1748 236.9482 238.0576 c
237.3213 235.9971 236.3428 233.373 234.2354 231.3311 c
231.3291 228.5166 227.3857 227.8779 225.4248 229.9014 c
223.4639 231.9268 224.2275 235.8486 227.1318 238.6631 c
228.1924 239.6904 229.3916 240.4248 230.5811 240.8477 c
230.6943 240.8877 230.7627 241.001 230.7471 241.1191 c
230.7334 241.2383 230.6377 241.3301 230.5186 241.3398 c
224.1299 241.8945 219.749 238.0879 217.0039 233.4619 c
214.209 228.7568 209.4336 225.0518 203.793 225.792 c
203.6738 225.8076 203.5605 225.7373 203.5195 225.624 c
203.4805 225.5107 203.5254 225.3838 203.6289 225.3223 c
206.4258 223.6377 209.5 222.9385 213.4922 224.2705 C
207.6973 219.3613 199.4453 216.5283 191.6523 219.043 c
191.543 219.0791 191.4238 219.0361 191.3613 218.9395 c
191.2988 218.8428 191.3105 218.7168 191.3867 218.6318 c
197.2949 212.0674 209.0762 211.9365 216.4961 217.2588 C
213.459 212.9424 209.4277 209.7744 202.2031 208.7803 c
202.0879 208.7646 201.998 208.6729 201.9844 208.5576 c
201.9727 208.4414 202.0391 208.332 202.1484 208.292 c
210.4395 205.2139 218.748 208.3369 225.5928 216.5068 C
222.6006 210.1299 217.6875 205.0225 210.8262 202.4951 c
210.7109 202.4531 210.6426 202.335 210.6641 202.2158 c
210.6836 202.0947 210.7871 202.0059 210.9082 202.0029 c
214.8516 201.9219 218.3945 202.8604 223.1729 205.5732 C
219.665 199.8838 220.4326 189.9346 225.542 183.3154 c
225.6123 183.2236 225.7373 183.1914 225.8447 183.2373 c
225.9502 183.2842 226.0127 183.3965 225.9932 183.5107 c
224.8135 190.7119 227.292 198.8408 231.6025 203.1533 C
229.4502 195.5215 231.5967 188.5771 237.499 183.5088 c
237.5693 183.4482 237.6689 183.4316 237.7549 183.4648 c
237.8428 183.498 237.9033 183.5771 237.917 183.6689 c
239.1514 193.0869 249.6865 202.6436 258.5186 203.4443 c
258.6436 203.4551 258.7412 203.5557 258.749 203.6797 c
258.7568 203.8037 258.6748 203.917 258.5518 203.9443 c
254.2725 204.9131 249.8604 204.4346 246.1631 202.9131 C
248.8232 205.8467 252.1025 208.0244 255.7178 209.1592 c
255.835 209.1953 255.9072 209.3096 255.8936 209.4307 c
255.8799 209.5518 255.7803 209.6455 255.6592 209.6543 c
251.1494 209.9658 246.7354 208.6484 242.9287 206.1162 C
247.29 212.7373 253.9092 217.6611 262.3564 219.6221 c
262.4775 219.6504 262.5596 219.7607 262.5537 219.8848 c
262.5459 220.0088 262.4502 220.1084 262.3271 220.1221 c
250.4092 221.4238 240.5811 216.8037 234.1064 208.2041 C
235.7549 213.1045 240.4717 217.96 247.0518 220.8232 c
252.8975 223.3682 258.9014 223.7695 263.4736 222.333 c
263.5791 222.2998 263.6963 222.3398 263.7588 222.4326 c
263.8213 222.5244 263.8174 222.6475 263.7471 222.7354 c
f
210.8438 147.1631 m
215.6504 157.6494 215.3086 165.8486 211.4375 176.2178 c
211.3926 176.335 211.2715 176.4023 211.1484 176.3779 c
211.0254 176.3525 210.9395 176.2412 210.9453 176.1162 c
211.5664 163.4951 208.1191 154.4619 200.6465 148.3096 C
208.8965 158.1611 205 177.8691 191.8242 177.8691 c
182.2383 177.8691 174.3086 169.8936 172.3691 160.3447 c
172.3447 160.2236 172.4111 160.1006 172.5273 160.0576 c
172.6426 160.0127 172.7734 160.0576 172.8359 160.1631 c
175.6787 164.9248 180.2451 168.0146 185.293 168.0146 c
193.4277 168.0146 195.834 161.5479 195.834 157.0166 c
195.834 150.8291 190.9082 145.6729 187.127 145.6729 c
183.6895 145.6729 182.0859 148.4971 182.0859 150.6006 c
182.0859 154.499 185.084 157.7666 188.4629 158.7646 c
188.582 158.7998 188.6602 158.9189 188.6426 159.0439 c
188.623 159.1689 188.5176 159.2607 188.3926 159.2627 c
184.2861 159.2881 180.8154 157.4072 178.7627 153.6943 C
178.4932 156.5693 178.4902 158.3799 179.4033 161.417 c
179.4385 161.5342 179.3848 161.6592 179.2773 161.7158 c
179.168 161.7725 179.0352 161.7432 178.9609 161.6475 c
171.6045 152.2549 175.125 136.0225 180.9395 129.29 C
175.4082 133.2725 170.5234 141.9229 170.6006 153.6826 c
170.6016 153.8057 170.5156 153.9092 170.3955 153.9326 c
170.2754 153.958 170.1563 153.8916 170.1113 153.7783 c
166.0029 143.5264 168.1826 124.5303 179.3926 113.9268 C
176.5088 113.5303 173.5254 113.5811 170.2676 114.6201 c
170.1523 114.6553 170.0273 114.6064 169.9688 114.501 c
169.9102 114.3936 169.9336 114.2607 170.0273 114.1826 c
174.1191 110.7275 179.8418 109.6416 185.293 109.6416 C
180.5957 115.1416 182.1563 126.1963 189.6484 126.1963 c
194.9961 126.1963 197.4238 117.8975 193.2949 113.415 c
193.2168 113.3291 193.207 113.2002 193.2695 113.1045 c
193.334 113.0068 193.4551 112.9639 193.5664 113.0029 c
198.3457 114.6572 203.5117 118.792 203.5117 124.0186 c
203.5117 129.0615 198.6992 133.4131 191.7109 133.0693 C
200.5293 135.5752 209.7617 132.8018 214.5918 126.8174 c
214.666 126.7236 214.7969 126.6963 214.9023 126.749 c
215.0098 126.8037 215.0645 126.9248 215.0352 127.04 c
212.2441 137.7568 203.0684 142.2393 191.5957 140.7471 C
200.877 144.5029 214.8457 141.2275 221.0186 133.4365 c
221.0908 133.3447 221.2178 133.3154 221.3252 133.3643 c
221.4307 133.415 221.4893 133.5322 221.4658 133.6455 c
220.0947 140.2607 216.6035 145.208 210.8438 147.1631 C
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.545922 0 0.085573 0 0.615686 0.862745 0.976471 Xa
 0.545922 0 0.085573 0 0.615686 0.862745 0.976471 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
237.2256 166.4502 m
237.2041 166.3311 237.1006 166.2432 236.9795 166.2432 c
224.0732 166.1064 212.2266 162.9756 203.0098 154.7275 C
211.0391 160.2861 225.9502 162.2373 234.5361 158.3467 c
234.6455 158.2959 234.7041 158.1748 234.6768 158.0576 c
234.6514 157.9404 234.5439 157.8584 234.4229 157.8604 c
223.7432 158.1514 215.1445 154.8545 208.4395 148.8975 C
215.3086 148.4736 221.0127 144.1572 220.9951 139.0518 c
220.9951 138.9326 220.9111 138.8291 220.7939 138.8037 c
220.6787 138.7803 220.5596 138.8389 220.5107 138.9482 c
219.3896 141.4365 215.7637 142.7295 211.9297 141.8291 c
207.75 140.8467 204.9297 137.6396 205.6289 134.6631 c
206.0996 132.6494 208.0645 131.2607 210.5801 130.876 c
210.707 130.8564 210.8008 130.7471 210.7969 130.6182 c
210.793 130.4912 210.6953 130.3857 210.5664 130.3721 c
209.498 130.2705 208.3867 130.2666 207.25 130.376 c
200.7598 130.9932 195.7363 134.9697 195.3008 139.5537 C
190.5879 139.0068 186.416 136.3955 184.9219 132.7803 c
184.877 132.6709 184.7637 132.6084 184.6465 132.626 c
184.5313 132.6436 184.4434 132.7393 184.4336 132.8564 c
184.0566 137.6064 185.6914 140.6943 189.4043 143.71 C
184.0195 141.6514 177.959 141.5459 172.1484 144.2471 c
172.043 144.2979 171.9844 144.4131 172.0059 144.5283 c
172.0293 144.6436 172.1289 144.7275 172.2461 144.7314 c
177.125 144.9209 180.6621 146.4873 183.9785 149.8037 C
165.7227 144.6689 150.8906 156.0049 156.0234 172.8545 c
156.0586 172.9717 156.1699 173.0459 156.291 173.0342 c
156.4121 173.0225 156.5078 172.9268 156.5176 172.8057 c
157.4355 163.0908 164.2207 156.6885 174.3789 155.7295 C
168.9922 157.7881 163.3789 162.7041 162.8223 171.2627 c
162.8145 171.3857 162.8945 171.4951 163.0137 171.5264 c
163.1328 171.5557 163.2559 171.4951 163.3066 171.3838 c
166.1055 165.2295 171.6035 162.1201 177.4668 161.5713 C
171.1328 164.1533 167.0703 170.1748 165.8965 177.9932 c
165.877 178.1162 165.9512 178.2334 166.0703 178.2725 c
166.1875 178.3096 166.3164 178.2568 166.373 178.1455 c
170.2383 170.5635 178.5293 165.3525 188.8203 169.335 c
199.4375 173.4443 204.0938 185.7197 205.123 194.374 c
205.1387 194.4971 205.2383 194.5908 205.3613 194.5986 c
205.4844 194.6045 205.5938 194.5225 205.623 194.4033 c
209.3418 178.7139 202.0391 162.4541 188.9863 155.5635 C
196.082 157.5654 202.4258 161.8232 206.0137 168.917 C
214.3066 169.9346 220.0166 172.7803 222.8701 178.1572 c
222.9268 178.2627 223.0498 178.3154 223.165 178.2822 c
223.2803 178.2471 223.3564 178.1357 223.3467 178.0166 c
223.165 175.9072 222.4053 171.6865 219.2725 169.7451 C
226.2373 169.7568 231.7783 168.8525 237.0713 166.7314 c
237.1826 166.6865 237.249 166.5693 237.2256 166.4502 c
f
207.7402 219.9189 m
207.8398 219.8545 207.9688 219.8643 208.0566 219.9463 c
208.1426 220.0264 208.1602 220.1553 208.1016 220.2588 c
206.4824 223.0557 207.9609 227.0713 211.1523 227.0713 c
216.873 227.0713 219.6221 216.3018 218.748 206.4795 C
216.5859 212.2334 214.7148 214.5342 211.4004 217.2744 c
211.3066 217.3506 211.1719 217.3525 211.0781 217.2744 c
210.9844 217.1982 210.957 217.0654 211.0156 216.958 c
215.8711 207.8799 216.9121 200.8936 216.9121 192.874 C
215.4492 198.8311 213.7168 202.1943 208.7852 207.2549 c
208.6992 207.3428 208.5625 207.3564 208.4609 207.2861 c
208.3594 207.2158 208.3223 207.083 208.373 206.9717 c
213.6719 195.3799 213.2676 182.5244 209.3203 172.708 c
209.2813 172.6104 209.3066 172.499 209.3828 172.4268 c
209.4609 172.3545 209.5723 172.3389 209.668 172.3838 c
214.873 174.9346 217.9316 176.6104 222.4189 182.7744 C
221.0615 190.1729 222.1904 193.8213 225.5908 199.9678 C
221.6533 190.0518 223.749 176.0752 233.7783 170.3779 c
233.8877 170.3154 234.0264 170.3428 234.1025 170.4424 c
234.1807 170.542 234.1748 170.6826 234.0869 170.7744 c
230.3057 174.7295 227.5557 181.4092 229.9307 188.7002 C
228.4014 178.3115 237.5264 169.5869 247.71 169.5869 c
257.3096 169.5869 263.8604 177.0947 263.3193 184.5264 c
262.7822 191.8916 257.876 195.4971 253.6475 197.0244 c
253.5361 197.0654 253.4111 197.0225 253.3486 196.9229 c
253.2842 196.8232 253.2979 196.6924 253.3818 196.6084 c
258.9912 190.915 259.7588 180.1162 249.7979 176.8486 C
255.6572 181.9053 253.4873 193.6768 244.1084 194.5732 c
243.9912 194.583 243.8818 194.5127 243.8447 194.4014 c
243.8057 194.292 243.8486 194.1689 243.9482 194.1064 c
245.9561 192.8271 247.626 190.335 247.626 187.5322 c
247.626 182.8584 244.2041 181.0205 241.9502 181.0205 c
238.5283 181.0205 235.6904 184.2764 235.6904 189.2021 c
235.6904 195.0439 240.9502 199.8857 247.71 200.6357 c
254.3369 201.3721 260.4932 198.4814 263.46 194.1768 c
263.5303 194.0752 263.6611 194.04 263.7744 194.0908 c
263.8857 194.1416 263.9443 194.2646 263.915 194.3838 c
260.8955 206.0869 247.1182 211.2607 237.0264 203.8916 C
243.6396 211.3916 254.0322 211.4971 262.749 203.8057 c
262.8389 203.7256 262.9736 203.7197 263.0713 203.7939 c
263.167 203.8682 263.1982 203.999 263.1436 204.1084 c
260.4775 209.5146 253.8916 215.9268 244.5381 214.9932 c
235.9814 214.1377 231.0166 205.9775 230.0146 199.3018 C
229.458 207.8232 231.4092 213.8369 238.7686 219.4463 c
238.8662 219.5205 238.8955 219.6533 238.8408 219.7627 c
238.7861 219.8721 238.6611 219.9268 238.5439 219.8916 c
231.7588 217.9326 226.3135 214.4678 223.4951 207.3486 C
223.4951 213.5088 225.6338 219.7197 231.0205 223.8584 c
231.1182 223.9326 231.1475 224.0654 231.0928 224.1748 c
231.0381 224.2822 230.915 224.3369 230.7979 224.3037 c
227.3447 223.3213 224.626 221.8154 222.6592 219.1201 C
221.3486 230.2197 216.1387 236.8096 210.1348 236.8096 c
206.0098 236.8096 202.9297 233.7764 202.9297 228.9404 c
202.9297 226.1104 204.418 222.1377 207.7402 219.9189 c
f
108.5137 128.3018 m
111.6758 124.3975 118.0527 122.9092 124.9453 124.3135 C
124.4355 120.0107 125.2793 115.5225 126.5566 112.8271 c
126.6094 112.7197 126.7305 112.6611 126.8477 112.6904 c
126.9648 112.7197 127.0449 112.8271 127.041 112.9482 c
126.666 121.7139 131.6641 128.79 140.4902 131.8564 C
133.584 127.1006 131.5645 117.6631 134.8516 112.792 c
134.9199 112.6924 135.0469 112.6533 135.1582 112.6982 c
135.2695 112.7432 135.334 112.8604 135.3125 112.9795 c
134.9395 115.04 135.918 117.6631 138.0254 119.7041 c
140.9316 122.5186 144.875 123.1572 146.8359 121.1338 c
148.7969 119.1084 148.0332 115.1865 145.1289 112.374 c
144.0684 111.3467 142.8691 110.6104 141.6797 110.1885 c
141.5664 110.1475 141.498 110.0342 141.5137 109.917 c
141.5273 109.7979 141.623 109.7061 141.7422 109.6963 c
148.1309 109.1416 152.5117 112.9482 155.2578 117.5732 c
158.0527 122.2783 162.8281 125.9854 168.4688 125.2451 c
168.5879 125.2295 168.7012 125.2998 168.7422 125.4131 c
168.7813 125.5264 168.7363 125.6514 168.6328 125.7139 c
165.8359 127.3975 162.7617 128.0967 158.7695 126.7666 C
164.5645 131.6748 172.8164 134.5068 180.6094 131.9932 c
180.7188 131.958 180.8379 132.001 180.9004 132.0967 c
180.9629 132.1924 180.9531 132.3193 180.875 132.4053 c
174.9668 138.9697 163.1855 139.1006 155.7656 133.7764 C
158.8027 138.0928 162.834 141.2627 170.0586 142.2549 c
170.1738 142.2705 170.2637 142.3643 170.2773 142.4795 c
170.2891 142.5947 170.2227 142.7041 170.1133 142.7451 c
161.8223 145.8213 153.5137 142.7002 146.668 134.5283 C
149.6602 140.9072 154.5742 146.0146 161.4355 148.542 c
161.5508 148.583 161.6191 148.7002 161.5977 148.8213 c
161.5781 148.9424 161.4746 149.0303 161.3535 149.0322 c
157.4102 149.1143 153.8672 148.1748 149.0879 145.4619 C
152.5957 151.1533 151.8281 161.1006 146.7188 167.7217 c
146.6484 167.8135 146.5234 167.8447 146.416 167.7998 c
146.3105 167.7529 146.248 167.6396 146.2676 167.5244 c
147.4473 160.3252 144.9688 152.1963 140.6582 147.8838 C
142.8105 155.5146 140.6641 162.46 134.7617 167.5264 c
134.6914 167.5869 134.5918 167.6045 134.5059 167.5713 c
134.418 167.5381 134.3574 167.46 134.3438 167.3682 c
133.1094 157.9502 122.5742 148.3936 113.7422 147.5928 c
113.6172 147.5811 113.5195 147.4814 113.5117 147.3564 c
113.5039 147.2314 113.5859 147.1201 113.709 147.0928 c
117.9883 146.124 122.4004 146.6025 126.0977 148.1221 C
123.4375 145.1904 120.1582 143.0127 116.543 141.8779 c
116.4258 141.8408 116.3535 141.7275 116.3672 141.6064 c
116.3809 141.4854 116.4805 141.3896 116.6016 141.3818 c
121.1113 141.0713 125.5254 142.3877 129.332 144.9209 C
124.9707 138.2998 118.3516 133.376 109.9043 131.4131 c
109.7832 131.3857 109.7012 131.2744 109.707 131.1514 c
109.7148 131.0283 109.8105 130.9287 109.9336 130.915 c
121.8516 129.6123 131.6797 134.2334 138.1543 142.833 C
136.5059 137.9307 131.7891 133.0771 125.209 130.2139 c
119.3633 127.6689 113.3594 127.2666 108.7871 128.7041 c
108.6816 128.7373 108.5645 128.6963 108.502 128.6045 c
108.4395 128.5107 108.4434 128.3877 108.5137 128.3018 c
f
161.418 203.874 m
156.6113 193.3877 156.9531 185.1885 160.8242 174.8193 c
160.8691 174.7021 160.9902 174.6338 161.1133 174.6592 c
161.2363 174.6846 161.3223 174.7959 161.3164 174.9189 c
160.6953 187.542 164.1426 196.5732 171.6152 202.7275 C
163.3652 192.874 167.2617 173.167 180.4375 173.167 c
190.0234 173.167 197.9531 181.1436 199.8926 190.6924 c
199.918 190.8135 199.8516 190.9346 199.7344 190.9795 c
199.6191 191.0244 199.4883 190.9795 199.4258 190.8721 c
196.584 186.1104 192.0176 183.0205 186.9688 183.0205 c
178.834 183.0205 176.4277 189.4873 176.4277 194.0205 c
176.4277 200.2061 181.3535 205.3623 185.1348 205.3623 c
188.5723 205.3623 190.1758 202.54 190.1758 200.4365 c
190.1758 196.5381 187.1777 193.2705 183.8008 192.2725 c
183.6797 192.2354 183.6035 192.1182 183.6211 191.9932 c
183.6387 191.8682 183.7441 191.7744 183.8711 191.7744 c
187.9766 191.749 191.4473 193.6279 193.5 197.3428 C
193.7695 194.4678 193.7715 192.6572 192.8594 189.6182 c
192.8242 189.501 192.877 189.376 192.9844 189.3193 c
193.0938 189.2646 193.2266 189.292 193.3008 189.3896 c
200.6582 198.7822 197.1367 215.0127 191.3223 221.7471 C
196.8535 217.7646 201.7383 209.1123 201.6621 197.3525 c
201.6602 197.2314 201.7461 197.126 201.8672 197.1025 c
201.9863 197.0791 202.1055 197.1436 202.1504 197.2568 c
206.2598 207.5107 204.0801 226.5049 192.8691 237.1084 C
195.7539 237.5068 198.7363 237.4561 201.9941 236.417 c
202.1094 236.3799 202.2344 236.4307 202.293 236.5361 c
202.3516 236.6416 202.3281 236.7744 202.2344 236.8525 c
198.1426 240.3076 192.4199 241.3936 186.9688 241.3936 C
191.666 235.8936 190.1055 224.8408 182.6152 224.8408 c
177.2656 224.8408 174.8379 233.1396 178.9668 237.6221 c
179.0449 237.708 179.0547 237.835 178.9922 237.9326 c
178.9277 238.0303 178.8066 238.0713 178.6953 238.0342 c
173.916 236.3779 168.75 232.2451 168.75 227.0166 c
168.75 221.9756 173.5625 217.6221 180.5527 217.9658 C
171.7324 215.4619 162.5 218.2334 157.6699 224.2197 c
157.5957 224.3115 157.4648 224.3408 157.3594 224.2861 c
157.252 224.2334 157.1973 224.1123 157.2266 223.9951 c
160.0176 213.2803 169.1934 208.7959 180.666 210.29 C
171.3848 206.5322 157.416 209.8076 151.2422 217.5986 c
151.1699 217.6904 151.043 217.7217 150.9355 217.6709 c
150.8301 217.6221 150.7715 217.5049 150.7949 217.3896 c
152.166 210.7744 155.6582 205.8291 161.418 203.874 C
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.990326 0.8663 0.278965 0 0 0.258824 0.494118 Xa
 0.990326 0.8663 0.278965 0 0 0.258824 0.494118 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
26.6963 184.5869 m
26.7178 184.7061 26.8213 184.792 26.9424 184.7939 c
39.8486 184.9287 51.6963 188.0615 60.9141 196.3086 C
52.8838 190.751 37.9717 188.7979 29.3867 192.6904 c
29.2764 192.7402 29.2178 192.8604 29.2451 192.9785 c
29.2715 193.0967 29.3779 193.1787 29.499 193.1748 c
40.1787 192.8857 48.7783 196.1816 55.4834 202.1396 C
48.6143 202.5615 42.9092 206.8799 42.9268 211.9844 c
42.9268 212.1035 43.0107 212.2061 43.1279 212.2314 c
43.2441 212.2568 43.3623 212.1963 43.4111 212.0879 c
44.5322 209.5986 48.1592 208.3076 51.9941 209.208 c
56.1738 210.1885 58.9941 213.3975 58.2949 216.373 c
57.8232 218.3877 55.8584 219.7764 53.3428 220.1602 c
53.2158 220.1787 53.123 220.29 53.126 220.418 c
53.1299 220.5459 53.2285 220.6514 53.3564 220.6631 c
54.4248 220.7656 55.5361 220.7695 56.6738 220.6611 c
63.1641 220.0439 68.1875 216.0654 68.623 211.4834 C
73.335 212.0303 77.5068 214.6396 79.001 218.2568 c
79.0459 218.3652 79.1611 218.4287 79.2764 218.4111 c
79.3916 218.3916 79.4795 218.2969 79.4893 218.1807 c
79.8662 213.4287 78.2314 210.3418 74.5195 207.3262 C
79.9033 209.3857 85.9639 209.4912 91.7744 206.7881 c
91.8799 206.7393 91.9385 206.624 91.917 206.5088 c
91.8936 206.3936 91.7939 206.3096 91.6768 206.3057 c
86.7979 206.1152 83.2607 204.5498 79.9463 201.2334 C
98.2002 206.3672 113.0322 195.0322 107.8994 178.1807 c
107.8643 178.0654 107.7529 177.9902 107.6318 178.0029 c
107.5107 178.0146 107.415 178.1104 107.4053 178.2314 c
106.4873 187.9453 99.7021 194.3467 89.5439 195.3076 C
94.9307 193.2471 100.5439 188.3311 101.1006 179.7734 c
101.1084 179.6514 101.0283 179.54 100.9092 179.5107 c
100.79 179.4814 100.667 179.54 100.6162 179.6514 c
97.8174 185.8057 92.3193 188.917 86.4561 189.4639 C
92.79 186.8838 96.8525 180.8623 98.0264 173.0439 c
98.0459 172.9209 97.9717 172.8018 97.8525 172.7646 c
97.7354 172.7256 97.6064 172.7803 97.5498 172.8896 c
93.6846 180.4727 85.3936 185.6836 75.1035 181.7021 c
64.4863 177.5928 59.8291 165.3154 58.7998 156.6611 c
58.7852 156.54 58.6846 156.4463 58.5615 156.4385 c
58.4395 156.4307 58.3291 156.5127 58.3008 156.6338 c
54.5811 172.3213 61.8838 188.583 74.9375 195.4736 C
67.8418 193.4707 61.498 189.2139 57.9102 182.1191 C
49.6162 181.1006 43.9063 178.2568 41.0527 172.8799 c
40.9961 172.7725 40.8721 172.7197 40.7568 172.7549 c
40.6416 172.7881 40.5654 172.8994 40.5752 173.0205 c
40.7578 175.1299 41.5166 179.3506 44.6494 181.291 C
37.6846 181.2803 32.1436 182.1846 26.8506 184.3037 c
26.7393 184.3496 26.6738 184.4678 26.6963 184.5869 c
f
56.1826 131.1162 m
56.084 131.1826 55.9541 131.1709 55.8672 131.0908 c
55.7813 131.0088 55.7627 130.8799 55.8213 130.7783 c
57.4414 127.9814 55.9619 123.9639 52.7705 123.9639 c
47.0498 123.9639 44.2998 134.7334 45.1748 144.5576 C
47.3379 138.8018 49.208 136.5029 52.5225 133.7627 c
52.6162 133.6846 52.751 133.6846 52.8447 133.7607 c
52.9385 133.8389 52.9658 133.9697 52.9082 134.0771 c
48.0518 143.1572 47.0107 150.1436 47.0107 158.1631 C
48.4736 152.2041 50.2061 148.8408 55.1377 143.7822 c
55.2236 143.6943 55.3604 143.6807 55.4629 143.749 c
55.5645 143.8193 55.6016 143.9521 55.5498 144.0654 c
50.252 155.6553 50.6563 168.5127 54.6025 178.3291 c
54.6416 178.4268 54.6172 178.5381 54.54 178.6104 c
54.4629 178.6807 54.3506 178.6982 54.2549 178.6514 c
49.0498 176.1006 45.9912 174.4248 41.5029 168.2627 C
42.8604 160.8643 41.7314 157.2139 38.3311 151.0674 C
42.2686 160.9854 40.1729 174.9619 30.1436 180.6592 c
30.0342 180.7207 29.8955 180.6934 29.8193 180.5947 c
29.7412 180.4951 29.748 180.3535 29.835 180.2627 c
33.6162 176.3076 36.3662 169.6279 33.9912 162.335 C
35.5205 172.7236 26.3955 181.4502 16.2119 181.4502 c
6.6123 181.4502 0.061523 173.9404 0.602539 166.5088 c
1.13965 159.1436 6.0459 155.54 10.2744 154.0107 c
10.3857 153.9717 10.5107 154.0127 10.5742 154.1123 c
10.6377 154.2139 10.624 154.3428 10.541 154.4287 c
4.93066 160.1201 4.16309 170.9209 14.124 174.1885 C
8.26465 169.1318 10.4346 157.3584 19.8135 156.4639 c
19.9307 156.4521 20.04 156.5225 20.0781 156.6338 c
20.1162 156.7451 20.0732 156.8682 19.9746 156.9307 c
17.9658 158.208 16.2959 160.7021 16.2959 163.5049 c
16.2959 168.1787 19.7178 170.0146 21.9717 170.0146 c
25.3936 170.0146 28.2314 166.7588 28.2314 161.835 c
28.2314 155.9912 22.9717 151.1514 16.2119 150.3994 c
9.58594 149.665 3.42969 152.5537 0.461914 156.8584 c
0.392578 156.96 0.260742 156.9971 0.148438 156.9463 c
0.036133 156.8955 -0.022461 156.7705 0.007813 156.6514 c
3.02637 144.9482 16.8037 139.7744 26.8955 147.1455 C
20.2822 139.6436 9.88965 139.54 1.17383 147.2314 c
1.08301 147.3115 0.948242 147.3154 0.851563 147.2412 c
0.754883 147.1689 0.724609 147.0361 0.77832 146.9287 c
3.44531 141.5205 10.0313 135.1084 19.3838 136.0439 c
27.9404 136.8994 32.9053 145.0576 33.9072 151.7354 C
34.4639 143.2139 32.5137 137.1982 25.1533 131.5889 c
25.0566 131.5146 25.0264 131.3818 25.0811 131.2725 c
25.1357 131.165 25.2607 131.1104 25.3779 131.1436 c
32.1631 133.1045 37.6084 136.5693 40.4268 143.6885 C
40.4268 137.5264 38.2881 131.3154 32.9014 127.1768 c
32.8037 127.1025 32.7744 126.9717 32.8291 126.8623 c
32.8838 126.7529 33.0078 126.6982 33.125 126.7314 c
36.5781 127.7158 39.2959 129.2197 41.2627 131.917 C
42.5732 120.8174 47.7842 114.2256 53.7881 114.2256 c
57.9131 114.2256 60.9932 117.2588 60.9932 122.0967 c
60.9932 124.9268 59.5049 128.8994 56.1826 131.1162 c
f
155.4092 222.7354 m
152.2471 226.6396 145.8701 228.1279 138.9775 226.7236 C
139.4873 231.0244 138.6436 235.5146 137.3662 238.208 c
137.3135 238.3174 137.1924 238.375 137.0752 238.3467 c
136.958 238.3174 136.8779 238.21 136.8818 238.0889 c
137.2568 229.3223 132.2588 222.2451 123.4326 219.1787 C
130.3389 223.9346 132.3584 233.3721 129.0713 238.2451 c
129.0029 238.3438 128.876 238.3828 128.7646 238.3369 c
128.6533 238.292 128.5889 238.1748 128.6104 238.0576 c
128.9834 235.9971 128.0049 233.373 125.8975 231.3311 c
122.9912 228.5166 119.0479 227.8779 117.0869 229.9014 c
115.126 231.9268 115.8896 235.8486 118.7939 238.6631 c
119.8545 239.6904 121.0537 240.4248 122.2432 240.8477 c
122.3564 240.8877 122.4248 241.001 122.4092 241.1191 c
122.3955 241.2383 122.2998 241.3301 122.1807 241.3398 c
115.792 241.8945 111.4111 238.0879 108.665 233.4619 c
105.8701 228.7568 101.0947 225.0518 95.4541 225.792 c
95.335 225.8076 95.2217 225.7373 95.1807 225.624 c
95.1416 225.5107 95.1865 225.3838 95.29 225.3223 c
98.0869 223.6377 101.1611 222.9385 105.1533 224.2705 C
99.3584 219.3613 91.1064 216.5283 83.3135 219.043 c
83.2041 219.0791 83.085 219.0361 83.0225 218.9395 c
82.96 218.8428 82.9717 218.7168 83.0479 218.6318 c
88.9561 212.0674 100.7373 211.9365 108.1572 217.2588 C
105.1201 212.9424 101.0889 209.7744 93.8643 208.7803 c
93.749 208.7646 93.6592 208.6729 93.6455 208.5576 c
93.6338 208.4414 93.7002 208.332 93.8096 208.292 c
102.1006 205.2139 110.4092 208.3369 117.2549 216.5068 C
114.2627 210.1299 109.3486 205.0225 102.4873 202.4951 c
102.3721 202.4531 102.3037 202.335 102.3252 202.2158 c
102.3447 202.0947 102.4482 202.0059 102.5693 202.0029 c
106.5127 201.9219 110.0557 202.8604 114.835 205.5732 C
111.3271 199.8838 112.0947 189.9346 117.2041 183.3154 c
117.2744 183.2236 117.3994 183.1914 117.5068 183.2373 c
117.6123 183.2842 117.6748 183.3965 117.6553 183.5107 c
116.4756 190.7119 118.9541 198.8408 123.2646 203.1533 C
121.1123 195.5215 123.2588 188.5771 129.1611 183.5088 c
129.2314 183.4482 129.3311 183.4316 129.417 183.4648 c
129.5049 183.498 129.5654 183.5771 129.5791 183.6689 c
130.8135 193.0869 141.3486 202.6436 150.1807 203.4443 c
150.3057 203.4551 150.4033 203.5557 150.4111 203.6797 c
150.4189 203.8037 150.3369 203.917 150.2139 203.9443 c
145.9346 204.9131 141.5225 204.4346 137.8252 202.9131 C
140.4854 205.8467 143.7646 208.0244 147.3799 209.1592 c
147.4971 209.1953 147.5693 209.3096 147.5557 209.4307 c
147.542 209.5518 147.4424 209.6455 147.3213 209.6543 c
142.8115 209.9658 138.3975 208.6484 134.5908 206.1162 C
138.9521 212.7373 145.5713 217.6611 154.0186 219.6221 c
154.1396 219.6504 154.2217 219.7607 154.2158 219.8848 c
154.208 220.0088 154.1123 220.1084 153.9893 220.1221 c
142.0713 221.4238 132.2432 216.8037 125.7686 208.2041 C
127.417 213.1045 132.1338 217.96 138.7139 220.8232 c
144.5596 223.3682 150.5635 223.7695 155.1357 222.333 c
155.2412 222.2998 155.3584 222.3398 155.4209 222.4326 c
155.4834 222.5244 155.4795 222.6475 155.4092 222.7354 c
f
102.5049 147.1631 m
107.3115 157.6494 106.9697 165.8486 103.0986 176.2178 c
103.0537 176.335 102.9326 176.4023 102.8096 176.3779 c
102.6865 176.3525 102.6006 176.2412 102.6064 176.1162 c
103.2275 163.4951 99.7803 154.4619 92.3076 148.3096 C
100.5576 158.1611 96.6611 177.8691 83.4854 177.8691 c
73.8994 177.8691 65.9697 169.8936 64.0303 160.3447 c
64.0059 160.2236 64.0723 160.1006 64.1885 160.0576 c
64.3037 160.0127 64.4346 160.0576 64.4971 160.1631 c
67.3398 164.9248 71.9063 168.0146 76.9541 168.0146 c
85.0889 168.0146 87.4951 161.5479 87.4951 157.0166 c
87.4951 150.8291 82.5693 145.6729 78.7881 145.6729 c
75.3506 145.6729 73.7471 148.4971 73.7471 150.6006 c
73.7471 154.499 76.7451 157.7666 80.124 158.7646 c
80.2432 158.7998 80.3213 158.9189 80.3037 159.0439 c
80.2842 159.1689 80.1787 159.2607 80.0537 159.2627 c
75.9473 159.2881 72.4766 157.4072 70.4238 153.6943 C
70.1543 156.5693 70.1514 158.3799 71.0645 161.417 c
71.0996 161.5342 71.0459 161.6592 70.9385 161.7158 c
70.8291 161.7725 70.6963 161.7432 70.6221 161.6475 c
63.2656 152.2549 66.7861 136.0225 72.6006 129.29 C
67.0693 133.2725 62.1846 141.9229 62.2617 153.6826 c
62.2627 153.8057 62.1768 153.9092 62.0566 153.9326 c
61.9365 153.958 61.8174 153.8916 61.7725 153.7783 c
57.6641 143.5264 59.8438 124.5303 71.0537 113.9268 C
68.1699 113.5303 65.1865 113.5811 61.9287 114.6201 c
61.8135 114.6553 61.6885 114.6064 61.6299 114.501 c
61.5713 114.3936 61.5947 114.2607 61.6885 114.1826 c
65.7803 110.7275 71.5029 109.6416 76.9541 109.6416 C
72.2568 115.1416 73.8174 126.1963 81.3096 126.1963 c
86.6572 126.1963 89.085 117.8975 84.9561 113.415 c
84.8779 113.3291 84.8682 113.2002 84.9307 113.1045 c
84.9951 113.0068 85.1162 112.9639 85.2275 113.0029 c
90.0068 114.6572 95.1729 118.792 95.1729 124.0186 c
95.1729 129.0615 90.3604 133.4131 83.3721 133.0693 C
92.1904 135.5752 101.4229 132.8018 106.2529 126.8174 c
106.3271 126.7236 106.458 126.6963 106.5635 126.749 c
106.6709 126.8037 106.7256 126.9248 106.6963 127.04 c
103.9053 137.7568 94.7295 142.2393 83.2568 140.7471 C
92.5381 144.5029 106.5068 141.2275 112.6807 133.4365 c
112.7529 133.3447 112.8799 133.3154 112.9873 133.3643 c
113.0928 133.415 113.1514 133.5322 113.1279 133.6455 c
111.7568 140.2607 108.2646 145.208 102.5049 147.1631 C
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.545922 0 0.085573 0 0.615686 0.862745 0.976471 Xa
 0.545922 0 0.085573 0 0.615686 0.862745 0.976471 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
128.8877 166.4502 m
128.8662 166.3311 128.7627 166.2432 128.6416 166.2432 c
115.7354 166.1064 103.8877 162.9756 94.6709 154.7275 C
102.7002 160.2861 117.6123 162.2373 126.1982 158.3467 c
126.3076 158.2959 126.3662 158.1748 126.3389 158.0576 c
126.3135 157.9404 126.2061 157.8584 126.085 157.8604 c
115.4053 158.1514 106.8057 154.8545 100.1006 148.8975 C
106.9697 148.4736 112.6748 144.1572 112.6572 139.0518 c
112.6572 138.9326 112.5732 138.8291 112.4561 138.8037 c
112.3408 138.7803 112.2217 138.8389 112.1729 138.9482 c
111.0518 141.4365 107.4248 142.7295 103.5908 141.8291 c
99.4111 140.8467 96.5908 137.6396 97.29 134.6631 c
97.7607 132.6494 99.7256 131.2607 102.2412 130.876 c
102.3682 130.8564 102.4619 130.7471 102.458 130.6182 c
102.4541 130.4912 102.3564 130.3857 102.2275 130.3721 c
101.1592 130.2705 100.0479 130.2666 98.9111 130.376 c
92.4209 130.9932 87.3975 134.9697 86.9619 139.5537 C
82.249 139.0068 78.0771 136.3955 76.583 132.7803 c
76.5381 132.6709 76.4248 132.6084 76.3076 132.626 c
76.1924 132.6436 76.1045 132.7393 76.0947 132.8564 c
75.7178 137.6064 77.3525 140.6943 81.0654 143.71 C
75.6807 141.6514 69.6201 141.5459 63.8096 144.2471 c
63.7041 144.2979 63.6455 144.4131 63.667 144.5283 c
63.6904 144.6436 63.79 144.7275 63.9072 144.7314 c
68.7861 144.9209 72.3232 146.4873 75.6396 149.8037 C
57.3838 144.6689 42.5518 156.0049 47.6846 172.8545 c
47.7197 172.9717 47.8311 173.0459 47.9521 173.0342 c
48.0732 173.0225 48.1689 172.9268 48.1787 172.8057 c
49.0967 163.0908 55.8818 156.6885 66.04 155.7295 C
60.6533 157.7881 55.04 162.7041 54.4834 171.2627 c
54.4756 171.3857 54.5557 171.4951 54.6748 171.5264 c
54.7939 171.5557 54.917 171.4951 54.9678 171.3838 c
57.7666 165.2295 63.2646 162.1201 69.1279 161.5713 C
62.7939 164.1533 58.7314 170.1748 57.5576 177.9932 c
57.5381 178.1162 57.6123 178.2334 57.7314 178.2725 c
57.8486 178.3096 57.9775 178.2568 58.0342 178.1455 c
61.8994 170.5635 70.1904 165.3525 80.4814 169.335 c
91.0986 173.4443 95.7549 185.7197 96.7842 194.374 c
96.7998 194.4971 96.8994 194.5908 97.0225 194.5986 c
97.1455 194.6045 97.2549 194.5225 97.2842 194.4033 c
101.0029 178.7139 93.7002 162.4541 80.6475 155.5635 C
87.7432 157.5654 94.0869 161.8232 97.6748 168.917 C
105.9678 169.9346 111.6787 172.7803 114.5322 178.1572 c
114.5889 178.2627 114.7119 178.3154 114.8271 178.2822 c
114.9424 178.2471 115.0186 178.1357 115.0088 178.0166 c
114.8271 175.9072 114.0674 171.6865 110.9346 169.7451 C
117.8994 169.7568 123.4404 168.8525 128.7334 166.7314 c
128.8447 166.6865 128.9111 166.5693 128.8877 166.4502 c
f
99.4014 219.9189 m
99.501 219.8545 99.6299 219.8643 99.7178 219.9463 c
99.8037 220.0264 99.8213 220.1553 99.7627 220.2588 c
98.1436 223.0557 99.6221 227.0713 102.8135 227.0713 c
108.5342 227.0713 111.2842 216.3018 110.4092 206.4795 C
108.2471 212.2334 106.376 214.5342 103.0615 217.2744 c
102.9678 217.3506 102.833 217.3525 102.7393 217.2744 c
102.6455 217.1982 102.6182 217.0654 102.6768 216.958 c
107.5322 207.8799 108.5732 200.8936 108.5732 192.874 C
107.1104 198.8311 105.3779 202.1943 100.4463 207.2549 c
100.3604 207.3428 100.2236 207.3564 100.1221 207.2861 c
100.0205 207.2158 99.9834 207.083 100.0342 206.9717 c
105.333 195.3799 104.9287 182.5244 100.9814 172.708 c
100.9424 172.6104 100.9678 172.499 101.0439 172.4268 c
101.1221 172.3545 101.2334 172.3389 101.3291 172.3838 c
106.5342 174.9346 109.5928 176.6104 114.0811 182.7744 C
112.7236 190.1729 113.8525 193.8213 117.2529 199.9678 C
113.3154 190.0518 115.4111 176.0752 125.4404 170.3779 c
125.5498 170.3154 125.6885 170.3428 125.7646 170.4424 c
125.8428 170.542 125.8369 170.6826 125.749 170.7744 c
121.9678 174.7295 119.2178 181.4092 121.5928 188.7002 C
120.0635 178.3115 129.1885 169.5869 139.3721 169.5869 c
148.9717 169.5869 155.5225 177.0947 154.9814 184.5264 c
154.4443 191.8916 149.5381 195.4971 145.3096 197.0244 c
145.1982 197.0654 145.0732 197.0225 145.0107 196.9229 c
144.9463 196.8232 144.96 196.6924 145.0439 196.6084 c
150.6533 190.915 151.4209 180.1162 141.46 176.8486 C
147.3193 181.9053 145.1494 193.6768 135.7705 194.5732 c
135.6533 194.583 135.5439 194.5127 135.5068 194.4014 c
135.4678 194.292 135.5107 194.1689 135.6104 194.1064 c
137.6182 192.8271 139.2881 190.335 139.2881 187.5322 c
139.2881 182.8584 135.8662 181.0205 133.6123 181.0205 c
130.1904 181.0205 127.3525 184.2764 127.3525 189.2021 c
127.3525 195.0439 132.6123 199.8857 139.3721 200.6357 c
145.999 201.3721 152.1553 198.4814 155.1221 194.1768 c
155.1924 194.0752 155.3232 194.04 155.4365 194.0908 c
155.5479 194.1416 155.6064 194.2646 155.5771 194.3838 c
152.5576 206.0869 138.7803 211.2607 128.6885 203.8916 C
135.3018 211.3916 145.6943 211.4971 154.4111 203.8057 c
154.501 203.7256 154.6357 203.7197 154.7334 203.7939 c
154.8291 203.8682 154.8604 203.999 154.8057 204.1084 c
152.1396 209.5146 145.5537 215.9268 136.2002 214.9932 c
127.6436 214.1377 122.6787 205.9775 121.6768 199.3018 C
121.1201 207.8232 123.0713 213.8369 130.4307 219.4463 c
130.5283 219.5205 130.5576 219.6533 130.5029 219.7627 c
130.4482 219.8721 130.3232 219.9268 130.2061 219.8916 c
123.4209 217.9326 117.9756 214.4678 115.1572 207.3486 C
115.1572 213.5088 117.2959 219.7197 122.6826 223.8584 c
122.7803 223.9326 122.8096 224.0654 122.7549 224.1748 c
122.7002 224.2822 122.5771 224.3369 122.46 224.3037 c
119.0068 223.3213 116.2881 221.8154 114.3213 219.1201 C
113.0107 230.2197 107.7998 236.8096 101.7959 236.8096 c
97.6709 236.8096 94.5908 233.7764 94.5908 228.9404 c
94.5908 226.1104 96.0791 222.1377 99.4014 219.9189 c
f
0.174805 128.3018 m
3.33691 124.3975 9.71387 122.9092 16.6064 124.3135 C
16.0967 120.0107 16.9404 115.5225 18.2178 112.8271 c
18.2705 112.7197 18.3916 112.6611 18.5088 112.6904 c
18.626 112.7197 18.7061 112.8271 18.7021 112.9482 c
18.3271 121.7139 23.3252 128.79 32.1514 131.8564 C
25.2451 127.1006 23.2256 117.6631 26.5127 112.792 c
26.5811 112.6924 26.708 112.6533 26.8193 112.6982 c
26.9307 112.7432 26.9951 112.8604 26.9736 112.9795 c
26.6006 115.04 27.5791 117.6631 29.6865 119.7041 c
32.5928 122.5186 36.5361 123.1572 38.4971 121.1338 c
40.458 119.1084 39.6943 115.1865 36.79 112.374 c
35.7295 111.3467 34.5303 110.6104 33.3408 110.1885 c
33.2275 110.1475 33.1592 110.0342 33.1748 109.917 c
33.1885 109.7979 33.2842 109.7061 33.4033 109.6963 c
39.792 109.1416 44.1729 112.9482 46.9189 117.5732 c
49.7139 122.2783 54.4893 125.9854 60.1299 125.2451 c
60.249 125.2295 60.3623 125.2998 60.4033 125.4131 c
60.4424 125.5264 60.3975 125.6514 60.2939 125.7139 c
57.4971 127.3975 54.4229 128.0967 50.4307 126.7666 C
56.2256 131.6748 64.4775 134.5068 72.2705 131.9932 c
72.3799 131.958 72.499 132.001 72.5615 132.0967 c
72.624 132.1924 72.6143 132.3193 72.5361 132.4053 c
66.6279 138.9697 54.8467 139.1006 47.4268 133.7764 C
50.4639 138.0928 54.4951 141.2627 61.7197 142.2549 c
61.835 142.2705 61.9248 142.3643 61.9385 142.4795 c
61.9502 142.5947 61.8838 142.7041 61.7744 142.7451 c
53.4834 145.8213 45.1748 142.7002 38.3291 134.5283 C
41.3213 140.9072 46.2354 146.0146 53.0967 148.542 c
53.2119 148.583 53.2803 148.7002 53.2588 148.8213 c
53.2393 148.9424 53.1357 149.0303 53.0146 149.0322 c
49.0713 149.1143 45.5283 148.1748 40.749 145.4619 C
44.2568 151.1533 43.4893 161.1006 38.3799 167.7217 c
38.3096 167.8135 38.1846 167.8447 38.0771 167.7998 c
37.9717 167.7529 37.9092 167.6396 37.9287 167.5244 c
39.1084 160.3252 36.6299 152.1963 32.3193 147.8838 C
34.4717 155.5146 32.3252 162.46 26.4229 167.5264 c
26.3525 167.5869 26.2529 167.6045 26.167 167.5713 c
26.0791 167.5381 26.0186 167.46 26.0049 167.3682 c
24.7705 157.9502 14.2354 148.3936 5.40332 147.5928 c
5.27832 147.5811 5.18066 147.4814 5.17285 147.3564 c
5.16504 147.2314 5.24707 147.1201 5.37012 147.0928 c
9.64941 146.124 14.0615 146.6025 17.7588 148.1221 C
15.0986 145.1904 11.8193 143.0127 8.2041 141.8779 c
8.08691 141.8408 8.01465 141.7275 8.02832 141.6064 c
8.04199 141.4854 8.1416 141.3896 8.2627 141.3818 c
12.7725 141.0713 17.1865 142.3877 20.9932 144.9209 C
16.6318 138.2998 10.0127 133.376 1.56543 131.4131 c
1.44434 131.3857 1.3623 131.2744 1.36816 131.1514 c
1.37598 131.0283 1.47168 130.9287 1.59473 130.915 c
13.5127 129.6123 23.3408 134.2334 29.8154 142.833 C
28.167 137.9307 23.4502 133.0771 16.8701 130.2139 c
11.0244 127.6689 5.02051 127.2666 0.448242 128.7041 c
0.342773 128.7373 0.225586 128.6963 0.163086 128.6045 c
0.100586 128.5107 0.104492 128.3877 0.174805 128.3018 c
f
53.0791 203.874 m
48.2725 193.3877 48.6143 185.1885 52.4854 174.8193 c
52.5303 174.7021 52.6514 174.6338 52.7744 174.6592 c
52.8975 174.6846 52.9834 174.7959 52.9775 174.9189 c
52.3564 187.542 55.8037 196.5732 63.2764 202.7275 C
55.0264 192.874 58.9229 173.167 72.0986 173.167 c
81.6846 173.167 89.6143 181.1436 91.5537 190.6924 c
91.5791 190.8135 91.5127 190.9346 91.3955 190.9795 c
91.2803 191.0244 91.1494 190.9795 91.0869 190.8721 c
88.2451 186.1104 83.6787 183.0205 78.6299 183.0205 c
70.4951 183.0205 68.0889 189.4873 68.0889 194.0205 c
68.0889 200.2061 73.0146 205.3623 76.7959 205.3623 c
80.2334 205.3623 81.8369 202.54 81.8369 200.4365 c
81.8369 196.5381 78.8389 193.2705 75.4619 192.2725 c
75.3408 192.2354 75.2646 192.1182 75.2822 191.9932 c
75.2998 191.8682 75.4053 191.7744 75.5322 191.7744 c
79.6377 191.749 83.1084 193.6279 85.1611 197.3428 C
85.4307 194.4678 85.4326 192.6572 84.5205 189.6182 c
84.4854 189.501 84.5381 189.376 84.6455 189.3193 c
84.7549 189.2646 84.8877 189.292 84.9619 189.3896 c
92.3193 198.7822 88.7979 215.0127 82.9834 221.7471 C
88.5146 217.7646 93.3994 209.1123 93.3232 197.3525 c
93.3213 197.2314 93.4072 197.126 93.5283 197.1025 c
93.6475 197.0791 93.7666 197.1436 93.8115 197.2568 c
97.9209 207.5107 95.7412 226.5049 84.5303 237.1084 C
87.415 237.5068 90.3975 237.4561 93.6553 236.417 c
93.7705 236.3799 93.8955 236.4307 93.9541 236.5361 c
94.0127 236.6416 93.9893 236.7744 93.8955 236.8525 c
89.8037 240.3076 84.0811 241.3936 78.6299 241.3936 C
83.3271 235.8936 81.7666 224.8408 74.2764 224.8408 c
68.9268 224.8408 66.499 233.1396 70.6279 237.6221 c
70.7061 237.708 70.7158 237.835 70.6533 237.9326 c
70.5889 238.0303 70.4678 238.0713 70.3564 238.0342 c
65.5771 236.3779 60.4111 232.2451 60.4111 227.0166 c
60.4111 221.9756 65.2236 217.6221 72.2139 217.9658 C
63.3936 215.4619 54.1611 218.2334 49.3311 224.2197 c
49.2568 224.3115 49.126 224.3408 49.0205 224.2861 c
48.9131 224.2334 48.8584 224.1123 48.8877 223.9951 c
51.6787 213.2803 60.8545 208.7959 72.3271 210.29 C
63.0459 206.5322 49.0771 209.8076 42.9033 217.5986 c
42.8311 217.6904 42.7041 217.7217 42.5967 217.6709 c
42.4912 217.6221 42.4326 217.5049 42.4561 217.3896 c
43.8271 210.7744 47.3193 205.8291 53.0791 203.874 C
f
*U
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Alyssa)
(Alyssa) 99.9629 78.4663 244.0928 216.8286 [
%AI3_Tile
(0 O 0 R 0.361517 0 0.667689 0 0.776471 0.866667 0.498039 Xa
 0.361517 0 0.667689 0 0.776471 0.866667 0.498039 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
311.0361 58.3071 m
299.2764 59.6909 291.667 57.9614 288.3818 55.1938 c
285.3623 52.6509 283.4268 49.7886 286.1338 43.2622 c
289.0732 36.1714 287.667 28.5298 280.5986 27.3521 c
274.374 26.3149 269.7041 32.1938 269.3584 39.6304 c
269.1182 44.813 267.4561 47.9312 263.8252 47.2388 c
260.1924 46.5474 259.1963 41.3384 260.1924 35.48 c
261.5771 27.3521 265.7275 23.7202 266.4189 15.2466 c
266.9131 9.19189 263.4795 1.58447 253.9678 0.20166 c
244.667 -1.15186 238.0576 4.52393 237.3662 10.7505 c
236.6338 17.3384 240.9971 21.645 240.4775 28.3892 c
239.96 35.1343 236.4658 38.561 234.5986 45.6831 c
231.8311 56.2319 235.8096 64.7056 242.3799 68.3374 c
257.126 76.4858 265.2119 64.6958 278.3506 66.7817 c
289.2471 68.5103 301.6982 84.939 311.3818 86.3228 c
319.6084 87.4976 325.2158 81.6538 326.4268 72.3149 c
327.6377 62.9761 321.6865 57.0532 311.0361 58.3071 c
f
268.8408 57.7886 m
268.8408 60.0806 266.9814 61.939 264.6904 61.939 c
262.3975 61.939 260.54 60.0806 260.54 57.7886 c
260.54 55.4966 262.3975 53.6382 264.6904 53.6382 c
266.9814 53.6382 268.8408 55.4966 268.8408 57.7886 c
f
318.2998 73.1792 m
318.2998 74.1343 317.5244 74.9087 316.5693 74.9087 c
315.6143 74.9087 314.8408 74.1343 314.8408 73.1792 c
314.8408 72.2241 315.6143 71.4497 316.5693 71.4497 c
317.5244 71.4497 318.2998 72.2241 318.2998 73.1792 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.102907 0.152071 0.33991 0 0.913725 0.866667 0.717647 Xa
 0.102907 0.152071 0.33991 0 0.913725 0.866667 0.717647 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
148.7954 77.4946 m
148.7954 70.3286 153.3833 63.6812 147.7954 61.1616 c
139.2954 57.3286 119.7954 75.4946 119.7954 97.3286 c
119.7954 109.3286 128.4634 116.3286 137.6294 116.3286 c
149.9634 116.3286 155.6294 108.1616 155.6294 98.8286 c
155.6294 89.4966 148.7954 85.689 148.7954 77.4946 c
f
143.3872 82.8638 m
143.3872 84.0103 142.4575 84.939 141.313 84.939 c
140.1665 84.939 139.2368 84.0103 139.2368 82.8638 c
139.2368 81.7183 140.1665 80.7886 141.313 80.7886 c
142.4575 80.7886 143.3872 81.7183 143.3872 82.8638 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.490517 0.05005 0.133791 0 0.65098 0.815686 0.894118 Xa
 0.490517 0.05005 0.133791 0 0.65098 0.815686 0.894118 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
223.4941 54.0005 m
215.623 51.2632 204.0547 69.2974 205.8242 81.019 c
207.0645 89.2466 212.9473 94.2085 218.9121 95.2358 c
226.4375 96.5327 231.8105 92.6353 232.2109 87.9927 c
232.7578 81.6841 228.5781 80.4751 227.9883 73.0347 c
227.4258 65.8999 231.6797 56.8491 223.4941 54.0005 c
f
219.7051 81.5083 m
219.7051 82.9419 218.543 84.103 217.1113 84.103 c
215.6777 84.103 214.5176 82.9419 214.5176 81.5083 c
214.5176 80.0757 215.6777 78.9146 217.1113 78.9146 c
218.543 78.9146 219.7051 80.0757 219.7051 81.5083 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.102907 0.152071 0.33991 0 0.913725 0.866667 0.717647 Xa
 0.102907 0.152071 0.33991 0 0.913725 0.866667 0.717647 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
119.3501 76.4653 m
119.3501 75.0327 118.188 73.8716 116.7563 73.8716 c
115.3228 73.8716 114.1626 75.0327 114.1626 76.4653 c
114.1626 77.8979 115.3228 79.0591 116.7563 79.0591 c
118.188 79.0591 119.3501 77.8979 119.3501 76.4653 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.490517 0.05005 0.133791 0 0.65098 0.815686 0.894118 Xa
 0.490517 0.05005 0.133791 0 0.65098 0.815686 0.894118 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
184.5728 84.189 m
185.313 76.0884 197.2441 77.1724 202.4766 69.9751 c
212.9961 55.5005 201.2578 23.6099 180.8462 23.6099 c
169.106 23.6099 156.6294 33.3286 156.6294 52.8286 c
156.6294 68.6626 166.7954 74.3286 164.8794 94.9946 c
163.8735 105.8286 152.3794 115.3374 152.3794 129.7446 c
152.3794 135.6665 155.9653 143.1919 163.9321 143.1919 c
170.9868 143.1919 174.7544 137.2388 174.7544 130.2915 c
174.7544 123.4937 169.3735 114.5513 176.1294 111.2446 c
181.3716 108.6792 189.3403 116.0142 195.6289 117.9946 c
200.8203 119.6304 208.0176 117.77 210.3789 109.4946 c
212.9102 100.6187 207.127 94.7495 198.7871 92.8013 c
192.4692 91.3247 183.9849 90.6304 184.5728 84.189 c
f
168.5884 114.7476 m
168.5884 116.563 167.1177 118.0347 165.3032 118.0347 c
163.4888 118.0347 162.0161 116.563 162.0161 114.7476 c
162.0161 112.9331 163.4888 111.4624 165.3032 111.4624 c
167.1177 111.4624 168.5884 112.9331 168.5884 114.7476 c
f
194.5723 105.0522 m
195.8574 105.0522 196.9004 106.0952 196.9004 107.3823 c
196.9004 108.6685 195.8574 109.7104 194.5723 109.7104 c
193.2856 109.7104 192.2427 108.6685 192.2427 107.3823 c
192.2427 106.0952 193.2856 105.0522 194.5723 105.0522 c
f
174.5884 45.3804 m
174.5884 47.1958 173.1177 48.6675 171.3013 48.6675 c
169.4868 48.6675 168.0161 47.1958 168.0161 45.3804 c
168.0161 43.5659 169.4868 42.0952 171.3013 42.0952 c
173.1177 42.0952 174.5884 43.5659 174.5884 45.3804 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.361517 0 0.667689 0 0.776471 0.866667 0.498039 Xa
 0.361517 0 0.667689 0 0.776471 0.866667 0.498039 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
166.9067 58.3071 m
155.147 59.6909 147.5376 57.9614 144.2524 55.1938 c
141.2329 52.6509 139.2974 49.7886 142.0044 43.2622 c
144.9438 36.1714 143.5376 28.5298 136.4692 27.3521 c
130.2446 26.3149 125.5747 32.1938 125.229 39.6304 c
124.9888 44.813 123.3267 47.9312 119.6958 47.2388 c
116.063 46.5474 115.0669 41.3384 116.063 35.48 c
117.4478 27.3521 121.5981 23.7202 122.2896 15.2466 c
122.7837 9.19189 119.3501 1.58447 109.8384 0.20166 c
100.5376 -1.15186 93.9282 4.52393 93.2368 10.7505 c
92.5044 17.3384 96.8677 21.645 96.3481 28.3892 c
95.8306 35.1343 92.3364 38.561 90.4692 45.6831 c
87.7017 56.2319 91.6802 64.7056 98.2505 68.3374 c
112.9966 76.4858 121.0825 64.6958 134.2212 66.7817 c
145.1177 68.5103 157.5688 84.939 167.2524 86.3228 c
175.479 87.4976 181.0864 81.6538 182.2974 72.3149 c
183.5083 62.9761 177.5571 57.0532 166.9067 58.3071 c
f
124.7114 57.7886 m
124.7114 60.0806 122.8521 61.939 120.561 61.939 c
118.2681 61.939 116.4106 60.0806 116.4106 57.7886 c
116.4106 55.4966 118.2681 53.6382 120.561 53.6382 c
122.8521 53.6382 124.7114 55.4966 124.7114 57.7886 c
f
174.1704 73.1792 m
174.1704 74.1343 173.395 74.9087 172.4399 74.9087 c
171.4849 74.9087 170.7114 74.1343 170.7114 73.1792 c
170.7114 72.2241 171.4849 71.4497 172.4399 71.4497 c
173.395 71.4497 174.1704 72.2241 174.1704 73.1792 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.490517 0.05005 0.133791 0 0.65098 0.815686 0.894118 Xa
 0.490517 0.05005 0.133791 0 0.65098 0.815686 0.894118 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
290.2842 104.8413 m
290.2842 98.6147 286.1338 94.1206 281.6377 93.2554 c
277.1416 92.3901 273.3193 94.5366 268.667 92.0444 c
263.8252 89.4507 261.5771 80.9761 251.8916 80.9761 c
243.9365 80.9761 236.6748 88.9312 236.6748 99.8257 c
236.6748 120.0601 249.8174 129.0522 262.2686 129.0522 c
278.8701 129.0522 290.2842 116.4272 290.2842 104.8413 c
f
270.5693 119.1948 m
270.5693 121.2944 268.8662 122.9976 266.7646 122.9976 c
264.6631 122.9976 262.96 121.2944 262.96 119.1948 c
262.96 117.0933 264.6631 115.3901 266.7646 115.3901 c
268.8662 115.3901 270.5693 117.0933 270.5693 119.1948 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.361517 0 0.667689 0 0.776471 0.866667 0.498039 Xa
 0.361517 0 0.667689 0 0.776471 0.866667 0.498039 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
311.0361 196.6694 m
299.2764 198.0532 291.667 196.3237 288.3818 193.5562 c
285.3623 191.0132 283.4268 188.1509 286.1338 181.6245 c
289.0732 174.5337 287.667 166.8921 280.5986 165.7144 c
274.374 164.6772 269.7041 170.5562 269.3584 177.9927 c
269.1182 183.1753 267.4561 186.2935 263.8252 185.6011 c
260.1924 184.9097 259.1963 179.7007 260.1924 173.8423 c
261.5771 165.7144 265.7275 162.0825 266.4189 153.6089 c
266.9131 147.5542 263.4795 139.9468 253.9678 138.564 c
244.667 137.2104 238.0576 142.8862 237.3662 149.1128 c
236.6338 155.7007 240.9971 160.0073 240.4775 166.7515 c
239.96 173.4966 236.4658 176.9233 234.5986 184.0454 c
231.8311 194.5942 235.8096 203.0679 242.3799 206.6997 c
257.126 214.8481 265.2119 203.0581 278.3506 205.144 c
289.2471 206.8726 301.6982 223.3013 311.3818 224.6851 c
319.6084 225.8599 325.2158 220.0161 326.4268 210.6772 c
327.6377 201.3384 321.6865 195.4155 311.0361 196.6694 c
f
268.8408 196.1509 m
268.8408 198.4429 266.9814 200.3013 264.6904 200.3013 c
262.3975 200.3013 260.54 198.4429 260.54 196.1509 c
260.54 193.8589 262.3975 192.0005 264.6904 192.0005 c
266.9814 192.0005 268.8408 193.8589 268.8408 196.1509 c
f
318.2998 211.5415 m
318.2998 212.4966 317.5244 213.271 316.5693 213.271 c
315.6143 213.271 314.8408 212.4966 314.8408 211.5415 c
314.8408 210.5864 315.6143 209.812 316.5693 209.812 c
317.5244 209.812 318.2998 210.5864 318.2998 211.5415 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.490517 0.05005 0.133791 0 0.65098 0.815686 0.894118 Xa
 0.490517 0.05005 0.133791 0 0.65098 0.815686 0.894118 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
131.7954 133.1909 m
117.8384 131.2026 110.6294 146.5229 114.1294 153.5229 c
117.7954 160.8569 126.2485 157.6909 133.6294 157.6909 c
143.2954 157.6909 149.9966 165.2593 154.0454 159.9409 c
158.2954 154.3569 149.0356 135.646 131.7954 133.1909 c
f
132.3188 150.6694 m
132.3188 151.9097 131.313 152.9175 130.0708 152.9175 c
128.8306 152.9175 127.8228 151.9097 127.8228 150.6694 c
127.8228 149.4272 128.8306 148.4214 130.0708 148.4214 c
131.313 148.4214 132.3188 149.4272 132.3188 150.6694 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.102907 0.152071 0.33991 0 0.913725 0.866667 0.717647 Xa
 0.102907 0.152071 0.33991 0 0.913725 0.866667 0.717647 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
148.7954 215.8569 m
148.7954 208.6909 153.3833 202.0435 147.7954 199.5239 c
139.2954 195.6909 119.7954 213.8569 119.7954 235.6909 c
119.7954 247.6909 128.4634 254.6909 137.6294 254.6909 c
149.9634 254.6909 155.6294 246.5239 155.6294 237.1909 c
155.6294 227.8589 148.7954 224.0513 148.7954 215.8569 c
f
143.3872 221.2261 m
143.3872 222.3726 142.4575 223.3013 141.313 223.3013 c
140.1665 223.3013 139.2368 222.3726 139.2368 221.2261 c
139.2368 220.0806 140.1665 219.1509 141.313 219.1509 c
142.4575 219.1509 143.3872 220.0806 143.3872 221.2261 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.490517 0.05005 0.133791 0 0.65098 0.815686 0.894118 Xa
 0.490517 0.05005 0.133791 0 0.65098 0.815686 0.894118 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
146.1548 104.8413 m
146.1548 98.6147 142.0044 94.1206 137.5083 93.2554 c
133.0122 92.3901 129.1899 94.5366 124.5376 92.0444 c
119.6958 89.4507 117.4478 80.9761 107.7622 80.9761 c
99.8071 80.9761 92.5454 88.9312 92.5454 99.8257 c
92.5454 120.0601 105.688 129.0522 118.1392 129.0522 c
134.7407 129.0522 146.1548 116.4272 146.1548 104.8413 c
f
126.4399 119.1948 m
126.4399 121.2944 124.7368 122.9976 122.6353 122.9976 c
120.5337 122.9976 118.8306 121.2944 118.8306 119.1948 c
118.8306 117.0933 120.5337 115.3901 122.6353 115.3901 c
124.7368 115.3901 126.4399 117.0933 126.4399 119.1948 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.361517 0 0.667689 0 0.776471 0.866667 0.498039 Xa
 0.361517 0 0.667689 0 0.776471 0.866667 0.498039 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
145.4634 128.5327 m
145.4634 127.1968 144.3794 126.1128 143.0415 126.1128 c
141.7056 126.1128 140.6216 127.1968 140.6216 128.5327 c
140.6216 129.8706 141.7056 130.9546 143.0415 130.9546 c
144.3794 130.9546 145.4634 129.8706 145.4634 128.5327 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.490517 0.05005 0.133791 0 0.65098 0.815686 0.894118 Xa
 0.490517 0.05005 0.133791 0 0.65098 0.815686 0.894118 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
229.1621 147.0366 m
225.9707 142.3569 230.2012 136.3159 227.7793 131.8198 c
225.3574 127.3218 221.0352 126.8042 217.9219 129.2241 c
214.2871 132.0522 214.5117 135.8667 209.6211 138.0444 c
204.0918 140.5093 191.6372 135.7964 189.9067 145.3081 c
189.0317 150.1187 192.2817 153.8745 197.1699 154.9917 c
203.2227 156.3745 206.5215 155.1714 212.5605 158.105 c
218.6133 161.0444 223.8027 167.0981 234.6973 170.2104 c
245.1035 173.1851 250.7695 168.6538 251.2988 164.3315 c
252.3359 155.8569 234.1719 154.3823 229.1621 147.0366 c
f
226.9141 154.4741 m
226.9141 155.7144 225.9082 156.7222 224.666 156.7222 c
223.4258 156.7222 222.418 155.7144 222.418 154.4741 c
222.418 153.2319 223.4258 152.2261 224.666 152.2261 c
225.9082 152.2261 226.9141 153.2319 226.9141 154.4741 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.102907 0.152071 0.33991 0 0.913725 0.866667 0.717647 Xa
 0.102907 0.152071 0.33991 0 0.913725 0.866667 0.717647 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
256.1289 107.8569 m
256.1289 90.6909 241.6289 82.3569 229.1289 85.0249 c
218.8652 87.2144 216.2949 102.3569 212.4609 111.1909 c
208.748 119.7476 203.6289 133.6909 192.2954 133.6909 c
181.0981 133.6909 179.4634 119.1909 168.6294 119.1909 c
157.6294 119.1909 144.1294 134.8569 144.1294 158.8569 c
144.1294 173.5239 153.9282 190.312 164.9634 189.5239 c
176.6294 188.6909 169.4634 169.8569 180.2954 169.8569 c
189.7954 169.8569 188.1528 186.1157 189.4634 193.1909 c
191.1294 202.1909 196.2949 207.3569 207.9609 206.3569 c
222.4043 205.1196 230.2949 192.8569 226.832 183.0132 c
222.8027 171.562 202.9629 165.6909 205.2949 152.5229 c
206.6406 144.9312 218.2949 140.5249 231.2949 136.3569 c
245.8242 131.7007 256.1289 125.0249 256.1289 107.8569 c
f
211.1777 183.6997 m
211.1777 181.8843 212.6484 180.4136 214.4629 180.4136 c
216.2773 180.4136 217.75 181.8843 217.75 183.6997 c
217.75 185.5151 216.2773 186.9858 214.4629 186.9858 c
212.6484 186.9858 211.1777 185.5151 211.1777 183.6997 c
f
164.4849 158.7964 m
164.4849 159.7515 163.7114 160.5269 162.7563 160.5269 c
161.8013 160.5269 161.0259 159.7515 161.0259 158.7964 c
161.0259 157.8413 161.8013 157.0679 162.7563 157.0679 c
163.7114 157.0679 164.4849 157.8413 164.4849 158.7964 c
f
181.9517 148.0757 m
181.9517 150.1772 180.2485 151.8804 178.147 151.8804 c
176.0474 151.8804 174.3423 150.1772 174.3423 148.0757 c
174.3423 145.9741 176.0474 144.271 178.147 144.271 c
180.2485 144.271 181.9517 145.9741 181.9517 148.0757 c
f
201.8398 163.6392 m
201.8398 164.4985 201.1426 165.1948 200.2832 165.1948 c
199.4238 165.1948 198.7266 164.4985 198.7266 163.6392 c
198.7266 162.7798 199.4238 162.0835 200.2832 162.0835 c
201.1426 162.0835 201.8398 162.7798 201.8398 163.6392 c
f
231.4824 108.9448 m
231.4824 110.6968 230.0625 112.1187 228.3086 112.1187 c
226.5566 112.1187 225.1348 110.6968 225.1348 108.9448 c
225.1348 107.1909 226.5566 105.771 228.3086 105.771 c
230.0625 105.771 231.4824 107.1909 231.4824 108.9448 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.490517 0.05005 0.133791 0 0.65098 0.815686 0.894118 Xa
 0.490517 0.05005 0.133791 0 0.65098 0.815686 0.894118 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
223.4941 192.3628 m
215.623 189.6255 204.0547 207.6597 205.8242 219.3813 c
207.0645 227.6089 212.9473 232.5708 218.9121 233.5981 c
226.4375 234.895 231.8105 230.9976 232.2109 226.355 c
232.7578 220.0464 228.5781 218.8374 227.9883 211.397 c
227.4258 204.2622 231.6797 195.2114 223.4941 192.3628 c
f
219.7051 219.8706 m
219.7051 221.3042 218.543 222.4653 217.1113 222.4653 c
215.6777 222.4653 214.5176 221.3042 214.5176 219.8706 c
214.5176 218.438 215.6777 217.2769 217.1113 217.2769 c
218.543 217.2769 219.7051 218.438 219.7051 219.8706 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.102907 0.152071 0.33991 0 0.913725 0.866667 0.717647 Xa
 0.102907 0.152071 0.33991 0 0.913725 0.866667 0.717647 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
119.3501 214.8276 m
119.3501 213.395 118.188 212.2339 116.7563 212.2339 c
115.3228 212.2339 114.1626 213.395 114.1626 214.8276 c
114.1626 216.2603 115.3228 217.4214 116.7563 217.4214 c
118.188 217.4214 119.3501 216.2603 119.3501 214.8276 c
f
253.3477 128.0913 m
253.3477 136.5015 248.2695 143.3179 242.0078 143.3179 c
235.7461 143.3179 230.668 136.5015 230.668 128.0913 c
230.668 119.6831 235.7461 115.6499 242.0078 115.6499 c
248.2695 115.6499 253.3477 119.6831 253.3477 128.0913 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.490517 0.05005 0.133791 0 0.65098 0.815686 0.894118 Xa
 0.490517 0.05005 0.133791 0 0.65098 0.815686 0.894118 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
184.5728 222.5513 m
185.313 214.4507 197.2441 215.5347 202.4766 208.3374 c
212.9961 193.8628 201.2578 161.9722 180.8462 161.9722 c
169.106 161.9722 156.6294 171.6909 156.6294 191.1909 c
156.6294 207.0249 166.7954 212.6909 164.8794 233.3569 c
163.8735 244.1909 152.3794 253.6997 152.3794 268.1069 c
152.3794 274.0288 155.9653 281.5542 163.9321 281.5542 c
170.9868 281.5542 174.7544 275.6011 174.7544 268.6538 c
174.7544 261.856 169.3735 252.9136 176.1294 249.6069 c
181.3716 247.0415 189.3403 254.3765 195.6289 256.3569 c
200.8203 257.9927 208.0176 256.1323 210.3789 247.8569 c
212.9102 238.981 207.127 233.1118 198.7871 231.1636 c
192.4692 229.687 183.9849 228.9927 184.5728 222.5513 c
f
168.5884 253.1099 m
168.5884 254.9253 167.1177 256.397 165.3032 256.397 c
163.4888 256.397 162.0161 254.9253 162.0161 253.1099 c
162.0161 251.2954 163.4888 249.8247 165.3032 249.8247 c
167.1177 249.8247 168.5884 251.2954 168.5884 253.1099 c
f
194.5723 243.4146 m
195.8574 243.4146 196.9004 244.4575 196.9004 245.7446 c
196.9004 247.0308 195.8574 248.0728 194.5723 248.0728 c
193.2856 248.0728 192.2427 247.0308 192.2427 245.7446 c
192.2427 244.4575 193.2856 243.4146 194.5723 243.4146 c
f
174.5884 183.7427 m
174.5884 185.5581 173.1177 187.0298 171.3013 187.0298 c
169.4868 187.0298 168.0161 185.5581 168.0161 183.7427 c
168.0161 181.9282 169.4868 180.4575 171.3013 180.4575 c
173.1177 180.4575 174.5884 181.9282 174.5884 183.7427 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.361517 0 0.667689 0 0.776471 0.866667 0.498039 Xa
 0.361517 0 0.667689 0 0.776471 0.866667 0.498039 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
166.9067 196.6694 m
155.147 198.0532 147.5376 196.3237 144.2524 193.5562 c
141.2329 191.0132 139.2974 188.1509 142.0044 181.6245 c
144.9438 174.5337 143.5376 166.8921 136.4692 165.7144 c
130.2446 164.6772 125.5747 170.5562 125.229 177.9927 c
124.9888 183.1753 123.3267 186.2935 119.6958 185.6011 c
116.063 184.9097 115.0669 179.7007 116.063 173.8423 c
117.4478 165.7144 121.5981 162.0825 122.2896 153.6089 c
122.7837 147.5542 119.3501 139.9468 109.8384 138.564 c
100.5376 137.2104 93.9282 142.8862 93.2368 149.1128 c
92.5044 155.7007 96.8677 160.0073 96.3481 166.7515 c
95.8306 173.4966 92.3364 176.9233 90.4692 184.0454 c
87.7017 194.5942 91.6802 203.0679 98.2505 206.6997 c
112.9966 214.8481 121.0825 203.0581 134.2212 205.144 c
145.1177 206.8726 157.5688 223.3013 167.2524 224.6851 c
175.479 225.8599 181.0864 220.0161 182.2974 210.6772 c
183.5083 201.3384 177.5571 195.4155 166.9067 196.6694 c
f
124.7114 196.1509 m
124.7114 198.4429 122.8521 200.3013 120.561 200.3013 c
118.2681 200.3013 116.4106 198.4429 116.4106 196.1509 c
116.4106 193.8589 118.2681 192.0005 120.561 192.0005 c
122.8521 192.0005 124.7114 193.8589 124.7114 196.1509 c
f
174.1704 211.5415 m
174.1704 212.4966 173.395 213.271 172.4399 213.271 c
171.4849 213.271 170.7114 212.4966 170.7114 211.5415 c
170.7114 210.5864 171.4849 209.812 172.4399 209.812 c
173.395 209.812 174.1704 210.5864 174.1704 211.5415 c
f
*U
230.2012 174.3608 m
230.2012 173.5972 229.582 172.9771 228.8164 172.9771 c
228.0527 172.9771 227.4336 173.5972 227.4336 174.3608 c
227.4336 175.1245 228.0527 175.7446 228.8164 175.7446 c
229.582 175.7446 230.2012 175.1245 230.2012 174.3608 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.102907 0.152071 0.33991 0 0.913725 0.866667 0.717647 Xa
 0.102907 0.152071 0.33991 0 0.913725 0.866667 0.717647 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
235.7344 212.7524 m
235.7344 211.5103 234.7285 210.5034 233.4863 210.5034 c
232.2441 210.5034 231.2363 211.5103 231.2363 212.7524 c
231.2363 213.9946 232.2441 215.0015 233.4863 215.0015 c
234.7285 215.0015 235.7344 213.9946 235.7344 212.7524 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.490517 0.05005 0.133791 0 0.65098 0.815686 0.894118 Xa
 0.490517 0.05005 0.133791 0 0.65098 0.815686 0.894118 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
152.2075 189.5796 m
152.2075 188.9116 151.6646 188.3687 150.9966 188.3687 c
150.3286 188.3687 149.7856 188.9116 149.7856 189.5796 c
149.7856 190.2476 150.3286 190.7905 150.9966 190.7905 c
151.6646 190.7905 152.2075 190.2476 152.2075 189.5796 c
f
148.5747 121.0972 m
148.5747 120.3335 147.9556 119.7124 147.1919 119.7124 c
146.4282 119.7124 145.8091 120.3335 145.8091 121.0972 c
145.8091 121.8608 146.4282 122.48 147.1919 122.48 c
147.9556 122.48 148.5747 121.8608 148.5747 121.0972 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.102907 0.152071 0.33991 0 0.913725 0.866667 0.717647 Xa
 0.102907 0.152071 0.33991 0 0.913725 0.866667 0.717647 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
233.1406 143.0601 m
233.1406 142.3921 232.5977 141.8491 231.9297 141.8491 c
231.2617 141.8491 230.7207 142.3921 230.7207 143.0601 c
230.7207 143.728 231.2617 144.269 231.9297 144.269 c
232.5977 144.269 233.1406 143.728 233.1406 143.0601 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.361517 0 0.667689 0 0.776471 0.866667 0.498039 Xa
 0.361517 0 0.667689 0 0.776471 0.866667 0.498039 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
195.8516 125.1343 m
195.8516 123.2534 194.3242 121.7261 192.4438 121.7261 c
190.561 121.7261 189.0356 123.2534 189.0356 125.1343 c
189.0356 127.0171 190.561 128.5425 192.4438 128.5425 c
194.3242 128.5425 195.8516 127.0171 195.8516 125.1343 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.102907 0.152071 0.33991 0 0.913725 0.866667 0.717647 Xa
 0.102907 0.152071 0.33991 0 0.913725 0.866667 0.717647 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
200.832 85.2827 m
200.832 84.1245 199.8926 83.187 198.7344 83.187 c
197.5762 83.187 196.6387 84.1245 196.6387 85.2827 c
196.6387 86.4409 197.5762 87.3804 198.7344 87.3804 c
199.8926 87.3804 200.832 86.4409 200.832 85.2827 c
f
162.0298 91.5757 m
162.0298 90.7065 161.3267 90.0034 160.4575 90.0034 c
159.5884 90.0034 158.8833 90.7065 158.8833 91.5757 c
158.8833 92.4448 159.5884 93.1499 160.4575 93.1499 c
161.3267 93.1499 162.0298 92.4448 162.0298 91.5757 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.361517 0 0.667689 0 0.776471 0.866667 0.498039 Xa
 0.361517 0 0.667689 0 0.776471 0.866667 0.498039 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
235.7012 205.6235 m
235.7012 204.1763 234.5273 203.0024 233.0801 203.0024 c
231.6328 203.0024 230.459 204.1763 230.459 205.6235 c
230.459 207.0708 231.6328 208.2446 233.0801 208.2446 c
234.5273 208.2446 235.7012 207.0708 235.7012 205.6235 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.490517 0.05005 0.133791 0 0.65098 0.815686 0.894118 Xa
 0.490517 0.05005 0.133791 0 0.65098 0.815686 0.894118 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
225.4766 170.7544 m
225.4766 169.4517 224.4199 168.395 223.1172 168.395 c
221.8145 168.395 220.7578 169.4517 220.7578 170.7544 c
220.7578 172.0571 221.8145 173.1138 223.1172 173.1138 c
224.4199 173.1138 225.4766 172.0571 225.4766 170.7544 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.102907 0.152071 0.33991 0 0.913725 0.866667 0.717647 Xa
 0.102907 0.152071 0.33991 0 0.913725 0.866667 0.717647 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
127.686 164.1997 m
127.686 162.7515 126.5122 161.5776 125.063 161.5776 c
123.6157 161.5776 122.4419 162.7515 122.4419 164.1997 c
122.4419 165.6479 123.6157 166.8218 125.063 166.8218 c
126.5122 166.8218 127.686 165.6479 127.686 164.1997 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.490517 0.05005 0.133791 0 0.65098 0.815686 0.894118 Xa
 0.490517 0.05005 0.133791 0 0.65098 0.815686 0.894118 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
122.7036 171.2788 m
122.7036 170.5552 122.1177 169.9683 121.3931 169.9683 c
120.6704 169.9683 120.0825 170.5552 120.0825 171.2788 c
120.0825 172.0024 120.6704 172.5894 121.3931 172.5894 c
122.1177 172.5894 122.7036 172.0024 122.7036 171.2788 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.102907 0.152071 0.33991 0 0.913725 0.866667 0.717647 Xa
 0.102907 0.152071 0.33991 0 0.913725 0.866667 0.717647 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 XR
186.938 119.3667 m
186.938 118.4976 186.2329 117.7944 185.3638 117.7944 c
184.4946 117.7944 183.7915 118.4976 183.7915 119.3667 c
183.7915 120.2358 184.4946 120.9409 185.3638 120.9409 c
186.2329 120.9409 186.938 120.2358 186.938 119.3667 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.490517 0.05005 0.133791 0 0.65098 0.815686 0.894118 Xa
 0.490517 0.05005 0.133791 0 0.65098 0.815686 0.894118 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
85.0327 147.0366 m
81.8413 142.3569 86.0718 136.3159 83.6499 131.8198 c
81.228 127.3218 76.9058 126.8042 73.7925 129.2241 c
70.1577 132.0522 70.3823 135.8667 65.4917 138.0444 c
59.9624 140.5093 47.5078 135.7964 45.7773 145.3081 c
44.9023 150.1187 48.1523 153.8745 53.0405 154.9917 c
59.0933 156.3745 62.3921 155.1714 68.4312 158.105 c
74.4839 161.0444 79.6733 167.0981 90.5679 170.2104 c
100.9741 173.1851 106.6401 168.6538 107.1694 164.3315 c
108.2065 155.8569 90.0425 154.3823 85.0327 147.0366 c
f
82.7847 154.4741 m
82.7847 155.7144 81.7788 156.7222 80.5366 156.7222 c
79.2964 156.7222 78.2886 155.7144 78.2886 154.4741 c
78.2886 153.2319 79.2964 152.2261 80.5366 152.2261 c
81.7788 152.2261 82.7847 153.2319 82.7847 154.4741 c
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.102907 0.152071 0.33991 0 0.913725 0.866667 0.717647 Xa
 0.102907 0.152071 0.33991 0 0.913725 0.866667 0.717647 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 10 M []0 d0 XR
111.9995 107.8569 m
111.9995 90.6909 97.4995 82.3569 84.9995 85.0249 c
74.7358 87.2144 72.1655 102.3569 68.3315 111.1909 c
64.6187 119.7476 59.4995 133.6909 48.166 133.6909 c
36.9688 133.6909 35.334 119.1909 24.5 119.1909 c
13.5 119.1909 0 134.8569 0 158.8569 c
0 173.5239 9.79883 190.312 20.834 189.5239 c
32.5 188.6909 25.334 169.8569 36.166 169.8569 c
45.666 169.8569 44.0234 186.1157 45.334 193.1909 c
47 202.1909 52.1655 207.3569 63.8315 206.3569 c
78.2749 205.1196 86.1655 192.8569 82.7026 183.0132 c
78.6733 171.562 58.8335 165.6909 61.1655 152.5229 c
62.5112 144.9312 74.1655 140.5249 87.1655 136.3569 c
101.6948 131.7007 111.9995 125.0249 111.9995 107.8569 c
f
67.0483 183.6997 m
67.0483 181.8843 68.519 180.4136 70.3335 180.4136 c
72.1479 180.4136 73.6206 181.8843 73.6206 183.6997 c
73.6206 185.5151 72.1479 186.9858 70.3335 186.9858 c
68.519 186.9858 67.0483 185.5151 67.0483 183.6997 c
f
20.3555 158.7964 m
20.3555 159.7515 19.582 160.5269 18.627 160.5269 c
17.6719 160.5269 16.8965 159.7515 16.8965 158.7964 c
16.8965 157.8413 17.6719 157.0679 18.627 157.0679 c
19.582 157.0679 20.3555 157.8413 20.3555 158.7964 c
f
37.8223 148.0757 m
37.8223 150.1772 36.1191 151.8804 34.0176 151.8804 c
31.918 151.8804 30.2129 150.1772 30.2129 148.0757 c
30.2129 145.9741 31.918 144.271 34.0176 144.271 c
36.1191 144.271 37.8223 145.9741 37.8223 148.0757 c
f
57.7104 163.6392 m
57.7104 164.4985 57.0132 165.1948 56.1538 165.1948 c
55.2944 165.1948 54.5972 164.4985 54.5972 163.6392 c
54.5972 162.7798 55.2944 162.0835 56.1538 162.0835 c
57.0132 162.0835 57.7104 162.7798 57.7104 163.6392 c
f
87.353 108.9448 m
87.353 110.6968 85.9331 112.1187 84.1792 112.1187 c
82.4272 112.1187 81.0054 110.6968 81.0054 108.9448 c
81.0054 107.1909 82.4272 105.771 84.1792 105.771 c
85.9331 105.771 87.353 107.1909 87.353 108.9448 c
f
*U
109.2183 128.0913 m
109.2183 136.5015 104.1401 143.3179 97.8784 143.3179 c
91.6167 143.3179 86.5386 136.5015 86.5386 128.0913 c
86.5386 119.6831 91.6167 115.6499 97.8784 115.6499 c
104.1401 115.6499 109.2183 119.6831 109.2183 128.0913 c
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(Unnamed 7)0 A
u
u
0 J 0 j 1 w 4 M []0 d0 XR
-3934.3342 3635.3022 m
-3842.3972 3635.3022 L
-3842.3972 3632.0667 L
-3934.3342 3632.0667 L
-3934.3342 3635.3022 L
n
u
0 O
0.816373 0.835752 0.71844 0.638727 0.137255 0.121569 0.12549 Xa
-3842.3972 3634.3499 m
-3842.3489 3634.2639 -3842.3762 3634.0686 -3842.5095 3634.1072 C
-3842.6042 3634.4382 L
-3842.3972 3634.3499 L
f
-3843.2944 3633.7368 m
-3843.4512 3633.8972 -3843.6321 3634.1792 -3843.5305 3634.4832 C
-3843.3752 3634.165 -3843.3376 3634.2979 -3843.1704 3633.9192 C
-3843.0369 3633.8806 -3842.9375 3634.0254 -3842.96 3634.1472 C
-3842.9128 3634.0623 -3842.7527 3634.22 -3842.6809 3634.012 C
-3842.8545 3633.7559 -3843.0745 3633.7456 -3843.3042 3633.957 C
-3843.3535 3633.8843 -3843.3057 3633.7979 -3843.2944 3633.7368 C
f
-3856.3323 3633.2207 m
-3856.2483 3633.26 L
-3856.2712 3633.2383 -3856.3 3633.2263 -3856.3323 3633.2207 C
f
-3864.4104 3633.0391 m
-3864.3489 3633.031 -3864.3232 3632.9983 -3864.3201 3632.9683 C
-3864.3772 3632.99 -3864.4241 3633.0103 -3864.4104 3633.0391 C
f
-3865.7896 3632.6743 m
-3865.76 3632.6848 -3865.7351 3632.6895 -3865.7083 3632.6968 C
-3865.7393 3632.6663 -3865.7705 3632.6494 -3865.7896 3632.6743 C
f
-3856.3323 3633.2207 m
-3856.5481 3633.1167 L
-3856.5632 3633.2246 -3856.4375 3633.1968 -3856.3323 3633.2207 C
f
-3845.0923 3634.5352 m
-3845.0471 3634.519 -3845.0095 3634.4883 -3844.9751 3634.448 C
-3845.0122 3634.4624 -3845.0481 3634.4744 -3845.0852 3634.4832 C
-3845.0872 3634.501 -3845.0889 3634.5166 -3845.0923 3634.5352 C
f
-3852.7712 3632.9524 m
-3852.7056 3632.9519 L
-3852.6863 3632.9143 -3852.6682 3632.8687 -3852.6511 3632.8174 C
-3852.7712 3632.9524 L
f
-3850.0383 3632.9016 m
-3850.1001 3632.8894 -3850.1216 3633.1704 -3850.1453 3633.2932 C
-3850.1104 3633.1775 -3850.0647 3633.1223 -3850.0105 3633.1006 C
-3850.0095 3633.0471 -3850.0176 3632.9832 -3850.0383 3632.9016 C
f
-3845.7048 3633.396 m
-3845.6279 3633.3572 L
-3845.6479 3633.3694 -3845.6816 3633.3806 -3845.7048 3633.396 C
f
-3854.7273 3632.8916 m
-3854.7319 3632.8499 -3854.7417 3632.813 -3854.7522 3632.791 C
-3854.7522 3632.8264 -3854.7424 3632.8599 -3854.7273 3632.8916 C
f
-3931.1663 3635.0039 m
-3931.1641 3634.9839 -3931.1672 3634.9712 -3931.1665 3634.9539 C
-3931.1824 3634.9822 -3931.1873 3635.0022 -3931.1663 3635.0039 C
f
-3934.3342 3633.6118 m
-3934.2903 3633.5967 L
-3934.2856 3633.5435 -3934.2808 3633.4912 -3934.2808 3633.4392 C
-3934.3342 3633.6118 L
f
-3868.3137 3632.3142 m
-3868.3088 3632.3174 -3868.3071 3632.3174 -3868.3025 3632.3196 C
-3868.2361 3632.2876 -3868.2737 3632.2932 -3868.3137 3632.3142 C
f
-3891.4856 3632.5215 m
-3891.2231 3632.7727 -3891.9128 3632.844 -3891.5176 3633.123 C
-3891.5544 3633.0132 -3891.1584 3632.6848 -3891.4856 3632.5215 C
f
-3845.1631 3634.4983 m
-3845.2 3634.5015 -3845.2375 3634.5039 -3845.2751 3634.501 C
-3845.2241 3634.5103 -3845.1897 3634.509 -3845.1631 3634.4983 C
f
-3891.5176 3633.123 m
-3891.5176 3633.1243 -3891.5176 3633.1255 Y
-3891.4768 3633.1519 L
-3891.4937 3633.1404 -3891.5032 3633.1328 -3891.5176 3633.123 C
f
-3874.1296 3632.4832 m
-3874.1177 3632.5327 -3874.0945 3632.5703 -3874.0703 3632.6062 C
-3874.0723 3632.5774 -3874.0857 3632.5422 -3874.1296 3632.4832 C
f
-3869.7969 3632.8831 m
-3869.9041 3632.8455 L
-3869.8616 3632.8711 -3869.8271 3632.8799 -3869.7969 3632.8831 C
f
-3876.3792 3632.8799 m
-3876.4375 3632.8584 -3876.4573 3632.8196 -3876.5369 3632.8572 C
-3876.5295 3632.8716 -3876.5222 3632.8816 -3876.5127 3632.8916 C
-3876.4839 3632.853 -3876.4456 3632.8352 -3876.3792 3632.8799 C
f
-3878.7207 3632.8816 m
-3878.7083 3632.9031 -3878.6919 3632.9192 -3878.6775 3632.9382 C
-3878.6543 3632.9326 -3878.6272 3632.9282 -3878.6033 3632.9231 C
-3878.7207 3632.8816 L
f
-3924.0503 3634.8687 m
-3924.1016 3634.7896 -3924.1335 3634.7024 -3924.1584 3634.616 C
-3924.1223 3634.8159 -3924.4663 3634.8872 -3924.0503 3634.8687 C
f
-3845.0935 3634.3772 m
-3845.1072 3634.448 -3845.1272 3634.4832 -3845.1631 3634.4983 C
-3845.1362 3634.4951 -3845.1104 3634.4895 -3845.0852 3634.4832 C
-3845.0784 3634.4414 -3845.0769 3634.4019 -3845.0935 3634.3772 C
f
-3876.4744 3635.0974 m
-3876.8464 3635.0559 L
-3876.7424 3635.083 -3876.6072 3635.0974 -3876.4744 3635.0974 C
f
-3907.2522 3634.8286 m
-3907.3376 3634.8623 L
-3907.3047 3634.8687 -3907.2744 3634.8606 -3907.2522 3634.8286 C
f
-3877.9504 3635.0974 m
-3878.0168 3634.9983 -3878.0872 3634.9407 -3878.1599 3634.9031 C
-3878.1753 3634.925 -3878.1929 3634.9431 -3878.2031 3634.9756 C
-3877.9504 3635.0974 L
f
-3924.1592 3634.613 m
-3924.1584 3634.6143 -3924.1584 3634.616 Y
-3924.1584 3634.6143 -3924.1592 3634.613 V
f
*u
-3926.6096 3635.2808 m
-3926.2551 3635.2888 -3926.4431 3634.9192 -3926.3679 3634.707 C
-3925.9448 3634.6023 -3926.1721 3634.979 -3926.0281 3635.168 C
-3925.7639 3635.0703 -3925.5613 3634.7312 -3925.3643 3634.7456 C
-3925.3496 3634.8064 -3925.3113 3634.8286 -3925.3562 3634.9048 C
-3925.0769 3634.6111 -3924.5271 3634.8904 -3924.2017 3634.5215 C
-3924.1775 3634.5542 -3924.1653 3634.5852 -3924.1592 3634.613 C
-3924.2119 3634.4282 -3924.22 3634.24 -3924.2092 3634.1062 C
-3924.0503 3634.0999 -3923.9143 3633.8728 -3923.8545 3634.1143 C
-3923.9519 3634.1072 -3923.96 3634.2046 -3924.0056 3634.28 C
-3923.8391 3634.175 L
-3923.6892 3634.5222 -3924.0664 3634.2952 -3924.0664 3634.552 C
-3923.7417 3634.4392 -3923.3633 3634.1519 -3923.1145 3634.25 C
-3923.0625 3634.5896 -3923.6963 3634.3643 -3923.3643 3634.6663 C
-3923.7493 3634.5364 L
-3923.4551 3635.0723 -3923.9832 3634.499 -3923.7129 3635.0723 C
-3923.2063 3635.1707 -3923.1462 3634.8992 -3922.6409 3634.9983 C
-3922.5271 3634.8096 -3922.6785 3634.7192 -3922.5647 3634.5303 C
-3921.8464 3634.1912 -3921.9993 3635.3843 -3921.4712 3634.9319 C
-3921.3345 3634.7056 -3921.2815 3634.2759 -3920.9055 3634.5032 C
-3921.0337 3634.8872 L
-3920.5432 3634.925 -3920.7537 3634.3352 -3920.24 3634.5935 C
-3920.3313 3634.7444 -3920.6255 3634.7207 -3920.5513 3634.7664 C
-3920.2185 3635.0696 -3920.3159 3634.5486 -3920.0601 3634.5486 C
-3920.0071 3634.8887 L
-3919.4849 3634.8352 -3918.9097 3634.5896 -3918.3313 3634.5276 C
-3918.3633 3634.6287 -3918.4624 3634.7351 -3918.3271 3634.8391 C
-3917.5977 3634.6692 -3916.77 3634.8806 -3916.0664 3635.0823 C
-3915.7976 3634.7888 L
-3915.7351 3634.792 -3915.6816 3634.9214 -3915.7493 3634.9783 C
-3915.4751 3635.0896 -3915.7351 3634.792 -3915.6033 3634.6768 C
-3915.4473 3634.6563 -3915.3972 3634.8455 -3915.4961 3634.9336 C
-3915.0122 3634.6848 -3914.1177 3634.3975 -3913.6079 3634.7119 C
-3913.7073 3634.7991 L
-3913.3103 3634.9182 -3913.2593 3634.1975 -3912.8911 3634.4712 C
-3912.9617 3634.5232 L
-3912.1001 3634.6504 -3911.1479 3634.3816 -3910.4905 3634.8247 C
-3910.3655 3634.4019 -3909.6377 3635.0132 -3909.5823 3634.4236 C
-3909.0903 3634.7158 -3909.2312 3634.821 -3908.5383 3635.0176 C
-3908.3533 3635.0447 -3908.2625 3634.6494 -3908.0337 3634.5879 C
-3908.0281 3634.896 L
-3907.7175 3634.5728 L
-3907.5522 3634.9414 L
-3907.3376 3634.8623 L
-3907.4231 3634.844 -3907.5193 3634.7239 -3907.5063 3634.635 C
-3907.1711 3634.4956 -3906.6892 3634.8499 -3906.6809 3635.0078 C
-3905.8879 3634.7471 L
-3905.9055 3634.8711 -3906.0383 3634.9136 -3906.1433 3634.9927 c
-3905.72 3634.6782 -3906.0664 3635.3174 -3905.6785 3635.0291 C
-3905.7305 3634.959 -3905.6504 3634.8455 -3905.6416 3634.7832 C
-3905.4482 3634.9695 -3905.0081 3634.9712 -3904.6824 3634.8926 C
-3904.7449 3635.105 L
-3904.1567 3635.1592 -3903.5049 3635.0032 -3902.8447 3635.0071 C
-3903.0815 3634.908 -3903.0271 3634.5398 -3902.8335 3634.5044 C
-3902.7561 3634.8298 L
-3902.6311 3634.6287 -3902.9583 3634.707 -3902.7017 3634.4607 C
-3902.4551 3634.4983 -3902.5359 3634.8311 -3902.6775 3634.937 C
-3902.3777 3634.824 L
-3902.3601 3634.9214 -3902.4304 3634.9727 -3902.4487 3635.0967 C
-3902.3257 3634.8943 -3901.9312 3635.4236 -3901.7537 3635.0723 C
-3901.7368 3635.1692 L
-3901.0769 3635.1719 -3900.7776 3635.0598 -3900.24 3635.0435 C
-3900.2295 3634.7622 -3900.0193 3634.8247 -3899.8591 3634.5974 C
-3899.4641 3634.687 -3899.0256 3634.908 -3898.5496 3634.8843 C
-3898.2151 3634.7444 -3898.4519 3634.6462 -3898.3015 3634.479 C
-3898.2769 3634.7351 -3897.8015 3634.7112 -3898.0481 3634.895 C
-3897.4768 3634.8535 -3897.3184 3634.844 -3896.5959 3634.636 C
-3896.6743 3634.531 -3896.7625 3634.4856 -3896.7168 3634.3982 C
-3896.5857 3634.356 -3896.4185 3634.5056 -3896.4373 3634.6287 C
-3896.4719 3634.655 L
-3895.6609 3634.271 -3894.6001 3635.4019 -3893.9543 3634.8679 C
-3893.9905 3634.8943 L
-3893.3208 3634.616 L
-3893.0127 3634.6604 -3893.5056 3634.8086 -3893.2776 3634.967 C
-3892.5552 3634.5398 -3892.1362 3635.0291 -3891.5413 3634.7444 C
-3891.0808 3635.5 -3889.9072 3634.6912 -3889.2856 3635.1736 C
-3889.3215 3634.9956 L
-3889.1609 3634.821 -3889.1272 3635.0974 -3889.0088 3635.1382 C
-3889.0256 3635 -3889.1831 3634.9783 -3889.0833 3634.8816 C
-3887.7224 3634.667 -3886.2744 3635.1416 -3884.8792 3635.3022 c
-3884.3689 3635.3499 -3884.5896 3634.3816 -3883.9463 3634.8064 C
-3884.1289 3635.1367 L
-3883.0991 3634.7402 -3882.0232 3635.1504 -3881.0151 3634.8142 C
-3881.0752 3634.8904 -3881.0769 3634.9895 -3881.1753 3634.9883 C
-3880.9624 3635.2283 -3880.3879 3635 -3880.3843 3634.804 C
-3880.2273 3634.8264 -3880.3479 3634.9812 -3880.2512 3635.0808 C
-3880.0376 3635.2224 -3879.7151 3634.7744 -3879.6016 3635.0132 c
-3879.5823 3635.052 -3879.6616 3635.0911 -3879.7007 3635.1096 C
-3879.5615 3634.9934 -3879.0522 3635.1392 -3879.1855 3634.8623 C
-3878.8071 3634.9944 -3878.4617 3634.739 -3878.1599 3634.9031 C
-3877.9631 3634.5935 -3877.5122 3635.052 -3877.4497 3634.6143 C
-3877.4768 3635.0667 -3876.7864 3634.979 -3876.5471 3634.7664 C
-3876.6272 3634.9031 -3876.3391 3634.908 -3876.4329 3635.0974 C
-3876.1599 3635.0911 -3875.9097 3635.0071 -3875.9573 3634.7747 C
-3875.4543 3635.3159 -3874.9463 3634.3391 -3874.6631 3635.0327 C
-3873.8521 3634.7896 -3873.1016 3634.625 -3872.3721 3634.519 C
-3872.3984 3634.9702 -3873.1785 3634.564 -3873.1472 3635.0376 C
-3872.4551 3634.8518 -3872.0559 3634.4646 -3871.3696 3634.5735 C
-3871.1919 3634.635 -3871.4705 3634.769 -3871.5305 3634.8462 C
-3870.8391 3634.6604 -3870.1936 3634.8872 -3869.5784 3634.6416 C
-3869.5801 3634.6836 -3869.6465 3634.7295 -3869.7092 3634.7639 C
-3869.5879 3634.749 -3869.4272 3634.8298 -3869.4409 3634.625 C
-3869.5591 3634.6807 L
-3869.7527 3634.3831 -3869.0776 3634.0591 -3869.0559 3633.9019 C
-3869.2617 3634.4895 -3868.4482 3634.0496 -3868.7751 3634.792 C
-3868.6953 3634.7534 -3868.5952 3634.6563 -3868.6135 3634.519 C
-3868.4951 3634.5591 -3868.4575 3634.6392 -3868.5776 3634.7952 C
-3868.1433 3634.6836 -3868.2976 3634.4656 -3867.9041 3634.4702 C
-3867.9055 3634.5696 -3867.9849 3634.6079 -3868.0256 3634.7246 C
-3867.8264 3634.531 -3867.6262 3634.3374 -3867.2937 3634.4214 C
-3867.3137 3634.4812 -3867.2751 3634.5591 -3867.3743 3634.5576 C
-3866.8032 3634.5276 -3866.4009 3634.0422 -3865.7744 3634.229 C
-3865.9592 3634.6604 -3865.5613 3634.3711 -3865.5281 3634.7444 C
-3865.1912 3634.6331 L
-3865.3264 3634.4519 L
-3865.0313 3634.4583 -3864.7705 3634.1863 -3864.5168 3634.3086 C
-3864.7361 3634.4624 L
-3864.1831 3634.3916 L
-3864.4961 3634.25 L
-3864.1975 3634.0576 -3864.5281 3633.7776 -3864.1353 3633.8816 C
-3864.2151 3633.9194 -3863.8401 3633.8862 -3863.6863 3634.1062 C
-3863.6873 3634.1062 -3863.6873 3634.1072 V
-3863.5413 3633.9883 -3863.3911 3633.863 -3863.1729 3633.9558 C
-3863.1162 3634.0752 -3863.2185 3634.3687 -3863.1816 3634.448 C
-3863.0376 3634.136 -3862.4905 3634.3616 -3862.3081 3634.0291 C
-3862.3689 3634.1072 -3862.3721 3634.303 -3862.3521 3634.343 C
-3862.2312 3634.0896 L
-3862.0945 3634.1707 -3862.0745 3634.21 -3862.0967 3634.3662 C
-3861.6855 3634.4126 -3862.2273 3633.8926 -3861.7393 3634.0967 C
-3861.7776 3634.1172 -3861.7593 3634.155 -3861.8391 3634.1936 C
-3861.3489 3634.3 -3860.8921 3634.0327 -3860.4417 3634.1575 C
-3860.3088 3634.5332 -3860.8352 3634.2495 -3860.6831 3634.5664 C
-3860.0337 3634.4983 -3859.3384 3634.116 -3858.71 3634.2046 C
-3858.8271 3634.1631 L
-3858.74 3633.6328 -3858.3591 3634.425 -3858.0413 3634.175 C
-3858.1191 3634.2144 -3858.1433 3634.4695 -3858.1223 3634.4104 C
-3857.6919 3634.4956 -3857.2424 3634.28 -3856.5903 3634.113 C
-3856.6711 3634.2495 L
-3856.4175 3634.3711 -3856.0032 3634.3196 -3855.7292 3634.3816 C
-3855.6479 3634.2456 -3855.4912 3634.2676 -3855.5864 3634.0696 C
-3854.7417 3634.8455 -3853.9751 3633.6536 -3853.2256 3634.3 C
-3853.3152 3634.3015 -3853.4392 3634.4192 -3853.3679 3634.4194 C
-3852.7295 3634.2942 L
-3852.78 3634.063 -3852.8132 3634.1543 -3852.9473 3633.9744 C
-3852.8665 3633.8374 -3852.6863 3633.7312 -3852.5281 3633.7312 C
-3852.8152 3633.8843 -3852.5256 3634.1023 -3852.4016 3634.2312 C
-3852.4224 3634.1604 -3852.3799 3634.0823 -3852.3904 3634.0103 C
-3852.0569 3634.4214 -3852.3345 3633.5454 -3851.8792 3633.8223 C
-3851.9033 3633.9436 L
-3851.7329 3633.8816 -3851.5759 3633.7212 -3851.3921 3633.7559 C
-3851.3159 3634.0232 -3851.5735 3633.8806 -3851.5852 3634.1006 C
-3851.3271 3634.0852 -3851.0759 3633.5942 -3850.8423 3633.8606 C
-3850.9519 3633.9351 -3851.1096 3633.9363 -3851.2192 3634.0103 C
-3850.9648 3634.324 -3850.9353 3634.2444 -3850.7463 3634.2942 C
-3850.7649 3634.2871 L
-3850.3279 3634.4292 L
-3850.4392 3634.344 L
-3850.1162 3633.6472 -3849.7815 3634.2168 -3849.3464 3633.7603 c
-3849.7693 3634.1924 -3849.4163 3634.0103 -3849.4487 3634.313 C
-3849.3376 3634.3972 -3849.1687 3634.4915 -3849.2168 3634.5767 C
-3849.0112 3634.3323 -3848.8735 3634.769 -3848.5833 3634.4119 C
-3848.5703 3634.509 -3848.3633 3634.4214 -3848.4097 3634.6663 C
-3848.1423 3634.5896 -3848.4729 3634.4966 -3848.4504 3634.3743 C
-3848.0383 3634.041 -3847.4817 3634.7783 -3846.8889 3634.321 C
-3846.3777 3634.1331 -3846.2832 3633.804 -3845.8088 3633.6404 C
-3845.6487 3633.7964 -3845.9399 3633.9956 Y
-3845.6816 3634.1392 -3845.4873 3634.1128 -3845.2439 3634.001 C
-3845.2932 3634.0862 -3845.2424 3634.1582 -3845.1682 3634.2676 C
-3844.9729 3634.2422 -3845.0376 3633.9126 -3844.78 3634.0564 C
-3844.8242 3634.165 -3844.8809 3634.3391 -3844.9751 3634.448 C
-3844.7449 3634.3584 -3844.5176 3634.1763 -3844.2793 3634.0884 C
-3844.2161 3634.2583 -3844.4231 3634.3462 -3844.5071 3634.457 C
-3844.2393 3634.3806 -3843.8132 3634.303 -3843.7305 3634.0342 C
-3843.9023 3633.9382 L
-3843.8047 3633.925 -3843.8521 3634.1692 -3843.9241 3634.2183 C
-3844.1536 3634.4292 -3844.2551 3634.125 -3844.2681 3634.0271 C
-3844.0984 3633.9646 L
-3844.2727 3633.3926 -3844.78 3634.0564 -3845.1216 3634.0232 C
-3844.9792 3633.6072 L
-3845.3296 3633.9524 L
-3845.4041 3633.844 -3845.4551 3633.6118 -3845.2864 3633.5496 C
-3845.5313 3633.344 -3845.5032 3633.6975 -3845.7136 3633.4683 C
-3845.7368 3633.4326 -3845.7263 3633.4126 -3845.7048 3633.396 C
-3845.9441 3633.52 L
-3845.8972 3633.4326 -3845.9839 3633.2263 -3845.8369 3633.2864 C
-3846.2664 3633.0464 -3846.5295 3633.5984 -3846.6912 3633.2832 C
-3846.6553 3633.2576 L
-3847.2512 3633.3982 -3846.7129 3633.563 -3847.1599 3633.9214 C
-3847.4607 3633.168 L
-3847.5193 3633.4734 L
-3847.5808 3633.4624 -3847.7024 3633.4395 -3847.6799 3633.3174 C
-3847.9087 3633.5264 -3847.6409 3633.4502 -3847.7737 3633.6475 C
-3848.0696 3633.3694 -3848.5896 3633.7776 -3848.6563 3633.291 C
-3848.7625 3633.5232 -3848.3733 3633.4702 -3848.6892 3633.6316 C
-3848.7793 3633.1084 -3849.0544 3633.7212 -3849.3247 3633.4812 C
-3849.2417 3633.2112 -3848.9856 3633.3542 -3849.2561 3633.113 C
-3849.4192 3633.5696 -3849.7825 3633.0132 -3850.0105 3633.1006 C
-3850.0212 3633.4639 -3850.5063 3633.252 -3850.8889 3633.373 C
-3850.8647 3633.251 -3851.6089 3633.1736 -3851.9648 3633.0422 C
-3851.9543 3632.9812 L
-3852.0232 3633.3484 -3852.3904 3633.2791 -3852.6577 3633.355 C
-3852.6472 3633.135 -3852.5991 3633.0486 -3852.4543 3632.9502 C
-3852.7056 3632.9519 L
-3852.7649 3633.0696 -3852.8433 3633.1316 -3853.0063 3633.1736 C
-3852.9431 3632.8992 L
-3853.2776 3632.9143 -3853.6167 3633.2224 -3854.0471 3633.0391 C
-3854.0713 3633.2952 -3853.7048 3633.752 -3854.1599 3633.9231 C
-3854.1768 3633.7847 -3854.1936 3633.5479 -3854.0745 3633.4912 c
-3854.1135 3633.509 -3854.2136 3633.6062 -3854.2922 3633.5471 C
-3854.1104 3633.3142 L
-3854.3064 3633.2119 -3854.2129 3633.5088 -3854.3696 3633.4871 C
-3854.3665 3633.2896 -3854.4856 3633.3462 -3854.4631 3633.1895 C
-3854.4231 3633.1704 -3854.3264 3633.271 -3854.2664 3633.1936 C
-3854.4431 3633.1582 -3854.6567 3633.041 -3854.7273 3632.8916 C
-3854.7119 3633.0039 -3854.7273 3633.1575 -3854.8567 3633.1831 C
-3855.1912 3633.1975 -3854.9712 3632.9456 -3855.1663 3632.844 C
-3855.2473 3632.9812 -3855.4607 3632.8391 -3855.4663 3633.1343 C
-3855.5642 3633.1328 -3855.5823 3632.9951 -3855.6201 3632.915 C
-3855.7932 3633.0454 -3856.4287 3632.9524 -3856.2336 3633.2664 C
-3856.1892 3633.2871 L
-3856.1975 3633.2932 -3856.2073 3633.2935 -3856.2175 3633.3 C
-3856.2161 3633.3 -3856.2175 3633.3 -3856.2161 3633.3 C
-3856.2175 3633.3 L
-3856.7849 3633.5935 -3857.3962 3633.1328 -3857.9592 3633.259 C
-3857.9583 3633.1604 L
-3858.2944 3633.2732 -3858.7063 3633.2271 -3858.9463 3633.4395 C
-3859.0457 3633.4392 -3859.1809 3633.259 -3859.1384 3633.1416 C
-3859.3953 3633.2158 -3859.4241 3633.3267 -3859.7952 3633.1638 C
-3859.5369 3632.9915 -3859.8843 3633.0112 -3859.5305 3633.0376 C
-3859.8643 3632.9524 -3859.9399 3632.7942 -3860.2983 3633.064 C
-3860.1763 3632.811 -3860.5496 3632.7456 -3860.7083 3632.821 C
-3860.4744 3633.0022 L
-3860.6528 3633.0391 -3860.8088 3633.0166 -3860.9673 3632.9951 C
-3860.8816 3632.6624 L
-3861.5647 3632.2576 -3862.1135 3633.3511 -3862.6335 3632.6736 C
-3862.8142 3632.9063 -3862.2625 3632.8374 -3862.4241 3633.1096 C
-3862.7383 3633.0647 -3863.0657 3632.5872 -3863.1641 3632.5862 C
-3863.5945 3632.4019 -3863.5657 3633.0723 -3864.0161 3632.9463 C
-3863.9585 3633.0647 -3863.9041 3633.3816 -3864.2407 3633.4934 C
-3864.5552 3633.4495 -3864.6272 3632.9956 -3864.4287 3632.9004 C
-3864.3533 3632.8904 -3864.3169 3632.9282 -3864.3201 3632.9683 C
-3864.2185 3632.925 -3864.0852 3632.8743 -3864.2097 3632.7456 C
-3864.2505 3632.8643 L
-3864.4065 3632.7432 -3864.8391 3632.7559 -3864.7375 3632.561 C
-3864.9751 3632.6743 -3864.8391 3632.7559 -3864.6631 3632.8174 C
-3865.0664 3632.6455 -3865.2932 3632.8123 -3865.7083 3632.6968 C
-3865.6423 3632.7622 -3865.5815 3632.9016 -3865.6472 3632.9004 C
-3866.2561 3632.7534 -3865.9153 3633.1255 -3866.3279 3633.1775 C
-3866.5623 3632.9966 -3866.2439 3632.7456 -3866.6592 3632.8972 C
-3866.9128 3632.7747 -3866.7129 3632.5823 -3866.6121 3632.4856 C
-3866.9905 3632.7144 -3867.3191 3632.3352 -3867.5352 3632.2932 C
-3867.3359 3632.1975 L
-3867.4551 3632.2544 -3867.5527 3632.2527 -3867.6521 3632.252 C
-3867.5383 3632.4895 L
-3867.6553 3632.448 -3867.7544 3632.447 -3867.7522 3632.3484 C
-3867.8728 3632.5039 -3867.6599 3632.7432 -3867.8992 3632.9558 C
-3868.0552 3632.8352 -3868.3743 3633.0852 -3868.4282 3632.7703 C
-3867.9375 3632.8772 -3868.4824 3632.4539 -3868.0671 3632.4031 C
-3868.1472 3632.4407 -3868.2449 3632.4392 -3868.3623 3632.3975 C
-3868.3799 3632.3623 -3868.3457 3632.3323 -3868.3137 3632.3142 C
-3868.7832 3632.0327 -3868.5295 3632.6704 -3869.0161 3632.6631 C
-3868.9543 3632.4856 -3869.1289 3632.3264 -3869.2083 3632.3643 C
-3869.0122 3632.3679 -3869.1145 3632.6604 -3869.2944 3632.7964 C
-3869.6064 3632.6582 -3869.6335 3632.8992 -3869.7969 3632.8831 C
-3869.6104 3632.948 L
-3869.6736 3633.1255 -3869.8296 3633.1023 -3870.0471 3633.1582 C
-3870.0657 3633.02 -3869.8496 3633.063 -3869.9272 3633.0022 C
-3870.1687 3633.3142 -3870.4729 3632.6792 -3870.8096 3632.8894 C
-3870.9656 3632.769 -3870.8247 3632.5559 -3870.9617 3632.4744 C
-3871.3391 3632.7046 -3871.3704 3632.2312 -3871.7671 3632.4214 C
-3871.6528 3632.6599 -3871.6328 3632.6016 -3871.9121 3632.8342 C
-3871.26 3632.6663 L
-3871.6785 3633.0132 L
-3871.4817 3633.0166 -3871.2632 3632.863 -3871.1453 3632.9038 C
-3871.3447 3633.0984 -3871.3242 3633.0391 -3871.23 3633.2371 C
-3871.4993 3632.8792 -3871.7639 3633.4456 -3872.0752 3633.2039 C
-3872.0657 3632.613 L
-3872.5337 3632.3499 -3872.8972 3632.9163 -3873.5049 3632.7676 C
-3873.3096 3632.8704 L
-3873.3911 3633.105 -3873.6848 3632.9031 -3873.8816 3632.9983 C
-3873.8633 3632.8008 -3873.9863 3632.729 -3874.0703 3632.6062 C
-3874.0601 3632.7527 -3874.5151 3632.5928 -3874.5703 3632.9871 C
-3874.8416 3632.7271 L
-3875.3323 3632.6206 -3875.4016 3633.2896 -3875.8733 3633.2224 C
-3875.7312 3633.0078 -3875.9456 3632.8679 -3875.6296 3632.7144 C
-3875.7871 3632.7124 -3875.9287 3632.6763 -3875.9312 3632.813 C
-3876.0232 3632.6895 -3876.3679 3633.0791 -3876.5127 3632.8916 C
-3876.5791 3632.9783 -3876.6008 3633.1851 -3876.7776 3633.1687 C
-3876.7969 3633.1287 -3876.7769 3633.071 Y
-3876.7776 3633.1687 -3877.0537 3633.2039 -3876.8992 3633.4224 C
-3877.3843 3632.8064 -3878.2551 3633.467 -3878.6775 3632.9382 C
-3879.0212 3633.0044 -3879.4353 3633.0679 -3879.7473 3633.0823 C
-3879.7273 3633.0232 -3879.7463 3632.9839 -3879.6873 3633.0044 C
-3880.1177 3632.8208 -3879.9519 3633.571 -3880.4417 3633.3662 C
-3880.6919 3633.0471 -3880.1816 3633.1936 -3880.3376 3633.0728 C
-3880.4055 3632.4231 -3880.9287 3633.1614 -3881.2583 3632.7822 C
-3881.1785 3632.7439 L
-3881.4304 3632.5232 -3881.7932 3632.99 -3882.2048 3632.9436 C
-3882.1848 3632.8862 -3882.2024 3632.8455 V
-3882.4839 3633.1768 -3883.0168 3633.2864 -3883.4128 3633.3784 C
-3883.2896 3633.1243 -3883.2329 3633.2439 -3883.3081 3632.9856 C
-3883.4856 3633.0222 -3883.2561 3633.4004 -3883.6104 3633.4727 C
-3883.7256 3633.3335 -3883.9812 3633.2119 -3884.0151 3632.9363 C
-3883.6809 3632.9214 L
-3883.8521 3632.5647 -3884.1135 3632.9336 -3884.2896 3632.8716 C
-3884.2671 3632.7158 L
-3884.7793 3632.7664 -3884.7864 3633.1592 -3885.3369 3633.1311 C
-3885.28 3633.249 L
-3885.5808 3633.6382 -3885.5322 3633.0303 -3885.8323 3633.3196 C
-3885.9231 3632.9248 L
-3886.1216 3633.02 -3886.6184 3633.3064 -3886.9744 3633.3806 C
-3886.7727 3633.0879 -3886.3562 3632.9382 -3886.0984 3632.7644 C
-3886.2952 3632.7615 -3886.7671 3632.7935 -3886.8696 3632.9883 C
-3886.7903 3632.9502 -3886.6904 3632.8535 -3886.6121 3632.9143 C
-3886.8535 3633.2246 -3887.1711 3633.3772 -3887.5632 3633.3704 C
-3887.4937 3632.605 -3888.5852 3633.1775 -3888.8696 3632.583 C
-3889.5632 3632.8662 -3890.2456 3632.4624 -3891.0537 3632.5078 C
-3890.7671 3633.103 -3891.2896 3632.5247 -3891.24 3633.136 C
-3891.4282 3633.175 -3891.5 3633.165 -3891.5168 3633.1255 C
-3892.0872 3632.7603 L
-3892.2224 3632.5823 -3891.9082 3632.6255 -3891.9255 3632.4883 C
-3892.3376 3632.4414 -3892.0984 3632.229 -3892.3711 3632.0667 C
-3892.3152 3632.2854 -3892.5144 3632.3799 -3892.7493 3632.2964 C
-3892.4185 3632.5784 L
-3892.9944 3632.9038 -3892.9163 3632.0652 -3893.4968 3632.3875 C
-3893.3132 3632.1951 L
-3893.6111 3632.3086 -3894.4121 3632.1912 -3894.7041 3632.6824 C
-3894.7568 3632.6118 -3894.8264 3632.4446 -3894.6953 3632.4004 C
-3895.4072 3632.3267 -3896.28 3632.9231 -3896.8333 3632.6206 C
-3896.7793 3632.4712 L
-3896.9121 3632.5144 -3897.0105 3632.752 -3897.1768 3632.6016 C
-3897.1682 3632.5398 -3897.1233 3632.4524 -3897.1848 3632.4436 C
-3897.2551 3632.4951 -3897.5376 3632.7056 -3897.7136 3632.6184 C
-3897.5632 3632.4502 L
-3898.2576 3632.2544 -3898.6289 3632.8599 -3899.2112 3632.9624 C
-3899.2097 3632.5222 -3899.7561 3632.3792 -3900.0288 3632.3079 C
-3900.0193 3632.2456 L
-3900.8279 3632.1912 -3901.3928 3632.6104 -3902.1416 3632.7832 C
-3902.6064 3632.3054 -3903.7161 3632.583 -3904.4631 3632.3152 C
-3904.3489 3632.395 -3904.4817 3632.6582 -3904.6145 3632.7024 C
-3904.7898 3632.613 -3905.0991 3633.0078 -3905.0713 3632.604 C
-3905.0088 3632.6118 L
-3905.1409 3632.2158 -3905.5012 3632.321 -3905.7825 3632.3103 C
-3905.8289 3632.8384 L
-3906.5647 3632.0703 -3907.7568 3633.1206 -3908.1584 3632.4326 C
-3908.3359 3632.5647 -3908.5559 3632.563 -3908.7319 3632.6951 C
-3908.7224 3632.4119 L
-3909.2144 3632.3396 -3909.46 3632.304 -3910.0681 3632.3716 C
-3909.9441 3632.1692 L
-3910.2871 3632.1506 -3910.3772 3632.9856 -3910.6936 3633.0022 C
-3910.7888 3632.5796 L
-3911.3872 3632.5862 -3911.9929 3632.2151 -3912.5842 3632.5984 C
-3912.5745 3632.5364 -3912.5569 3632.4143 -3912.46 3632.3972 C
-3912.7417 3632.3862 -3913.5496 3632.1111 -3913.4473 3632.6912 C
-3913.4543 3632.3135 -3914.0647 3632.6543 -3914.3879 3632.8208 C
-3914.3376 3632.5422 L
-3914.6104 3632.8982 -3914.6191 3632.9956 -3915 3633.0942 C
-3915.0903 3633.0579 -3915.0791 3632.8711 -3914.9592 3632.9424 C
-3915.26 3632.7964 -3915.1936 3633.2063 -3915.5583 3633.0579 C
-3915.4224 3632.8799 L
-3915.7319 3632.8584 -3915.7073 3632.9539 -3915.8777 3633.1614 C
-3916.0723 3633.2732 -3916.4648 3633.0911 -3916.5105 3632.8391 C
-3916.5522 3632.9927 -3916.7217 3633.1982 -3916.9041 3633.1255 C
-3916.9287 3633.0303 -3916.8623 3632.9712 -3916.8289 3632.9424 C
-3917.3464 3632.7527 -3917.5984 3633.2664 -3917.9543 3632.9927 C
-3917.9617 3632.9004 -3917.9849 3632.8542 -3918.0144 3632.8264 C
-3917.6033 3632.833 -3917.2722 3632.8484 -3917.3032 3632.8687 C
-3917.3032 3632.6118 -3917.6353 3632.5667 -3917.3711 3632.2119 C
-3917.6377 3632.4055 -3918.0935 3632.8264 -3918.4172 3632.7056 C
-3918.4329 3632.6807 -3918.4482 3632.6563 -3918.46 3632.6167 C
-3918.4265 3632.5879 L
-3918.5012 3632.5623 -3918.5681 3632.5862 -3918.6311 3632.6294 C
-3918.7344 3632.5872 -3918.8 3632.5559 -3918.8992 3632.552 C
-3918.9375 3632.3396 -3919.28 3632.4375 -3919.4456 3632.4272 C
-3919.4319 3632.7083 -3919.6487 3632.6631 -3919.4456 3632.895 C
-3919.4719 3632.875 -3919.4143 3632.8616 -3919.3042 3632.8499 C
-3919.2793 3632.8416 -3919.25 3632.8374 -3919.2336 3632.8208 C
-3919.2368 3632.8286 -3919.2407 3632.8374 -3919.2449 3632.8455 C
-3919.1362 3632.8374 -3918.9944 3632.8311 -3918.8333 3632.8267 C
-3918.9641 3632.9695 -3919.1008 3633.0896 -3919.2839 3632.9336 C
-3919.3689 3633.1143 -3919.4624 3633.3 -3919.5151 3633.3872 C
-3919.7417 3632.9951 -3920.1785 3632.7832 -3920.2393 3632.5415 C
-3920.7449 3632.6992 -3921.4304 3632.6455 -3921.7483 3633.1736 C
-3921.8921 3633.2415 -3921.9136 3633.0222 -3921.9673 3632.9392 C
-3921.8843 3632.8862 -3921.7856 3632.8943 -3921.7407 3632.8184 C
-3922.0281 3632.9539 -3922.5923 3632.8711 -3922.6609 3633.24 C
-3923.0232 3633.0735 -3922.4573 3632.9004 -3922.9551 3632.9607 C
-3922.8879 3632.8479 L
-3923.8672 3632.2583 -3924.48 3633.7896 -3925.5657 3633.0327 C
-3925.4905 3633.0791 -3925.4529 3633.1006 -3925.4375 3633.1624 C
-3926.6753 3632.8286 -3927.9883 3633.4756 -3929.2097 3632.9463 C
-3929.5569 3632.8396 -3929.5945 3633.0752 -3929.8064 3633.2544 C
-3929.8816 3632.9524 L
-3930.2439 3633.3008 L
-3930.7576 3633.5559 -3931.1335 3632.5598 -3931.7839 3633.0422 C
-3931.7 3633.2456 L
-3931.9336 3633.207 -3932.4399 3633.3655 -3932.4009 3633.1316 C
-3932.4248 3633.1687 -3932.4775 3633.343 -3932.5688 3633.2371 C
-3932.5759 3633.0791 L
-3933.1497 3633.3499 L
-3933.5945 3633.2356 -3933.0801 3632.7227 -3933.7292 3632.6919 C
-3933.9705 3632.7527 -3934.4163 3633.1519 -3934.3257 3633.2576 C
-3934.2283 3633.2654 -3934.0769 3633.356 -3934.0696 3633.5144 C
-3934.2903 3633.5967 L
-3934.3303 3634.0623 -3934.5 3634.5391 -3933.9583 3634.8643 C
-3933.5808 3634.5796 L
-3933.4592 3634.8054 L
-3933.7769 3634.8196 L
-3933.5967 3635.032 -3933.4824 3634.844 -3933.3545 3634.7151 C
-3933.3242 3634.8352 -3933.2712 3634.9192 -3933.1963 3634.9639 C
-3932.8257 3634.519 L
-3932.7808 3634.7014 -3932.9919 3634.8806 -3932.7432 3634.9812 C
-3932.5696 3634.7747 -3932.9097 3634.5728 -3932.6223 3634.437 C
-3932.4417 3634.6487 -3932.4944 3634.821 -3932.2825 3634.6404 C
-3932.2527 3634.7603 -3932.2976 3634.8367 -3932.3816 3634.8894 C
-3932.1929 3634.7456 -3931.8823 3634.8286 -3931.7849 3634.5811 C
-3931.5967 3634.8423 -3931.1479 3634.5132 -3931.1665 3634.9539 C
-3931.1072 3634.8484 -3930.8342 3634.6079 -3930.6609 3634.5896 C
-3930.9775 3635.1172 -3930.0122 3634.6206 -3930.0959 3635.1863 C
-3929.8616 3634.7119 -3929.2495 3634.9756 -3928.8345 3634.7124 C
-3928.8577 3634.75 -3928.9033 3634.8264 -3928.9399 3634.8022 C
-3928.7063 3634.8416 -3928.6384 3634.9846 -3928.4883 3635.0742 C
-3928.4583 3634.6824 -3928.0945 3634.5928 -3927.8984 3634.3511 C
-3927.6121 3634.729 -3928.0723 3634.811 -3927.9824 3635.1743 C
-3927.9968 3634.8567 -3927.4849 3634.8572 -3927.5823 3634.5928 C
-3927.3633 3634.8267 -3927.3936 3634.7063 -3927.2808 3635.031 C
-3927.2424 3634.541 -3927.0769 3634.948 -3926.8953 3634.6472 C
-3926.5784 3634.8887 -3926.8137 3635.1062 -3926.4656 3634.957 C
-3926.3 3635.1072 -3926.6096 3635.2808 Y
f
1 D
-3918.3303 3634.4336 m
-3918.3303 3634.4363 -3918.3303 3634.4382 -3918.3303 3634.4392 C
-3918.4016 3634.4456 -3918.4624 3634.4512 -3918.5012 3634.4551 c
-3918.4656 3634.4512 -3918.4163 3634.4456 -3918.3303 3634.4336 C
f
-3917.6345 3634.4292 m
-3917.7192 3634.4182 -3917.8247 3634.4163 -3917.9363 3634.4182 C
-3917.9607 3634.321 -3917.9343 3634.2212 -3917.8643 3634.2263 C
-3917.9023 3634.291 -3917.7383 3634.3472 -3917.6345 3634.4292 C
f
-3919.1062 3632.4812 m
-3918.9961 3632.4414 -3918.9592 3632.4966 -3918.9441 3632.5542 C
-3918.9961 3632.5591 -3919.0569 3632.5686 -3919.1367 3632.5879 C
-3919.1399 3632.5984 -3919.1465 3632.6104 -3919.1497 3632.6223 C
-3919.1392 3632.5686 -3919.1272 3632.5183 -3919.1062 3632.4812 C
f
*U
0 D
-3919.3042 3632.8499 m
-3919.3201 3632.856 -3919.3289 3632.8679 -3919.3496 3632.8704 C
-3919.3271 3632.895 -3919.3057 3632.9163 -3919.2839 3632.9336 C
-3919.2705 3632.9038 -3919.2568 3632.8743 -3919.2449 3632.8455 C
-3919.2649 3632.8472 -3919.2856 3632.8479 -3919.3042 3632.8499 C
f
-3856.2336 3633.2664 m
-3856.2483 3633.26 L
-3856.2361 3633.271 -3856.2249 3633.2822 -3856.2175 3633.3 C
-3856.2175 3633.3 L
-3856.2273 3633.2864 -3856.2273 3633.2776 -3856.2336 3633.2664 C
f
-3908.0271 3634.967 m
-3908.0281 3634.896 L
-3908.0889 3634.9583 L
-3908.0271 3634.967 L
f
-3852.4016 3634.2312 m
-3852.3943 3634.2559 -3852.3799 3634.2815 -3852.3513 3634.303 C
-3852.3535 3634.2847 -3852.3752 3634.259 -3852.4016 3634.2312 C
f
-3850.7463 3634.2942 m
-3850.5122 3634.3943 L
-3850.6135 3634.3374 -3850.6873 3634.3103 -3850.7463 3634.2942 C
f
-3849.4736 3634.4336 m
-3849.4575 3634.3843 -3849.4529 3634.3472 -3849.4487 3634.313 C
-3849.4497 3634.3123 -3849.4504 3634.3123 -3849.4512 3634.311 C
-3849.4736 3634.4336 L
f
-3869.7092 3634.7639 m
-3869.7263 3634.7654 -3869.7432 3634.769 -3869.7583 3634.7766 c
-3869.8735 3634.8311 -3869.7952 3634.8096 -3869.7092 3634.7639 C
f
-3863.6873 3634.1072 m
-3863.7512 3634.1582 -3863.8142 3634.2083 -3863.8809 3634.24 C
-3863.7737 3634.2615 -3863.6904 3634.2671 -3863.6873 3634.1072 C
f
-3876.4336 3635.1023 m
-3876.4329 3635.1006 -3876.4336 3635.0999 -3876.4329 3635.0974 C
-3876.4473 3635.0984 -3876.46 3635.0974 -3876.4744 3635.0974 C
-3876.4336 3635.1023 L
f
-3864.1609 3634.2351 m
-3864.0537 3634.291 -3863.9641 3634.2791 -3863.8809 3634.24 C
-3863.9688 3634.2212 -3864.0723 3634.1924 -3864.1609 3634.2351 C
f
-3843.9575 3634.561 m
-3843.8962 3634.5728 L
-3843.8972 3634.5542 -3843.8936 3634.5391 -3843.8889 3634.5276 C
-3843.9575 3634.561 L
f
-3843.8889 3634.5276 m
-3843.8208 3634.4944 L
-3843.8521 3634.4944 -3843.8792 3634.4966 -3843.8889 3634.5276 C
f
-3843.6775 3634.4236 m
-3843.8208 3634.4944 L
-3843.7712 3634.4951 -3843.71 3634.5039 -3843.6775 3634.4236 C
f
-3845.6423 3634.4312 m
-3845.6616 3634.5332 L
-3845.6511 3634.512 -3845.6443 3634.479 -3845.6423 3634.4312 C
f
-3846.1543 3634.4607 m
-3846.0322 3634.4839 -3845.8479 3634.6782 -3845.6775 3634.6143 C
-3845.6616 3634.5332 L
-3845.7417 3634.6848 -3846.0383 3634.2888 -3846.1543 3634.4607 C
f
-3848.2913 3633.2007 m
-3847.8623 3633.2822 L
-3847.9373 3633.1736 -3848.0359 3633.0276 -3847.8408 3633.0015 C
-3848.3816 3632.6775 -3847.7292 3633.2444 -3848.2913 3633.2007 C
f
-3849.6216 3633.0432 m
-3849.3911 3632.9927 -3849.6243 3632.8855 -3849.6121 3632.824 C
-3849.7583 3632.9231 -3849.7937 3632.948 -3849.6216 3633.0432 C
f
-3859.2351 3633.0422 m
-3859.2119 3632.7864 L
-3859.3896 3632.8232 -3859.2136 3632.8855 -3859.2351 3633.0422 C
f
-3861.0728 3634.3643 m
-3860.8999 3634.5232 L
-3860.8176 3634.2888 L
-3861.0728 3634.3643 L
f
-3862.1584 3632.5422 m
-3862.0808 3632.5056 L
-3862.3772 3632.5984 L
-3862.1584 3632.5422 L
f
-3878.3042 3632.6331 m
-3878.2505 3632.948 L
-3878.1304 3632.8916 -3878.1052 3632.5376 -3878.3042 3632.6331 C
f
-3885.2744 3632.9539 m
-3885.3503 3632.7964 -3885.5464 3632.6951 -3885.6672 3632.8499 C
-3885.5105 3632.8716 -3885.3542 3632.9944 -3885.2744 3632.9539 C
f
-3906.1785 3632.4407 m
-3906.0383 3632.3352 L
-3906.3025 3632.4231 L
-3906.1785 3632.4407 L
f
U
U
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ Redondo 3 pt./ Adobe Calligrap) -
(hic Brush Tool/ Redondo 10 pt./ Adobe Calligraphic Brush Tool/) -
( Plano 5 pt./ Adobe Calligraphic Brush Tool/ Touch Calligraphi) -
(c Brush/ Adobe ArtOnPath Brush Tool/ Carboncillo - L\341piz/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Carboncillo - L\741piz)
(1 / Unnamed 7/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(Plano 5 pt.)
(1 5 5 0 0 90 90 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(Redondo 10 pt.)
(1 10 10 100 100 0 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(Redondo 3 pt.)
(1 3 3 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(Touch Calligraphic Brush)
(1 12 12 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registro]) 0 Xs
([Registro])
Pc
0 0 0 0 1 1 1 Xa
(Blanco)
Pc
0.839231 0.830533 0.729427 0.799985 0 0 0 Xa
(Negro)
Pc
0 0.955566 0.815427 0 1 0 0 Xa
(Rojo RGB)
Pc
0.138277 0 0.944671 0 1 1 0 Xa
(Amarillo RGB)
Pc
0.928405 0 1 0 0 1 0 Xa
(Verde RGB)
Pc
0.867063 0 0.264897 0 0 1 1 Xa
(Cian RGB)
Pc
0.914916 0.836637 0 0 0 0 1 Xa
(Azul RGB)
Pc
0.223423 0.872282 0 0 1 0 1 Xa
(Magenta RGB)
Pc
0.105684 0.96759 0.868955 0 0.756863 0.152941 0.176471 Xa
(R=193 G=39 B=45)
Pc
0 0.956969 0.798642 0 0.929412 0.109804 0.141176 Xa
(R=237 G=28 B=36)
Pc
0 0.83743 0.835233 0 0.945098 0.352941 0.141176 Xa
(R=241 G=90 B=36)
Pc
0 0.579705 0.903624 0 0.968627 0.576471 0.117647 Xa
(R=247 G=147 B=30)
Pc
0 0.431128 0.845487 0 0.984314 0.690196 0.231373 Xa
(R=251 G=176 B=59)
Pc
0.079866 0.045624 0.947021 0 0.988235 0.933333 0.129412 Xa
(R=252 G=238 B=33)
Pc
0.282872 0 0.970459 0 0.85098 0.878431 0.129412 Xa
(R=217 G=224 B=33)
Pc
0.656367 0 0.960967 0 0.54902 0.776471 0.247059 Xa
(R=140 G=198 B=63)
Pc
0.901793 0 0.963989 0 0.223529 0.709804 0.290196 Xa
(R=57 G=181 B=74)
Pc
0.975158 0.120607 0.998352 0 0 0.572549 0.270588 Xa
(R=0 G=146 B=69)
Pc
0.986755 0.437873 1 0.097139 0 0.407843 0.215686 Xa
(R=0 G=104 B=55)
Pc
0.92755 0 0.789181 0 0.133333 0.709804 0.45098 Xa
(R=34 G=181 B=115)
Pc
0.947204 0 0.525383 0 0 0.662745 0.615686 Xa
(R=0 G=169 B=157)
Pc
0.921324 0.065553 0.117769 0 0.160784 0.670588 0.886275 Xa
(R=41 G=171 B=226)
Pc
0.962982 0.503319 0.036286 0 0 0.443137 0.737255 Xa
(R=0 G=113 B=188)
Pc
0.941466 0.942046 0 0 0.180392 0.192157 0.572549 Xa
(R=46 G=49 B=146)
Pc
0.968292 1 0.381842 0.050019 0.105882 0.078431 0.392157 Xa
(R=27 G=20 B=100)
Pc
0.70959 0.958556 0 0 0.4 0.176471 0.568627 Xa
(R=102 G=45 B=145)
Pc
0.422827 0.967742 0 0 0.576471 0.152941 0.560784 Xa
(R=147 G=39 B=143)
Pc
0.314031 0.999634 0.450294 0.000183 0.619608 0 0.364706 Xa
(R=158 G=0 B=93)
Pc
0 0.971557 0.49189 0 0.831373 0.078431 0.352941 Xa
(R=212 G=20 B=90)
Pc
0 0.953674 0.245945 0 0.929412 0.117647 0.47451 Xa
(R=237 G=30 B=121)
Pc
0.233494 0.320806 0.411719 0 0.780392 0.698039 0.6 Xa
(R=199 G=178 B=153)
Pc
0.441688 0.489357 0.558984 0 0.6 0.52549 0.458824 Xa
(R=153 G=134 B=117)
Pc
0.58407 0.642969 0.669703 0.094728 0.45098 0.388235 0.341176 Xa
(R=115 G=99 B=87)
Pc
0.68304 0.743496 0.703792 0.275914 0.32549 0.278431 0.254902 Xa
(R=83 G=71 B=65)
Pc
0.211429 0.44831 0.638422 0 0.776471 0.611765 0.427451 Xa
(R=198 G=156 B=109)
Pc
0.358251 0.581964 0.766781 0.003754 0.65098 0.486275 0.321569 Xa
(R=166 G=124 B=82)
Pc
0.432746 0.702876 0.877378 0.076661 0.54902 0.384314 0.223529 Xa
(R=140 G=98 B=57)
Pc
0.472084 0.78378 0.968475 0.196994 0.458824 0.298039 0.141176 Xa
(R=117 G=76 B=36)
Pc
0.514733 0.860227 1 0.329625 0.376471 0.219608 0.07451 Xa
(R=96 G=56 B=19)
Pc
0.613855 0.915068 0.96463 0.535637 0.258824 0.129412 0.043137 Xa
(R=66 G=33 B=11)
Pc
Bb
2 (Blanco, Negro) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Blanco, Negro)
Pc
Bb
2 (Cielo) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Cielo)
Pc
Bb
2 (Orqu\755dea) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Orqu\755dea)
Pc
Bb
0 0 0 0 Bh
2 (Verano) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Verano)
Pc
Bb
0 0 0 0 Bh
2 (Anillo dorado) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Anillo dorado)
Pc
(A todo ritmo) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(A todo ritmo)
Pc
(Alyssa) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Alyssa)
Pc
0.839231 0.830533 0.729427 0.799985 0 0 0 Xa
(R=0 G=0 B=0)
Pc
0.839231 0.824887 0.725856 0.694942 0.101961 0.101961 0.101961 Xa
(R=26 G=26 B=26)
Pc
0.817349 0.784878 0.692012 0.448615 0.2 0.2 0.2 Xa
(R=51 G=51 B=51)
Pc
0.759762 0.707637 0.639521 0.219486 0.301961 0.301961 0.301961 Xa
(R=77 G=77 B=77)
Pc
0.688624 0.61062 0.57882 0.061097 0.4 0.4 0.4 Xa
(R=102 G=102 B=102)
Pc
0.580621 0.473701 0.469703 0 0.501961 0.501961 0.501961 Xa
(R=128 G=128 B=128)
Pc
0.464363 0.356939 0.361425 0 0.6 0.6 0.6 Xa
(R=153 G=153 B=153)
Pc
0.344488 0.259037 0.270146 0 0.701961 0.701961 0.701961 Xa
(R=179 G=179 B=179)
Pc
0.231724 0.180423 0.186984 0 0.8 0.8 0.8 Xa
(R=204 G=204 B=204)
Pc
0.118502 0.096284 0.10074 0 0.901961 0.901961 0.901961 Xa
(R=230 G=230 B=230)
Pc
0.066804 0.056519 0.053986 0 0.94902 0.94902 0.94902 Xa
(R=242 G=242 B=242)
Pc
0.885161 0.151492 0 0 0.247059 0.662745 0.960784 Xa
(R=63 G=169 B=245)
Pc
0.731319 0 0.962554 0 0.478431 0.788235 0.262745 Xa
(R=122 G=201 B=67)
Pc
0 0.59295 0.888975 0 1 0.576471 0.117647 Xa
(R=255 G=147 B=30)
Pc
0 0.947021 0.761562 0 1 0.113725 0.145098 Xa
(R=255 G=29 B=37)
Pc
0 0.733516 0.092348 0 1 0.482353 0.67451 Xa
(R=255 G=123 B=172)
Pc
0.336645 0.142794 0.167056 0 0.741176 0.8 0.831373 Xa
(R=189 G=204 B=212)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 4 255 79 255 0 50 Lb
(Capa 5) Ln
0 A
1 Ap
0 R
0.839231 0.830533 0.729427 0.799985 0 0 0 XA
0 J 0 j 1 w 10 M []0 d0 XR
377.5 -584.5 m
337.5 -584.5 L
337.5 -568.0633 l
337.5 -564.9908 339.9908 -562.5 343.0633 -562.5 c
371.9367 -562.5 l
375.0092 -562.5 377.5 -564.9908 377.5 -568.0633 c
377.5 -584.5 L
s
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 3 79 79 255 0 50 Lb
(Capa 4) Ln
0 A
0 R
0.839231 0.830533 0.729427 0.799985 0 0 0 XA
0 J 0 j 1 w 10 M []0 d0 XR
462.0805 -584.5 m
447.9195 -584.5 l
446.5832 -584.5 445.5 -583.4168 445.5 -582.0805 c
445.5 -550.9195 l
445.5 -549.5832 446.5832 -548.5 447.9195 -548.5 c
462.0805 -548.5 l
463.4168 -548.5 464.5 -549.5832 464.5 -550.9195 c
464.5 -582.0805 l
464.5 -583.4168 463.4168 -584.5 462.0805 -584.5 c
s
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Capa 1) Ln
0 A
0 R
0.839231 0.830533 0.729427 0.799985 0 0 0 XA
0 J 0 j 1 w 10 M []0 d0 XR
618.4728 -847.8235 m
566.9643 -847.8235 l
563.4721 -847.8235 560.6412 -844.9926 560.6412 -841.5004 c
560.6412 -716.1466 l
560.6412 -712.6545 563.4721 -709.8235 566.9643 -709.8235 c
618.4728 -709.8235 l
621.9649 -709.8235 624.7959 -712.6545 624.7959 -716.1466 c
624.7959 -841.5004 l
624.7959 -844.9926 621.9649 -847.8235 618.4728 -847.8235 c
s
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 2 79 255 79 0 50 Lb
(Capa 3) Ln
0 A
0 Ap
0 R
0.839231 0.830533 0.729427 0.799985 0 0 0 XA
0 J 0 j 1 w 10 M []0 d0 XR
314.4617 -584.5 m
521.8477 -584.5 l
527.3494 -584.5 531.8094 -588.96 531.8094 -594.4617 c
531.8094 -919.0383 l
531.8094 -924.54 527.3494 -929 521.8477 -929 c
314.4617 -929 l
308.96 -929 304.5 -924.54 304.5 -919.0383 c
304.5 -594.4617 l
304.5 -588.96 308.96 -584.5 314.4617 -584.5 c
s
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
